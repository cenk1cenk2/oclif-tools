{
	"id": 0,
	"name": "@cenk1cenk2/oclif-common",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 344,
			"name": "config",
			"kind": 1024,
			"kindString": "Property",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/@types/config/index.d.ts",
					"line": 60,
					"character": 8
				}
			],
			"type": {
				"type": "reference",
				"name": "IUtil",
				"qualifiedName": "c.IUtil",
				"package": "@types/config"
			}
		},
		{
			"id": 407,
			"name": "fs",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 408,
					"name": "copy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 23,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 24,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 25,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 409,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 410,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 411,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 412,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1552,
										"name": "CopyOptions",
										"qualifiedName": "CopyOptions",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 413,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 414,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 415,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 416,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 417,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 24,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 418,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 419,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 420,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 421,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 422,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 423,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1552,
										"name": "CopyOptions",
										"qualifiedName": "CopyOptions",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 424,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 425,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 25,
													"character": 80
												}
											],
											"signatures": [
												{
													"id": 426,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 427,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 428,
					"name": "copySync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 26,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 429,
							"name": "copySync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 430,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 431,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 432,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1559,
										"name": "CopyOptionsSync",
										"qualifiedName": "CopyOptionsSync",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 433,
					"name": "copyFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 28,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 29,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 30,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 434,
							"name": "copyFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 435,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 436,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 437,
									"name": "flags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 438,
							"name": "copyFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 439,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 440,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 441,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 442,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 29,
													"character": 62
												}
											],
											"signatures": [
												{
													"id": 443,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 444,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 445,
							"name": "copyFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 446,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 447,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 448,
									"name": "flags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 449,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 450,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 30,
													"character": 77
												}
											],
											"signatures": [
												{
													"id": 451,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 452,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 453,
					"name": "move",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 32,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 33,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 34,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 454,
							"name": "move",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 455,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 456,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 457,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1568,
										"name": "MoveOptions",
										"qualifiedName": "MoveOptions",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 458,
							"name": "move",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 459,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 460,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 461,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 462,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 33,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 463,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 464,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 465,
							"name": "move",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 466,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 467,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 468,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1568,
										"name": "MoveOptions",
										"qualifiedName": "MoveOptions",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 469,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 470,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 34,
													"character": 80
												}
											],
											"signatures": [
												{
													"id": 471,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 472,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 473,
					"name": "moveSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 35,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 474,
							"name": "moveSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 475,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 476,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 477,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1568,
										"name": "MoveOptions",
										"qualifiedName": "MoveOptions",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 478,
					"name": "createFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 37,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 38,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 479,
							"name": "createFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 480,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 481,
							"name": "createFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 482,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 483,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 484,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 38,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 485,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 486,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 487,
					"name": "createFileSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 39,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 488,
							"name": "createFileSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 489,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 490,
					"name": "createSymlink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 41,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 42,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 491,
							"name": "createSymlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 492,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 493,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 494,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1549,
										"name": "SymlinkType",
										"qualifiedName": "SymlinkType",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 495,
							"name": "createSymlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 496,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 497,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 498,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1549,
										"name": "SymlinkType",
										"qualifiedName": "SymlinkType",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 499,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 500,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 42,
													"character": 87
												}
											],
											"signatures": [
												{
													"id": 501,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 502,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 503,
					"name": "createSymlinkSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 43,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 504,
							"name": "createSymlinkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 505,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 506,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 507,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1549,
										"name": "SymlinkType",
										"qualifiedName": "SymlinkType",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 508,
					"name": "ensureDir",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 45,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 46,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 47,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 509,
							"name": "ensureDir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 510,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 511,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 1566,
												"name": "EnsureOptions",
												"qualifiedName": "EnsureOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 512,
							"name": "ensureDir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 513,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 514,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 515,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 46,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 516,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 517,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 518,
							"name": "ensureDir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 519,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 520,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 1566,
												"name": "EnsureOptions",
												"qualifiedName": "EnsureOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								},
								{
									"id": 521,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 522,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 47,
													"character": 85
												}
											],
											"signatures": [
												{
													"id": 523,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 524,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 525,
					"name": "ensureDirSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 48,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 526,
							"name": "ensureDirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 527,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 528,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 1566,
												"name": "EnsureOptions",
												"qualifiedName": "EnsureOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 529,
					"name": "mkdirs",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 50,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 51,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 530,
							"name": "mkdirs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 531,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 532,
							"name": "mkdirs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 533,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 534,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 535,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 51,
													"character": 46
												}
											],
											"signatures": [
												{
													"id": 536,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 537,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 538,
					"name": "mkdirp",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 52,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 53,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 539,
							"name": "mkdirp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 540,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 541,
							"name": "mkdirp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 542,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 543,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 544,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 53,
													"character": 46
												}
											],
											"signatures": [
												{
													"id": 545,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 546,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 547,
					"name": "mkdirsSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 54,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 548,
							"name": "mkdirsSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 549,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 550,
					"name": "mkdirpSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 55,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 551,
							"name": "mkdirpSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 552,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 553,
					"name": "outputFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 57,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 62,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 63,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 554,
							"name": "outputFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 555,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 556,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 557,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1577,
												"name": "WriteFileOptions",
												"qualifiedName": "WriteFileOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 558,
							"name": "outputFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 559,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 560,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 561,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 562,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 62,
													"character": 62
												}
											],
											"signatures": [
												{
													"id": 563,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 564,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 565,
							"name": "outputFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 566,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 567,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 568,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1577,
												"name": "WriteFileOptions",
												"qualifiedName": "WriteFileOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								},
								{
									"id": 569,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 570,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 67,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 571,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 572,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 573,
					"name": "outputFileSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 69,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 574,
							"name": "outputFileSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 575,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 576,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 577,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1577,
												"name": "WriteFileOptions",
												"qualifiedName": "WriteFileOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 578,
					"name": "readJson",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 71,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 72,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 73,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 579,
							"name": "readJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 580,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 581,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1571,
												"name": "ReadOptions",
												"qualifiedName": "ReadOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 582,
							"name": "readJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 583,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 584,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 585,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 72,
													"character": 49
												}
											],
											"signatures": [
												{
													"id": 586,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 587,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 588,
															"name": "jsonObject",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 589,
							"name": "readJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 590,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 591,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1571,
												"name": "ReadOptions",
												"qualifiedName": "ReadOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								},
								{
									"id": 592,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 593,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 76,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 594,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 595,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 596,
															"name": "jsonObject",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 597,
					"name": "readJSON",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 78,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 79,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 80,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 598,
							"name": "readJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 599,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 600,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1571,
												"name": "ReadOptions",
												"qualifiedName": "ReadOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 601,
							"name": "readJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 602,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 603,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 604,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 79,
													"character": 49
												}
											],
											"signatures": [
												{
													"id": 605,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 606,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 607,
															"name": "jsonObject",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 608,
							"name": "readJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 609,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 610,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1571,
												"name": "ReadOptions",
												"qualifiedName": "ReadOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								},
								{
									"id": 611,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 612,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 83,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 613,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 614,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 615,
															"name": "jsonObject",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 616,
					"name": "readJsonSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 86,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 617,
							"name": "readJsonSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 618,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 619,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1571,
												"name": "ReadOptions",
												"qualifiedName": "ReadOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 620,
					"name": "readJSONSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 87,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 621,
							"name": "readJSONSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 622,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 623,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1571,
												"name": "ReadOptions",
												"qualifiedName": "ReadOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 624,
					"name": "remove",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 89,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 90,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 625,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 626,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 627,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 628,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 89,
													"character": 46
												}
											],
											"signatures": [
												{
													"id": 629,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 630,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 631,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 632,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 633,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 634,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 90,
													"character": 47
												}
											],
											"signatures": [
												{
													"id": 635,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 636,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 637,
					"name": "removeSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 91,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 638,
							"name": "removeSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 639,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 640,
					"name": "outputJSON",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 93,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 94,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 100,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 641,
							"name": "outputJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 642,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 643,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 644,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 645,
							"name": "outputJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 646,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 647,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 648,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								},
								{
									"id": 649,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 650,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 98,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 651,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 652,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 653,
							"name": "outputJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 654,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 655,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 656,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 657,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 100,
													"character": 62
												}
											],
											"signatures": [
												{
													"id": 658,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 659,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 660,
					"name": "outputJson",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 101,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 102,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 108,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 661,
							"name": "outputJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 662,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 663,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 664,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 665,
							"name": "outputJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 666,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 667,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 668,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								},
								{
									"id": 669,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 670,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 106,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 671,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 672,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 673,
							"name": "outputJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 674,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 675,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 676,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 677,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 108,
													"character": 62
												}
											],
											"signatures": [
												{
													"id": 678,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 679,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 680,
					"name": "outputJsonSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 109,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 681,
							"name": "outputJsonSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 682,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 683,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 684,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 685,
					"name": "outputJSONSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 110,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 686,
							"name": "outputJSONSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 687,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 688,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 689,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 690,
					"name": "writeJSON",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 112,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 113,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 114,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 691,
							"name": "writeJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 692,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 693,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 694,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 695,
							"name": "writeJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 696,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 697,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 698,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 699,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 113,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 700,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 701,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 702,
							"name": "writeJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 703,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 704,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 705,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								},
								{
									"id": 706,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 707,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 118,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 708,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 709,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 710,
					"name": "writeJson",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 120,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 121,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 122,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 711,
							"name": "writeJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 712,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 713,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 714,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 715,
							"name": "writeJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 716,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 717,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 718,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 719,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 121,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 720,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 721,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 722,
							"name": "writeJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 723,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 724,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 725,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								},
								{
									"id": 726,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 727,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 126,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 728,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 729,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 730,
					"name": "writeJsonSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 129,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 731,
							"name": "writeJsonSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 732,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 733,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 734,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 735,
					"name": "writeJSONSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 130,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 736,
							"name": "writeJSONSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 737,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 738,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 739,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1581,
												"name": "WriteOptions",
												"qualifiedName": "WriteOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 740,
					"name": "ensureFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 132,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 133,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 741,
							"name": "ensureFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 742,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 743,
							"name": "ensureFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 744,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 745,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 746,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 133,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 747,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 748,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 749,
					"name": "ensureFileSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 134,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 750,
							"name": "ensureFileSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 751,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 752,
					"name": "ensureLink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 136,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 137,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 753,
							"name": "ensureLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 754,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 755,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 756,
							"name": "ensureLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 757,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 758,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 759,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 760,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 137,
													"character": 64
												}
											],
											"signatures": [
												{
													"id": 761,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 762,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1506,
					"name": "createLink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 139,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1507,
							"name": "createLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1508,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1509,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1510,
							"name": "createLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1511,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1512,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1513,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1514,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 137,
													"character": 64
												}
											],
											"signatures": [
												{
													"id": 1515,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1516,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 763,
					"name": "ensureLinkSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 140,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 764,
							"name": "ensureLinkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 765,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 766,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1517,
					"name": "createLinkSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 142,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1518,
							"name": "createLinkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1519,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1520,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 767,
					"name": "ensureSymlink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 144,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 145,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 146,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 768,
							"name": "ensureSymlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 769,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 770,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 771,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1549,
										"name": "SymlinkType",
										"qualifiedName": "SymlinkType",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 772,
							"name": "ensureSymlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 773,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 774,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 775,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1549,
										"name": "SymlinkType",
										"qualifiedName": "SymlinkType",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 776,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 777,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 145,
													"character": 86
												}
											],
											"signatures": [
												{
													"id": 778,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 779,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 780,
							"name": "ensureSymlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 781,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 782,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 783,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 784,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 146,
													"character": 67
												}
											],
											"signatures": [
												{
													"id": 785,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 786,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 787,
					"name": "ensureSymlinkSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 147,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 788,
							"name": "ensureSymlinkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 789,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 790,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 791,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1549,
										"name": "SymlinkType",
										"qualifiedName": "SymlinkType",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 792,
					"name": "emptyDir",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 149,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 150,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 793,
							"name": "emptyDir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 794,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 795,
							"name": "emptyDir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 796,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 797,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 798,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 150,
													"character": 49
												}
											],
											"signatures": [
												{
													"id": 799,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 800,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1521,
					"name": "emptydir",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 151,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1522,
							"name": "emptydir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1523,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1524,
							"name": "emptydir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1525,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1526,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1527,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 150,
													"character": 49
												}
											],
											"signatures": [
												{
													"id": 1528,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1529,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 801,
					"name": "emptyDirSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 153,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 802,
							"name": "emptyDirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 803,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1530,
					"name": "emptydirSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 154,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1531,
							"name": "emptydirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1532,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 804,
					"name": "pathExists",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 156,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 157,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 805,
							"name": "pathExists",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 806,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 807,
							"name": "pathExists",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 808,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 809,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 810,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 157,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 811,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 812,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Error",
																"qualifiedName": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 813,
															"name": "exists",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 814,
					"name": "pathExistsSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 158,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 815,
							"name": "pathExistsSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 816,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 817,
					"name": "access",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 163,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 164,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 165,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 818,
							"name": "access",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 819,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 820,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 821,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 163,
													"character": 49
												}
											],
											"signatures": [
												{
													"id": 822,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 823,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 824,
							"name": "access",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 825,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 826,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 827,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 828,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 164,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 829,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 830,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 831,
							"name": "access",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 832,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 833,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 834,
					"name": "appendFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 167,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 177,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 178,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 835,
							"name": "appendFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 836,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 837,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 838,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 839,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 840,
													"name": "encoding",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 171,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 841,
													"name": "mode",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 172,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 842,
													"name": "flag",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 173,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														840,
														841,
														842
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 170,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 843,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 844,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 175,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 845,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 846,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 847,
							"name": "appendFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 848,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 849,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 850,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 851,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 177,
													"character": 73
												}
											],
											"signatures": [
												{
													"id": 852,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 853,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 854,
							"name": "appendFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 855,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 856,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 857,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 858,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 859,
															"name": "encoding",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 183,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 860,
															"name": "mode",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 184,
																	"character": 14
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 861,
															"name": "flag",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 185,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																859,
																860,
																861
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 182,
															"character": 10
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 862,
					"name": "chmod",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 191,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 192,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 863,
							"name": "chmod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 864,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 865,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1550,
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 866,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 867,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 191,
													"character": 60
												}
											],
											"signatures": [
												{
													"id": 868,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 869,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 870,
							"name": "chmod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 871,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 872,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1550,
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 873,
					"name": "chown",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 194,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 195,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 874,
							"name": "chown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 875,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 876,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 877,
									"name": "gid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 878,
							"name": "chown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 879,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 880,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 881,
									"name": "gid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 882,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 883,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 195,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 884,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 885,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 886,
					"name": "close",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 197,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 198,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 887,
							"name": "close",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 888,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 889,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 890,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 197,
													"character": 44
												}
											],
											"signatures": [
												{
													"id": 891,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 892,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 893,
							"name": "close",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 894,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 895,
					"name": "fchmod",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 200,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 201,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 896,
							"name": "fchmod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 897,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 898,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1550,
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 899,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 900,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 200,
													"character": 57
												}
											],
											"signatures": [
												{
													"id": 901,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 902,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 903,
							"name": "fchmod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 904,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 905,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1550,
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 906,
					"name": "fchown",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 203,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 204,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 907,
							"name": "fchown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 908,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 909,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 910,
									"name": "gid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 911,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 912,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 203,
													"character": 71
												}
											],
											"signatures": [
												{
													"id": 913,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 914,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 915,
							"name": "fchown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 916,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 917,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 918,
									"name": "gid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 919,
					"name": "fdatasync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 206,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 207,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 920,
							"name": "fdatasync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 921,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 922,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 923,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 206,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 924,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 925,
							"name": "fdatasync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 926,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 927,
					"name": "fstat",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 209,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 210,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 928,
							"name": "fstat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 929,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 930,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 931,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 209,
													"character": 44
												}
											],
											"signatures": [
												{
													"id": 932,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 933,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 934,
															"name": "stats",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 935,
							"name": "fstat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 936,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 937,
					"name": "fsync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 212,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 213,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 938,
							"name": "fsync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 939,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 940,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 941,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 212,
													"character": 44
												}
											],
											"signatures": [
												{
													"id": 942,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 943,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 944,
							"name": "fsync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 945,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 946,
					"name": "ftruncate",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 215,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 216,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 217,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 947,
							"name": "ftruncate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 948,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 949,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 950,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 215,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 951,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 952,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 953,
							"name": "ftruncate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 954,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 955,
									"name": "len",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 956,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 957,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 216,
													"character": 61
												}
											],
											"signatures": [
												{
													"id": 958,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 959,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 960,
							"name": "ftruncate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 961,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 962,
									"name": "len",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 963,
					"name": "futimes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 219,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 220,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 221,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 222,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 964,
							"name": "futimes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 965,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 966,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 967,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 968,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 969,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 219,
													"character": 76
												}
											],
											"signatures": [
												{
													"id": 970,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 971,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 972,
							"name": "futimes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 973,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 974,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Date",
										"qualifiedName": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 975,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Date",
										"qualifiedName": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 976,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 977,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 220,
													"character": 72
												}
											],
											"signatures": [
												{
													"id": 978,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 979,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 980,
							"name": "futimes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 981,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 982,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 983,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 984,
							"name": "futimes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 985,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 986,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Date",
										"qualifiedName": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 987,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Date",
										"qualifiedName": "Date",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 988,
					"name": "lchown",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 224,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 225,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 989,
							"name": "lchown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 990,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 991,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 992,
									"name": "gid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 993,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 994,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 224,
													"character": 75
												}
											],
											"signatures": [
												{
													"id": 995,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 996,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 997,
							"name": "lchown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 998,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 999,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1000,
									"name": "gid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1001,
					"name": "link",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 227,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 228,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1002,
							"name": "link",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1003,
									"name": "existingPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1004,
									"name": "newPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1005,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1006,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 227,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 1007,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1008,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1009,
							"name": "link",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1010,
									"name": "existingPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1011,
									"name": "newPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1012,
					"name": "lstat",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 230,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 231,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1013,
							"name": "lstat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1014,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1015,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1016,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 230,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 1017,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1018,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1019,
															"name": "stats",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1020,
							"name": "lstat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1021,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1022,
					"name": "mkdir",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 238,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 244,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 249,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1023,
							"name": "mkdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777."
									}
								]
							},
							"parameters": [
								{
									"id": 1024,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1025,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "No arguments other than a possible exception are given to the completion callback."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1026,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 238,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 1027,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1028,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1029,
							"name": "mkdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777."
									}
								]
							},
							"parameters": [
								{
									"id": 1030,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1031,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1550,
												"name": "Mode",
												"qualifiedName": "Mode",
												"package": "@types/fs-extra"
											},
											{
												"type": "reference",
												"id": 3799,
												"name": "MakeDirectoryOptions",
												"qualifiedName": "MakeDirectoryOptions",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1032,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "No arguments other than a possible exception are given to the completion callback."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1033,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 247,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1034,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1035,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1036,
							"name": "mkdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1037,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1038,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1550,
												"name": "Mode",
												"qualifiedName": "Mode",
												"package": "@types/fs-extra"
											},
											{
												"type": "reference",
												"id": 3799,
												"name": "MakeDirectoryOptions",
												"qualifiedName": "MakeDirectoryOptions",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1039,
					"name": "mkdirSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 250,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1040,
							"name": "mkdirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1041,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1042,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1550,
												"name": "Mode",
												"qualifiedName": "Mode",
												"package": "@types/fs-extra"
											},
											{
												"type": "reference",
												"id": 3799,
												"name": "MakeDirectoryOptions",
												"qualifiedName": "MakeDirectoryOptions",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1043,
					"name": "open",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 252,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 257,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 263,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1044,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1045,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1046,
									"name": "flags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1047,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1048,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 255,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1049,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1050,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1051,
															"name": "fd",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1052,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1053,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1054,
									"name": "flags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1055,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1550,
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 1056,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1057,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 261,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1058,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1059,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1060,
															"name": "fd",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1061,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1062,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1063,
									"name": "flags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1064,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1550,
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1065,
					"name": "opendir",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 265,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 266,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 271,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1066,
							"name": "opendir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1067,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1068,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1069,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 265,
													"character": 42
												}
											],
											"signatures": [
												{
													"id": 1070,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1071,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1072,
															"name": "dir",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2423,
																"name": "Dir",
																"qualifiedName": "Dir",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1073,
							"name": "opendir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1074,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1075,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 3880,
										"name": "OpenDirOptions",
										"qualifiedName": "OpenDirOptions",
										"package": "@types/node"
									}
								},
								{
									"id": 1076,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1077,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 269,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 1078,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1079,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1080,
															"name": "dir",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2423,
																"name": "Dir",
																"qualifiedName": "Dir",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1081,
							"name": "opendir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1082,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1083,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3880,
										"name": "OpenDirOptions",
										"qualifiedName": "OpenDirOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2423,
										"name": "fs.Dir",
										"qualifiedName": "Dir",
										"package": "@types/node"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1084,
					"name": "read",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 273,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 281,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1085,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1086,
									"name": "TBuffer",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1551,
										"name": "ArrayBufferView",
										"qualifiedName": "ArrayBufferView",
										"package": "@types/fs-extra"
									}
								}
							],
							"parameters": [
								{
									"id": 1087,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1088,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1086,
										"name": "TBuffer",
										"qualifiedName": "TBuffer",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 1089,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1090,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1091,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1092,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1093,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 279,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1094,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1095,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1096,
															"name": "bytesRead",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1097,
															"name": "buffer",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1086,
																"name": "TBuffer",
																"qualifiedName": "TBuffer",
																"package": "@types/fs-extra"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1098,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1099,
									"name": "TBuffer",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1551,
										"name": "ArrayBufferView",
										"qualifiedName": "ArrayBufferView",
										"package": "@types/fs-extra"
									}
								}
							],
							"parameters": [
								{
									"id": 1100,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1101,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1099,
										"name": "TBuffer",
										"qualifiedName": "TBuffer",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 1102,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1103,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1104,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1105,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1106,
													"name": "bytesRead",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 287,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1107,
													"name": "buffer",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 287,
															"character": 32
														}
													],
													"type": {
														"type": "reference",
														"id": 1099,
														"name": "TBuffer",
														"qualifiedName": "TBuffer",
														"package": "@types/fs-extra"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1106,
														1107
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 287,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1108,
					"name": "readFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 289,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 290,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 295,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 300,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 305,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 306,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1109,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1110,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1111,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1112,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 289,
													"character": 60
												}
											],
											"signatures": [
												{
													"id": 1113,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1114,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1115,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Buffer",
																"qualifiedName": "global.Buffer",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1116,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1117,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1118,
									"name": "encoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1119,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1120,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 293,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1121,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1122,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1123,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1124,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1125,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1126,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1127,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1128,
															"name": "flag",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 297,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1128
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 297,
															"character": 13
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1129,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1130,
															"name": "encoding",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 297,
																	"character": 47
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1131,
															"name": "flag",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 297,
																	"character": 82
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1130,
																1131
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 297,
															"character": 45
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 1132,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1133,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 298,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1134,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1135,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1136,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Buffer",
																"qualifiedName": "global.Buffer",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1137,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1138,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1139,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1140,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1141,
															"name": "flag",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 302,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1141
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 302,
															"character": 13
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1142,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1143,
															"name": "encoding",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 302,
																	"character": 47
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1144,
															"name": "flag",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 302,
																	"character": 82
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1143,
																1144
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 302,
															"character": 45
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1145,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1146,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1147,
									"name": "encoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1148,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1149,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1150,
					"name": "readdir",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 308,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 309,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 313,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 321,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 325,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1151,
							"name": "readdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1152,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1153,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1154,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 308,
													"character": 50
												}
											],
											"signatures": [
												{
													"id": 1155,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1156,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1157,
															"name": "files",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1158,
							"name": "readdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1159,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1160,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "buffer"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1161,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1162,
															"name": "encoding",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 311,
																	"character": 26
																}
															],
															"type": {
																"type": "literal",
																"value": "buffer"
															}
														},
														{
															"id": 1163,
															"name": "withFileTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 311,
																	"character": 46
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1162,
																1163
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 311,
															"character": 24
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Buffer",
											"qualifiedName": "global.Buffer",
											"package": "@types/node"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1164,
							"name": "readdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1165,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1166,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1167,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1168,
															"name": "encoding",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 316,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1169,
															"name": "withFileTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 316,
																	"character": 54
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1168,
																1169
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 316,
															"character": 10
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1170,
							"name": "readdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1171,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1172,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1173,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1174,
													"name": "encoding",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 323,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1175,
													"name": "withFileTypes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 323,
															"character": 71
														}
													],
													"type": {
														"type": "literal",
														"value": false
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1174,
														1175
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 323,
													"character": 14
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Buffer",
													"qualifiedName": "global.Buffer",
													"package": "@types/node"
												}
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1176,
							"name": "readdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1177,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1178,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1179,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1180,
													"name": "encoding",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 327,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1181,
													"name": "withFileTypes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 327,
															"character": 70
														}
													],
													"type": {
														"type": "literal",
														"value": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1180,
														1181
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 327,
													"character": 13
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2405,
											"name": "fs.Dirent",
											"qualifiedName": "Dirent",
											"package": "@types/node"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1182,
					"name": "readlink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 330,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 331,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1183,
							"name": "readlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1184,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1185,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1186,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 330,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 1187,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1188,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1189,
															"name": "linkString",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1190,
							"name": "readlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1191,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1192,
					"name": "realpath",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 333,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 334,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 339,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 342,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1193,
							"name": "realpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1194,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1195,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1196,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 333,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 1197,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1198,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1199,
															"name": "resolvedPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1200,
							"name": "realpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1201,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1202,
									"name": "cache",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1203,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 336,
													"character": 11
												}
											],
											"indexSignature": {
												"id": 1204,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 1205,
														"name": "path",
														"kind": 32768,
														"flags": {
															"isExternal": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									}
								},
								{
									"id": 1206,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1207,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 337,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1208,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1209,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1210,
															"name": "resolvedPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1211,
							"name": "realpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1212,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1213,
									"name": "cache",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1214,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 339,
													"character": 49
												}
											],
											"indexSignature": {
												"id": 1215,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 1216,
														"name": "path",
														"kind": 32768,
														"flags": {
															"isExternal": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1217,
					"name": "realpath",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1218,
							"name": "native",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 343,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 1219,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1220,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1221,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "buffer"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1222,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 1223,
																	"name": "encoding",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/fs-extra/index.d.ts",
																			"line": 344,
																			"character": 36
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": "buffer"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1223
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 344,
																	"character": 34
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1224,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1225,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1226,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1227,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 1228,
																	"name": "encoding",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/fs-extra/index.d.ts",
																			"line": 347,
																			"character": 23
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1228
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 347,
																	"character": 21
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1229,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1230,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1231,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1232,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 1233,
																	"name": "encoding",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/fs-extra/index.d.ts",
																			"line": 349,
																			"character": 36
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1233
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/fs-extra/index.d.ts",
																	"line": 349,
																	"character": 34
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1234,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1235,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1236,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous ["
											},
											{
												"kind": "code",
												"text": "`realpath(3)`"
											},
											{
												"kind": "text",
												"text": "](http://man7.org/linux/man-pages/man3/realpath.3.html).\n\nThe "
											},
											{
												"kind": "code",
												"text": "`callback`"
											},
											{
												"kind": "text",
												"text": " gets two arguments "
											},
											{
												"kind": "code",
												"text": "`(err, resolvedPath)`"
											},
											{
												"kind": "text",
												"text": ".\n\nOnly paths that can be converted to UTF8 strings are supported.\n\nThe optional "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument can be a string specifying an encoding, or an\nobject with an "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " property specifying the character encoding to use for\nthe path passed to the callback. If the "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " is set to "
											},
											{
												"kind": "code",
												"text": "`'buffer'`"
											},
											{
												"kind": "text",
												"text": ",\nthe path returned will be passed as a "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": " object.\n\nOn Linux, when Node.js is linked against musl libc, the procfs file system must\nbe mounted on "
											},
											{
												"kind": "code",
												"text": "`/proc`"
											},
											{
												"kind": "text",
												"text": " in order for this function to work. Glibc does not have\nthis restriction."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v9.2.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1237,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1238,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2334,
												"name": "EncodingOption",
												"qualifiedName": "EncodingOption",
												"package": "@types/node"
											}
										},
										{
											"id": 1239,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1240,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 1320,
															"character": 75
														}
													],
													"signatures": [
														{
															"id": 1241,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1242,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "ErrnoException",
																		"qualifiedName": "NodeJS.ErrnoException",
																		"package": "@types/node"
																	}
																},
																{
																	"id": 1243,
																	"name": "resolvedPath",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 1244,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1245,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1246,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2329,
												"name": "BufferEncodingOption",
												"qualifiedName": "BufferEncodingOption",
												"package": "@types/node"
											}
										},
										{
											"id": 1247,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1248,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 1321,
															"character": 81
														}
													],
													"signatures": [
														{
															"id": 1249,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1250,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "ErrnoException",
																		"qualifiedName": "NodeJS.ErrnoException",
																		"package": "@types/node"
																	}
																},
																{
																	"id": 1251,
																	"name": "resolvedPath",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Buffer",
																		"qualifiedName": "global.Buffer",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 1252,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1253,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1254,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2334,
												"name": "EncodingOption",
												"qualifiedName": "EncodingOption",
												"package": "@types/node"
											}
										},
										{
											"id": 1255,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1256,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 1322,
															"character": 75
														}
													],
													"signatures": [
														{
															"id": 1257,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1258,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "ErrnoException",
																		"qualifiedName": "NodeJS.ErrnoException",
																		"package": "@types/node"
																	}
																},
																{
																	"id": 1259,
																	"name": "resolvedPath",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								},
								{
									"id": 1260,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1261,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1262,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1263,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 1323,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 1264,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1265,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "ErrnoException",
																		"qualifiedName": "NodeJS.ErrnoException",
																		"package": "@types/node"
																	}
																},
																{
																	"id": 1266,
																	"name": "resolvedPath",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								1218
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 333,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 334,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 339,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 342,
							"character": 17
						}
					]
				},
				{
					"id": 1267,
					"name": "rename",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 357,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 358,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1268,
							"name": "rename",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1269,
									"name": "oldPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1270,
									"name": "newPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1271,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1272,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 357,
													"character": 71
												}
											],
											"signatures": [
												{
													"id": 1273,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1274,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1275,
							"name": "rename",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1276,
									"name": "oldPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1277,
									"name": "newPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1278,
					"name": "rm",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 366,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1279,
							"name": "rm",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously removes files and directories (modeled on the standard POSIX\n"
									},
									{
										"kind": "code",
										"text": "`rm`"
									},
									{
										"kind": "text",
										"text": " utility).\n\nOnly available in node >= v14.14.0"
									}
								]
							},
							"parameters": [
								{
									"id": 1280,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1281,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1282,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1283,
													"name": "force",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 369,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1284,
													"name": "maxRetries",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 370,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1285,
													"name": "recursive",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 371,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1286,
													"name": "retryDelay",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 372,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1283,
														1284,
														1285,
														1286
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 368,
													"character": 14
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1287,
					"name": "rmdir",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 381,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 382,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1288,
							"name": "rmdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronous rmdir - removes the directory specified in {path}"
									}
								]
							},
							"parameters": [
								{
									"id": 1289,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1290,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "No arguments other than a possible exception are given to the completion callback."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1291,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 381,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 1292,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1293,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1294,
							"name": "rmdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1295,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1296,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3790,
										"name": "RmDirOptions",
										"qualifiedName": "RmDirOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1297,
					"name": "stat",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 384,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 385,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1298,
							"name": "stat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1299,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1300,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1301,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 384,
													"character": 47
												}
											],
											"signatures": [
												{
													"id": 1302,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1303,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1304,
															"name": "stats",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1305,
							"name": "stat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1306,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1307,
					"name": "symlink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 387,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 393,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 394,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1308,
							"name": "symlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1309,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1310,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1311,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1549,
										"name": "SymlinkType",
										"qualifiedName": "SymlinkType",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 1312,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1313,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 391,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1314,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1315,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1316,
							"name": "symlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1317,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1318,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1319,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1320,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 393,
													"character": 68
												}
											],
											"signatures": [
												{
													"id": 1321,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1322,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1323,
							"name": "symlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1324,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1325,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1326,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1549,
										"name": "SymlinkType",
										"qualifiedName": "SymlinkType",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1327,
					"name": "truncate",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 396,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 397,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 398,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1328,
							"name": "truncate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1329,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1330,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1331,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 396,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 1332,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1333,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1334,
							"name": "truncate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1335,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1336,
									"name": "len",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1337,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1338,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 397,
													"character": 64
												}
											],
											"signatures": [
												{
													"id": 1339,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1340,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1341,
							"name": "truncate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1342,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1343,
									"name": "len",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1344,
					"name": "unlink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 405,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 406,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1345,
							"name": "unlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronous unlink - deletes the file specified in {path}"
									}
								]
							},
							"parameters": [
								{
									"id": 1346,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1347,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "No arguments other than a possible exception are given to the completion callback."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1348,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 405,
													"character": 49
												}
											],
											"signatures": [
												{
													"id": 1349,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1350,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1351,
							"name": "unlink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1352,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1353,
					"name": "utimes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 408,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 414,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 415,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 416,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1354,
							"name": "utimes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1355,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1356,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1357,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1358,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1359,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 412,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1360,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1361,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1362,
							"name": "utimes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1363,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1364,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Date",
										"qualifiedName": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 1365,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Date",
										"qualifiedName": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 1366,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1367,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 414,
													"character": 75
												}
											],
											"signatures": [
												{
													"id": 1368,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1369,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1370,
							"name": "utimes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1371,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1372,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1373,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1374,
							"name": "utimes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1375,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1376,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Date",
										"qualifiedName": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 1377,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Date",
										"qualifiedName": "Date",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1378,
					"name": "write",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 418,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 426,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 433,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 438,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 444,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 451,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 458,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1379,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1380,
									"name": "TBuffer",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1551,
										"name": "ArrayBufferView",
										"qualifiedName": "ArrayBufferView",
										"package": "@types/fs-extra"
									}
								}
							],
							"parameters": [
								{
									"id": 1381,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1382,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1380,
										"name": "TBuffer",
										"qualifiedName": "TBuffer",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 1383,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1384,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1385,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1386,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1387,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 424,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1388,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1389,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1390,
															"name": "written",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1391,
															"name": "buffer",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1380,
																"name": "TBuffer",
																"qualifiedName": "TBuffer",
																"package": "@types/fs-extra"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1392,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1393,
									"name": "TBuffer",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1551,
										"name": "ArrayBufferView",
										"qualifiedName": "ArrayBufferView",
										"package": "@types/fs-extra"
									}
								}
							],
							"parameters": [
								{
									"id": 1394,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1395,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1393,
										"name": "TBuffer",
										"qualifiedName": "TBuffer",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 1396,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1397,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1398,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1399,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 431,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1400,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1401,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1402,
															"name": "written",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1403,
															"name": "buffer",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1393,
																"name": "TBuffer",
																"qualifiedName": "TBuffer",
																"package": "@types/fs-extra"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1404,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1405,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1406,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1407,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1408,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 436,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1409,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1410,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1411,
															"name": "written",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1412,
															"name": "str",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1413,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1414,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1415,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1416,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1417,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1418,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 442,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1419,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1420,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1421,
															"name": "written",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1422,
															"name": "str",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1423,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1424,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1425,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1426,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1427,
									"name": "encoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1428,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1429,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 449,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1430,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1431,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1432,
															"name": "written",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1433,
															"name": "str",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1434,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1435,
									"name": "TBuffer",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1551,
										"name": "ArrayBufferView",
										"qualifiedName": "ArrayBufferView",
										"package": "@types/fs-extra"
									}
								}
							],
							"parameters": [
								{
									"id": 1436,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1437,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1435,
										"name": "TBuffer",
										"qualifiedName": "TBuffer",
										"package": "@types/fs-extra"
									}
								},
								{
									"id": 1438,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1439,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1440,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1441,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1442,
													"name": "bytesWritten",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 457,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1443,
													"name": "buffer",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 457,
															"character": 35
														}
													],
													"type": {
														"type": "reference",
														"id": 1435,
														"name": "TBuffer",
														"qualifiedName": "TBuffer",
														"package": "@types/fs-extra"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1442,
														1443
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 457,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1444,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1445,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1446,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1447,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1448,
									"name": "encoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1449,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1450,
													"name": "bytesWritten",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 463,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1451,
													"name": "buffer",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/fs-extra/index.d.ts",
															"line": 463,
															"character": 35
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1450,
														1451
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 463,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1452,
					"name": "writeFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 465,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 466,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 471,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1453,
							"name": "writeFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1454,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1455,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1456,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1457,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 465,
													"character": 72
												}
											],
											"signatures": [
												{
													"id": 1458,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1459,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1460,
							"name": "writeFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1461,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1462,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1463,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1577,
												"name": "WriteFileOptions",
												"qualifiedName": "WriteFileOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1464,
							"name": "writeFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1465,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1466,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1467,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1577,
												"name": "WriteFileOptions",
												"qualifiedName": "WriteFileOptions",
												"package": "@types/fs-extra"
											}
										]
									}
								},
								{
									"id": 1468,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1469,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 475,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1470,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1471,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1472,
					"name": "writev",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 478,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 484,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 489,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1473,
							"name": "writev",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1474,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1475,
									"name": "buffers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ArrayBufferView",
											"qualifiedName": "NodeJS.ArrayBufferView",
											"package": "@types/node"
										}
									}
								},
								{
									"id": 1476,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1477,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1478,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 482,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 1479,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1480,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1481,
															"name": "bytesWritten",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1482,
															"name": "buffers",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "ArrayBufferView",
																	"qualifiedName": "NodeJS.ArrayBufferView",
																	"package": "@types/node"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1483,
							"name": "writev",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1484,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1485,
									"name": "buffers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ArrayBufferView",
											"qualifiedName": "NodeJS.ArrayBufferView",
											"package": "@types/node"
										}
									}
								},
								{
									"id": 1486,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1487,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 487,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 1488,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1489,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1490,
															"name": "bytesWritten",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1491,
															"name": "buffers",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "ArrayBufferView",
																	"qualifiedName": "NodeJS.ArrayBufferView",
																	"package": "@types/node"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1492,
							"name": "writev",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1493,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1494,
									"name": "buffers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ArrayBufferView",
											"qualifiedName": "NodeJS.ArrayBufferView",
											"package": "@types/node"
										}
									}
								},
								{
									"id": 1495,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1589,
										"name": "WritevResult",
										"qualifiedName": "WritevResult",
										"package": "@types/fs-extra"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1496,
					"name": "mkdtemp",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 496,
							"character": 16
						},
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 497,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1497,
							"name": "mkdtemp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronous mkdtemp - Creates a unique temporary directory. Generates six random characters to be appended behind a required prefix to create a unique temporary directory."
									}
								]
							},
							"parameters": [
								{
									"id": 1498,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 1499,
							"name": "mkdtemp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1500,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1501,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1502,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/fs-extra/index.d.ts",
													"line": 497,
													"character": 50
												}
											],
											"signatures": [
												{
													"id": 1503,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1504,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1505,
															"name": "folder",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1533,
					"name": "PathEntry",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1534,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 500,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1535,
							"name": "stats",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 501,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1534,
								1535
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 499,
							"character": 17
						}
					]
				},
				{
					"id": 1536,
					"name": "PathEntryStream",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1537,
							"name": "read",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 505,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1538,
									"name": "read",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1533,
										"name": "PathEntry",
										"qualifiedName": "PathEntry",
										"package": "@types/fs-extra"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								1537
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 504,
							"character": 17
						}
					]
				},
				{
					"id": 1539,
					"name": "CopyFilterSync",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 508,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1540,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 508,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 1541,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1542,
											"name": "src",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1543,
											"name": "dest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 1544,
					"name": "CopyFilterAsync",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 509,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1545,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 509,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 1546,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1547,
											"name": "src",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1548,
											"name": "dest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1549,
					"name": "SymlinkType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 511,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "dir"
							},
							{
								"type": "literal",
								"value": "file"
							},
							{
								"type": "literal",
								"value": "junction"
							}
						]
					}
				},
				{
					"id": 1550,
					"name": "Mode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 513,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1551,
					"name": "ArrayBufferView",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 515,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "NodeJS.TypedArray",
								"qualifiedName": "NodeJS.TypedArray",
								"package": "@types/node"
							},
							{
								"type": "reference",
								"name": "DataView",
								"qualifiedName": "DataView",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1552,
					"name": "CopyOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1553,
							"name": "dereference",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 518,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1554,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 519,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1555,
							"name": "preserveTimestamps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 520,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1556,
							"name": "errorOnExist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 521,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1557,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 522,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1539,
										"name": "CopyFilterSync",
										"qualifiedName": "CopyFilterSync",
										"package": "@types/fs-extra"
									},
									{
										"type": "reference",
										"id": 1544,
										"name": "CopyFilterAsync",
										"qualifiedName": "CopyFilterAsync",
										"package": "@types/fs-extra"
									}
								]
							}
						},
						{
							"id": 1558,
							"name": "recursive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 523,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1553,
								1554,
								1555,
								1556,
								1557,
								1558
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 517,
							"character": 17
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1559,
							"name": "CopyOptionsSync"
						}
					]
				},
				{
					"id": 1559,
					"name": "CopyOptionsSync",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1561,
							"name": "dereference",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 518,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1553,
								"name": "CopyOptions.dereference"
							}
						},
						{
							"id": 1562,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 519,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1554,
								"name": "CopyOptions.overwrite"
							}
						},
						{
							"id": 1563,
							"name": "preserveTimestamps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 520,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1555,
								"name": "CopyOptions.preserveTimestamps"
							}
						},
						{
							"id": 1564,
							"name": "errorOnExist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 521,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1556,
								"name": "CopyOptions.errorOnExist"
							}
						},
						{
							"id": 1565,
							"name": "recursive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 523,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1558,
								"name": "CopyOptions.recursive"
							}
						},
						{
							"id": 1560,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 527,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 1539,
								"name": "CopyFilterSync",
								"qualifiedName": "CopyFilterSync",
								"package": "@types/fs-extra"
							},
							"overwrites": {
								"type": "reference",
								"id": 1557,
								"name": "CopyOptions.filter"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1561,
								1562,
								1563,
								1564,
								1565,
								1560
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 526,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1552,
							"name": "CopyOptions",
							"qualifiedName": "CopyOptions",
							"package": "@types/fs-extra"
						}
					]
				},
				{
					"id": 1566,
					"name": "EnsureOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1567,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 531,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1567
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 530,
							"character": 17
						}
					]
				},
				{
					"id": 1568,
					"name": "MoveOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1569,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 535,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1570,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 536,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1569,
								1570
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 534,
							"character": 17
						}
					]
				},
				{
					"id": 1571,
					"name": "ReadOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1572,
							"name": "throws",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 540,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1573,
							"name": "fs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 541,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1574,
							"name": "reviver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 542,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1575,
							"name": "encoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 543,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1576,
							"name": "flag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 544,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1572,
								1573,
								1574,
								1575,
								1576
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 539,
							"character": 17
						}
					]
				},
				{
					"id": 1577,
					"name": "WriteFileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1578,
							"name": "encoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 548,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1579,
							"name": "flag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 549,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1580,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 550,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1578,
								1579,
								1580
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 547,
							"character": 17
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1581,
							"name": "WriteOptions"
						}
					]
				},
				{
					"id": 1581,
					"name": "WriteOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1586,
							"name": "encoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 548,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1578,
								"name": "WriteFileOptions.encoding"
							}
						},
						{
							"id": 1587,
							"name": "flag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 549,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1579,
								"name": "WriteFileOptions.flag"
							}
						},
						{
							"id": 1588,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 550,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1580,
								"name": "WriteFileOptions.mode"
							}
						},
						{
							"id": 1582,
							"name": "fs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 554,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1583,
							"name": "replacer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 555,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1584,
							"name": "spaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 556,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1585,
							"name": "EOL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 557,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1586,
								1587,
								1588,
								1582,
								1583,
								1584,
								1585
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 553,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1577,
							"name": "WriteFileOptions",
							"qualifiedName": "WriteFileOptions",
							"package": "@types/fs-extra"
						}
					]
				},
				{
					"id": 1589,
					"name": "WritevResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1590,
							"name": "bytesWritten",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 561,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1591,
							"name": "buffers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/fs-extra/index.d.ts",
									"line": 562,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1551,
									"name": "ArrayBufferView",
									"qualifiedName": "ArrayBufferView",
									"package": "@types/fs-extra"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1590,
								1591
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/fs-extra/index.d.ts",
							"line": 560,
							"character": 17
						}
					]
				},
				{
					"id": 2322,
					"name": "PathLike",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Valid types for path values in \"fs\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 30,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							},
							{
								"type": "reference",
								"name": "URL",
								"qualifiedName": "URL",
								"package": "@types/node"
							}
						]
					}
				},
				{
					"id": 2323,
					"name": "PathOrFileDescriptor",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 31,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2322,
								"name": "PathLike",
								"qualifiedName": "PathLike",
								"package": "@types/node"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 2324,
					"name": "TimeLike",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 32,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 2325,
					"name": "NoParamCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 33,
							"character": 16
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2326,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 33,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 2327,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2328,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "NodeJS.ErrnoException",
														"qualifiedName": "NodeJS.ErrnoException",
														"package": "@types/node"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 2329,
					"name": "BufferEncodingOption",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 34,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "buffer"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2330,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 2331,
											"name": "encoding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 37,
													"character": 14
												}
											],
											"type": {
												"type": "literal",
												"value": "buffer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2331
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs.d.ts",
											"line": 36,
											"character": 10
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2332,
					"name": "ObjectEncodingOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 2333,
							"name": "encoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 40,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BufferEncoding",
								"qualifiedName": "global.BufferEncoding",
								"package": "@types/node"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2333
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 39,
							"character": 21
						}
					]
				},
				{
					"id": 2334,
					"name": "EncodingOption",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 42,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2332,
								"name": "ObjectEncodingOptions",
								"qualifiedName": "ObjectEncodingOptions",
								"package": "@types/node"
							},
							{
								"type": "reference",
								"name": "BufferEncoding",
								"qualifiedName": "global.BufferEncoding",
								"package": "@types/node"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 2335,
					"name": "OpenMode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 43,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2336,
					"name": "StatsBase",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 2337,
							"name": "isFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 46,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2338,
									"name": "isFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2339,
							"name": "isDirectory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 47,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2340,
									"name": "isDirectory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2341,
							"name": "isBlockDevice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2342,
									"name": "isBlockDevice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2343,
							"name": "isCharacterDevice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2344,
									"name": "isCharacterDevice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2345,
							"name": "isSymbolicLink",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2346,
									"name": "isSymbolicLink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2347,
							"name": "isFIFO",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2348,
									"name": "isFIFO",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2349,
							"name": "isSocket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 52,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2350,
									"name": "isSocket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2351,
							"name": "dev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2352,
							"name": "ino",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2353,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 55,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2354,
							"name": "nlink",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 56,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2355,
							"name": "uid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2356,
							"name": "gid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 58,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2357,
							"name": "rdev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 59,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2358,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 60,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2359,
							"name": "blksize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 61,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2360,
							"name": "blocks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2361,
							"name": "atimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 63,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2362,
							"name": "mtimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 64,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2363,
							"name": "ctimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 65,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2364,
							"name": "birthtimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 2369,
								"name": "T",
								"qualifiedName": "StatsBase.T",
								"package": "@types/node"
							}
						},
						{
							"id": 2365,
							"name": "atime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 67,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2366,
							"name": "mtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 68,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2367,
							"name": "ctime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 69,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 2368,
							"name": "birthtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 70,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								2337,
								2339,
								2341,
								2343,
								2345,
								2347,
								2349
							]
						},
						{
							"title": "Properties",
							"children": [
								2351,
								2352,
								2353,
								2354,
								2355,
								2356,
								2357,
								2358,
								2359,
								2360,
								2361,
								2362,
								2363,
								2364,
								2365,
								2366,
								2367,
								2368
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 45,
							"character": 21
						}
					],
					"typeParameters": [
						{
							"id": 2369,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExternal": true
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2370,
							"name": "Stats"
						},
						{
							"type": "reference",
							"id": 3883,
							"name": "BigIntStats"
						}
					]
				},
				{
					"id": 2370,
					"name": "Stats",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`fs.Stats`"
							},
							{
								"kind": "text",
								"text": " object provides information about a file.\n\nObjects returned from "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "stat",
								"target": 1297
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "lstat",
								"target": 1012
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "fstat",
								"target": 927
							},
							{
								"kind": "text",
								"text": " and\ntheir synchronous counterparts are of this type.\nIf "
							},
							{
								"kind": "code",
								"text": "`bigint`"
							},
							{
								"kind": "text",
								"text": " in the "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": " passed to those methods is true, the numeric values\nwill be "
							},
							{
								"kind": "code",
								"text": "`bigint`"
							},
							{
								"kind": "text",
								"text": " instead of "
							},
							{
								"kind": "code",
								"text": "`number`"
							},
							{
								"kind": "text",
								"text": ", and the object will contain additional\nnanosecond-precision properties suffixed with "
							},
							{
								"kind": "code",
								"text": "`Ns`"
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "```console\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.1,\n  mtimeMs: 1318289051000.1,\n  ctimeMs: 1318289051000.1,\n  birthtimeMs: 1318289051000.1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```"
							},
							{
								"kind": "text",
								"text": "\n\n"
							},
							{
								"kind": "code",
								"text": "`bigint`"
							},
							{
								"kind": "text",
								"text": " version:\n\n"
							},
							{
								"kind": "code",
								"text": "```console\nBigIntStats {\n  dev: 2114n,\n  ino: 48064969n,\n  mode: 33188n,\n  nlink: 1n,\n  uid: 85n,\n  gid: 100n,\n  rdev: 0n,\n  size: 527n,\n  blksize: 4096n,\n  blocks: 8n,\n  atimeMs: 1318289051000n,\n  mtimeMs: 1318289051000n,\n  ctimeMs: 1318289051000n,\n  birthtimeMs: 1318289051000n,\n  atimeNs: 1318289051000000000n,\n  mtimeNs: 1318289051000000000n,\n  ctimeNs: 1318289051000000000n,\n  birthtimeNs: 1318289051000000000n,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.1.21"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2371,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 2372,
									"name": "new Stats",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StatsBase<number>.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "StatsBase<number>.constructor"
							}
						},
						{
							"id": 2373,
							"name": "isFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 46,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2374,
									"name": "isFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "StatsBase.isFile"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "StatsBase.isFile"
							}
						},
						{
							"id": 2375,
							"name": "isDirectory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 47,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2376,
									"name": "isDirectory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2340,
										"name": "StatsBase.isDirectory"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "StatsBase.isDirectory"
							}
						},
						{
							"id": 2377,
							"name": "isBlockDevice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2378,
									"name": "isBlockDevice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2342,
										"name": "StatsBase.isBlockDevice"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "StatsBase.isBlockDevice"
							}
						},
						{
							"id": 2379,
							"name": "isCharacterDevice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2380,
									"name": "isCharacterDevice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2344,
										"name": "StatsBase.isCharacterDevice"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "StatsBase.isCharacterDevice"
							}
						},
						{
							"id": 2381,
							"name": "isSymbolicLink",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2382,
									"name": "isSymbolicLink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2346,
										"name": "StatsBase.isSymbolicLink"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "StatsBase.isSymbolicLink"
							}
						},
						{
							"id": 2383,
							"name": "isFIFO",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2384,
									"name": "isFIFO",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2348,
										"name": "StatsBase.isFIFO"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "StatsBase.isFIFO"
							}
						},
						{
							"id": 2385,
							"name": "isSocket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 52,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2386,
									"name": "isSocket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2350,
										"name": "StatsBase.isSocket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2349,
								"name": "StatsBase.isSocket"
							}
						},
						{
							"id": 2387,
							"name": "dev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2351,
								"name": "StatsBase.dev"
							}
						},
						{
							"id": 2388,
							"name": "ino",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "StatsBase.ino"
							}
						},
						{
							"id": 2389,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 55,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2353,
								"name": "StatsBase.mode"
							}
						},
						{
							"id": 2390,
							"name": "nlink",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 56,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "StatsBase.nlink"
							}
						},
						{
							"id": 2391,
							"name": "uid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2355,
								"name": "StatsBase.uid"
							}
						},
						{
							"id": 2392,
							"name": "gid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 58,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "StatsBase.gid"
							}
						},
						{
							"id": 2393,
							"name": "rdev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 59,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2357,
								"name": "StatsBase.rdev"
							}
						},
						{
							"id": 2394,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 60,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "StatsBase.size"
							}
						},
						{
							"id": 2395,
							"name": "blksize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 61,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2359,
								"name": "StatsBase.blksize"
							}
						},
						{
							"id": 2396,
							"name": "blocks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "StatsBase.blocks"
							}
						},
						{
							"id": 2397,
							"name": "atimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 63,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2361,
								"name": "StatsBase.atimeMs"
							}
						},
						{
							"id": 2398,
							"name": "mtimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 64,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2362,
								"name": "StatsBase.mtimeMs"
							}
						},
						{
							"id": 2399,
							"name": "ctimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 65,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2363,
								"name": "StatsBase.ctimeMs"
							}
						},
						{
							"id": 2400,
							"name": "birthtimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2364,
								"name": "StatsBase.birthtimeMs"
							}
						},
						{
							"id": 2401,
							"name": "atime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 67,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2365,
								"name": "StatsBase.atime"
							}
						},
						{
							"id": 2402,
							"name": "mtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 68,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2366,
								"name": "StatsBase.mtime"
							}
						},
						{
							"id": 2403,
							"name": "ctime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 69,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2367,
								"name": "StatsBase.ctime"
							}
						},
						{
							"id": 2404,
							"name": "birthtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 70,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2368,
								"name": "StatsBase.birthtime"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2371
							]
						},
						{
							"title": "Methods",
							"children": [
								2373,
								2375,
								2377,
								2379,
								2381,
								2383,
								2385
							]
						},
						{
							"title": "Properties",
							"children": [
								2387,
								2388,
								2389,
								2390,
								2391,
								2392,
								2393,
								2394,
								2395,
								2396,
								2397,
								2398,
								2399,
								2400,
								2401,
								2402,
								2403,
								2404
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 72,
							"character": 21
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 133,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2336,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "StatsBase",
							"qualifiedName": "StatsBase",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 2405,
					"name": "Dirent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A representation of a directory entry, which can be a file or a subdirectory\nwithin the directory, as returned by reading from an "
							},
							{
								"kind": "code",
								"text": "`fs.Dir`"
							},
							{
								"kind": "text",
								"text": ". The\ndirectory entry is a combination of the file name and file type pairs.\n\nAdditionally, when "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "readdir",
								"target": 1150
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "readdirSync",
								"target": 1733
							},
							{
								"kind": "text",
								"text": " is called with\nthe "
							},
							{
								"kind": "code",
								"text": "`withFileTypes`"
							},
							{
								"kind": "text",
								"text": " option set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the resulting array is filled with "
							},
							{
								"kind": "code",
								"text": "`fs.Dirent`"
							},
							{
								"kind": "text",
								"text": " objects, rather than strings or "
							},
							{
								"kind": "code",
								"text": "`Buffer`"
							},
							{
								"kind": "text",
								"text": " s."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v10.10.0"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2406,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 2407,
									"name": "new Dirent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2405,
										"name": "Dirent",
										"qualifiedName": "Dirent",
										"package": "@types/node"
									}
								}
							]
						},
						{
							"id": 2408,
							"name": "isFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 148,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2409,
									"name": "isFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": " object describes a regular file."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.10.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2410,
							"name": "isDirectory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 154,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2411,
									"name": "isDirectory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": " object describes a file system\ndirectory."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.10.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2412,
							"name": "isBlockDevice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 159,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2413,
									"name": "isBlockDevice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": " object describes a block device."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.10.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2414,
							"name": "isCharacterDevice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 164,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2415,
									"name": "isCharacterDevice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": " object describes a character device."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.10.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2416,
							"name": "isSymbolicLink",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2417,
									"name": "isSymbolicLink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": " object describes a symbolic link."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.10.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2418,
							"name": "isFIFO",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 175,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2419,
									"name": "isFIFO",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": " object describes a first-in-first-out\n(FIFO) pipe."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.10.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2420,
							"name": "isSocket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 180,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2421,
									"name": "isSocket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": " object describes a socket."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.10.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2422,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file name that this "
									},
									{
										"kind": "code",
										"text": "`fs.Dirent`"
									},
									{
										"kind": "text",
										"text": " object refers to. The type of this\nvalue is determined by the "
									},
									{
										"kind": "code",
										"text": "`options.encoding`"
									},
									{
										"kind": "text",
										"text": " passed to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "readdir",
										"target": 1150
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "readdirSync",
										"target": 1733
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.10.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 186,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2406
							]
						},
						{
							"title": "Methods",
							"children": [
								2408,
								2410,
								2412,
								2414,
								2416,
								2418,
								2420
							]
						},
						{
							"title": "Properties",
							"children": [
								2422
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 143,
							"character": 17
						}
					]
				},
				{
					"id": 2423,
					"name": "Dir",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A class representing a directory stream.\n\nCreated by "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "opendir",
								"target": 1065
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "opendirSync",
								"target": 1952
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`fsPromises.opendir()`"
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { opendir } from 'fs/promises';\n\ntry {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}\n```"
							},
							{
								"kind": "text",
								"text": "\n\nWhen using the async iterator, the "
							},
							{
								"kind": "code",
								"text": "`fs.Dir`"
							},
							{
								"kind": "text",
								"text": " object will be automatically\nclosed after the iterator exits."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v12.12.0"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2424,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 2425,
									"name": "new Dir",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2423,
										"name": "Dir",
										"qualifiedName": "Dir",
										"package": "@types/node"
									}
								}
							]
						},
						{
							"id": 2426,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The read-only path of this directory as was provided to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "opendir",
										"target": 1065
									},
									{
										"kind": "text",
										"text": ","
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "opendirSync",
										"target": 1952
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`fsPromises.opendir()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v12.12.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 214,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2443,
							"name": "[asyncIterator]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 218,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2444,
									"name": "[asyncIterator]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously iterates over the directory via "
											},
											{
												"kind": "code",
												"text": "`readdir(3)`"
											},
											{
												"kind": "text",
												"text": " until all entries have been read."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2405,
												"name": "Dirent",
												"qualifiedName": "Dirent",
												"package": "@types/node"
											}
										],
										"name": "AsyncIterableIterator",
										"qualifiedName": "AsyncIterableIterator",
										"package": "typescript"
									},
									"implementationOf": {
										"type": "reference",
										"name": "AsyncIterable.__@asyncIterator@105"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "AsyncIterable.__@asyncIterator@105"
							}
						},
						{
							"id": 2427,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 227,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 228,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2428,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously close the directory's underlying resource handle.\nSubsequent reads will result in errors.\n\nA promise is returned that will be resolved after the resource has been\nclosed."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v12.12.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2429,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2430,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2325,
												"name": "NoParamCallback",
												"qualifiedName": "NoParamCallback",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2431,
							"name": "closeSync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 234,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2432,
									"name": "closeSync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Synchronously close the directory's underlying resource handle.\nSubsequent reads will result in errors."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v12.12.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2433,
							"name": "read",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 247,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 248,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2434,
									"name": "read",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously read the next directory entry via ["
											},
											{
												"kind": "code",
												"text": "`readdir(3)`"
											},
											{
												"kind": "text",
												"text": "](http://man7.org/linux/man-pages/man3/readdir.3.html) as an "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": ".\n\nA promise is returned that will be resolved with an "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": ", or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "if there are no more directory entries to read.\n\nDirectory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v12.12.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "containing {fs.Dirent|null}"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2405,
												"name": "Dirent",
												"qualifiedName": "Dirent",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2435,
									"name": "read",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2436,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2437,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 248,
															"character": 17
														}
													],
													"signatures": [
														{
															"id": 2438,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2439,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "ErrnoException",
																		"qualifiedName": "NodeJS.ErrnoException",
																		"package": "@types/node"
																	}
																},
																{
																	"id": 2440,
																	"name": "dirEnt",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 2405,
																		"name": "Dirent",
																		"qualifiedName": "Dirent",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2441,
							"name": "readSync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 261,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2442,
									"name": "readSync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Synchronously read the next directory entry as an "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": ". See the\nPOSIX ["
											},
											{
												"kind": "code",
												"text": "`readdir(3)`"
											},
											{
												"kind": "text",
												"text": "](http://man7.org/linux/man-pages/man3/readdir.3.html) documentation for more detail.\n\nIf there are no more directory entries to read, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " will be returned.\n\nDirectory entries returned by this function are in no particular order as\nprovided by the operating system's underlying directory mechanisms.\nEntries added or removed while iterating over the directory might not be\nincluded in the iteration results."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v12.12.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2405,
										"name": "Dirent",
										"qualifiedName": "Dirent",
										"package": "@types/node"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2424
							]
						},
						{
							"title": "Properties",
							"children": [
								2426
							]
						},
						{
							"title": "Methods",
							"children": [
								2443,
								2427,
								2431,
								2433,
								2441
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 209,
							"character": 17
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2405,
									"name": "Dirent",
									"qualifiedName": "Dirent",
									"package": "@types/node"
								}
							],
							"name": "AsyncIterable",
							"qualifiedName": "AsyncIterable",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2445,
					"name": "StatWatcher",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Class: fs.StatWatcher"
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v14.3.0, v12.20.0\nExtends "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "\nA successful call to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "watchFile",
										"target": 1828
									},
									{
										"kind": "text",
										"text": " method will return a new fs.StatWatcher object."
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2450,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 317,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2451,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`emitter.on(eventName, listener)`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2452,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2453,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2454,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 317,
															"character": 66
														}
													],
													"signatures": [
														{
															"id": 2455,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2456,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.addListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.addListener"
							}
						},
						{
							"id": 2457,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 348,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2458,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function to the end of the listeners array for the\nevent named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ". No checks are made to see if the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " has\nalready been added. Multiple calls passing the same combination of "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "and "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " will result in the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " being added, and called, multiple\ntimes.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
											},
											{
												"kind": "code",
												"text": "`emitter.prependListener()`"
											},
											{
												"kind": "text",
												"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.101"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2459,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2460,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2461,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 348,
															"character": 57
														}
													],
													"signatures": [
														{
															"id": 2462,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2463,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						},
						{
							"id": 2464,
							"name": "once",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 377,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2465,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds a **one-time**"
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ". The\nnext time "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " is triggered, this listener is removed and then invoked.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
											},
											{
												"kind": "code",
												"text": "`emitter.prependOnceListener()`"
											},
											{
												"kind": "text",
												"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.3.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2466,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2467,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2468,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 377,
															"character": 59
														}
													],
													"signatures": [
														{
															"id": 2469,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2470,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.once"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 2471,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 457,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2472,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes the specified "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " from the listener array for the event named"
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
											},
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ", then "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`removeAllListeners()`"
											},
											{
												"kind": "text",
												"text": " calls _after_ emitting and_before_ the last listener finishes execution will\nnot remove them from"
											},
											{
												"kind": "code",
												"text": "`emit()`"
											},
											{
												"kind": "text",
												"text": " in progress. Subsequent events behave as expected.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
											},
											{
												"kind": "code",
												"text": "`emitter.listeners()`"
											},
											{
												"kind": "text",
												"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " will remove the most\nrecently added instance. In the example the "
											},
											{
												"kind": "code",
												"text": "`once('ping')`"
											},
											{
												"kind": "text",
												"text": "listener is removed:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2473,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2474,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2475,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 457,
															"character": 69
														}
													],
													"signatures": [
														{
															"id": 2476,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2477,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.removeListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeListener"
							}
						},
						{
							"id": 2478,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 462,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2479,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`emitter.removeListener()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2480,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2481,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2482,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 462,
															"character": 58
														}
													],
													"signatures": [
														{
															"id": 2483,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2484,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.off"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.off"
							}
						},
						{
							"id": 2485,
							"name": "removeAllListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 473,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2486,
									"name": "removeAllListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes all listeners, or those of the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2487,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.removeAllListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeAllListeners"
							}
						},
						{
							"id": 2488,
							"name": "setMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 483,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2489,
									"name": "setMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "By default "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s will print a warning if more than "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners()`"
											},
											{
												"kind": "text",
												"text": " method allows the limit to be\nmodified for this specific "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance. The value can be set to"
											},
											{
												"kind": "code",
												"text": "`Infinity`"
											},
											{
												"kind": "text",
												"text": " (or "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.3.5"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2490,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.setMaxListeners"
							}
						},
						{
							"id": 2491,
							"name": "getMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 489,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2492,
									"name": "getMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the current max listener value for the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " which is either\nset by "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners(n)`"
											},
											{
												"kind": "text",
												"text": " or defaults to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "defaultMaxListeners"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v1.0.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.getMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.getMaxListeners"
							}
						},
						{
							"id": 2493,
							"name": "listeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 502,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2494,
									"name": "listeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2495,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.listeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listeners"
							}
						},
						{
							"id": 2496,
							"name": "rawListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 532,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2497,
									"name": "rawListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ",\nincluding any wrappers (such as those created by "
											},
											{
												"kind": "code",
												"text": "`.once()`"
											},
											{
												"kind": "text",
												"text": ").\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v9.4.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2498,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.rawListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.rawListeners"
							}
						},
						{
							"id": 2499,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 573,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2500,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Synchronously calls each of the listeners registered for the event named"
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the event had listeners, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " otherwise.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst EventEmitter = require('events');\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2501,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2502,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.emit"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.emit"
							}
						},
						{
							"id": 2503,
							"name": "listenerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 579,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2504,
									"name": "listenerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the number of listeners listening to the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v3.2.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2505,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event being listened for"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listenerCount"
							}
						},
						{
							"id": 2506,
							"name": "prependListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 597,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2507,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function to the _beginning_ of the listeners array for the\nevent named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ". No checks are made to see if the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " has\nalready been added. Multiple calls passing the same combination of "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "and "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " will result in the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " being added, and called, multiple\ntimes.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2508,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2509,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2510,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 597,
															"character": 70
														}
													],
													"signatures": [
														{
															"id": 2511,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2512,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.prependListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.prependListener"
							}
						},
						{
							"id": 2513,
							"name": "prependOnceListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 613,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2514,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds a **one-time**"
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " to the_beginning_ of the listeners array. The next time "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2515,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2516,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2517,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 613,
															"character": 74
														}
													],
													"signatures": [
														{
															"id": 2518,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2519,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.prependOnceListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.prependOnceListener"
							}
						},
						{
							"id": 2520,
							"name": "eventNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 632,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2521,
									"name": "eventNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
											},
											{
												"kind": "code",
												"text": "`Symbol`"
											},
											{
												"kind": "text",
												"text": "s.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.eventNames"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.eventNames"
							}
						},
						{
							"id": 2446,
							"name": "ref",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 279,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2447,
									"name": "ref",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When called, requests that the Node.js event loop _not_ exit so long as the "
											},
											{
												"kind": "code",
												"text": "`fs.StatWatcher`"
											},
											{
												"kind": "text",
												"text": " is active. Calling "
											},
											{
												"kind": "code",
												"text": "`watcher.ref()`"
											},
											{
												"kind": "text",
												"text": " multiple times will have\nno effect.\n\nBy default, all "
											},
											{
												"kind": "code",
												"text": "`fs.StatWatcher`"
											},
											{
												"kind": "text",
												"text": " objects are \"ref'ed\", making it normally\nunnecessary to call "
											},
											{
												"kind": "code",
												"text": "`watcher.ref()`"
											},
											{
												"kind": "text",
												"text": " unless "
											},
											{
												"kind": "code",
												"text": "`watcher.unref()`"
											},
											{
												"kind": "text",
												"text": " had been\ncalled previously."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v14.3.0, v12.20.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									}
								}
							]
						},
						{
							"id": 2448,
							"name": "unref",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 288,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2449,
									"name": "unref",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When called, the active "
											},
											{
												"kind": "code",
												"text": "`fs.StatWatcher`"
											},
											{
												"kind": "text",
												"text": " object will not require the Node.js\nevent loop to remain active. If there is no other activity keeping the\nevent loop running, the process may exit before the "
											},
											{
												"kind": "code",
												"text": "`fs.StatWatcher`"
											},
											{
												"kind": "text",
												"text": " object's\ncallback is invoked. Calling "
											},
											{
												"kind": "code",
												"text": "`watcher.unref()`"
											},
											{
												"kind": "text",
												"text": " multiple times will have\nno effect."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v14.3.0, v12.20.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2445,
										"name": "StatWatcher",
										"qualifiedName": "StatWatcher",
										"package": "@types/node"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								2450,
								2457,
								2464,
								2471,
								2478,
								2485,
								2488,
								2491,
								2493,
								2496,
								2499,
								2503,
								2506,
								2513,
								2520,
								2446,
								2448
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 269,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "EventEmitter",
							"qualifiedName": "EventEmitter",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 2522,
					"name": "FSWatcher",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 2650,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 457,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2651,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes the specified "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " from the listener array for the event named"
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
											},
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ", then "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`removeAllListeners()`"
											},
											{
												"kind": "text",
												"text": " calls _after_ emitting and_before_ the last listener finishes execution will\nnot remove them from"
											},
											{
												"kind": "code",
												"text": "`emit()`"
											},
											{
												"kind": "text",
												"text": " in progress. Subsequent events behave as expected.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
											},
											{
												"kind": "code",
												"text": "`emitter.listeners()`"
											},
											{
												"kind": "text",
												"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " will remove the most\nrecently added instance. In the example the "
											},
											{
												"kind": "code",
												"text": "`once('ping')`"
											},
											{
												"kind": "text",
												"text": "listener is removed:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2652,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2653,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2654,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 457,
															"character": 69
														}
													],
													"signatures": [
														{
															"id": 2655,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2656,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.removeListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeListener"
							}
						},
						{
							"id": 2657,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 462,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2658,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`emitter.removeListener()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2659,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2660,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2661,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 462,
															"character": 58
														}
													],
													"signatures": [
														{
															"id": 2662,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2663,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.off"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.off"
							}
						},
						{
							"id": 2664,
							"name": "removeAllListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 473,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2665,
									"name": "removeAllListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes all listeners, or those of the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2666,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.removeAllListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeAllListeners"
							}
						},
						{
							"id": 2667,
							"name": "setMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 483,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2668,
									"name": "setMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "By default "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s will print a warning if more than "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners()`"
											},
											{
												"kind": "text",
												"text": " method allows the limit to be\nmodified for this specific "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance. The value can be set to"
											},
											{
												"kind": "code",
												"text": "`Infinity`"
											},
											{
												"kind": "text",
												"text": " (or "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.3.5"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2669,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.setMaxListeners"
							}
						},
						{
							"id": 2670,
							"name": "getMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 489,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2671,
									"name": "getMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the current max listener value for the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " which is either\nset by "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners(n)`"
											},
											{
												"kind": "text",
												"text": " or defaults to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "defaultMaxListeners"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v1.0.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.getMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.getMaxListeners"
							}
						},
						{
							"id": 2672,
							"name": "listeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 502,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2673,
									"name": "listeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2674,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.listeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listeners"
							}
						},
						{
							"id": 2675,
							"name": "rawListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 532,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2676,
									"name": "rawListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ",\nincluding any wrappers (such as those created by "
											},
											{
												"kind": "code",
												"text": "`.once()`"
											},
											{
												"kind": "text",
												"text": ").\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v9.4.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2677,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.rawListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.rawListeners"
							}
						},
						{
							"id": 2678,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 573,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2679,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Synchronously calls each of the listeners registered for the event named"
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the event had listeners, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " otherwise.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst EventEmitter = require('events');\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2680,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2681,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.emit"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.emit"
							}
						},
						{
							"id": 2682,
							"name": "listenerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 579,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2683,
									"name": "listenerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the number of listeners listening to the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v3.2.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2684,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event being listened for"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listenerCount"
							}
						},
						{
							"id": 2685,
							"name": "eventNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 632,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2686,
									"name": "eventNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
											},
											{
												"kind": "code",
												"text": "`Symbol`"
											},
											{
												"kind": "text",
												"text": "s.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventEmitter.eventNames"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.eventNames"
							}
						},
						{
							"id": 2523,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 295,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2524,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Stop watching for changes on the given "
											},
											{
												"kind": "code",
												"text": "`fs.FSWatcher`"
											},
											{
												"kind": "text",
												"text": ". Once stopped, the "
											},
											{
												"kind": "code",
												"text": "`fs.FSWatcher`"
											},
											{
												"kind": "text",
												"text": " object is no longer usable."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.5.8"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2525,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 301,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 302,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 303,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 304,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2526,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "events.EventEmitter\n  1. change\n  2. error"
											}
										]
									},
									"parameters": [
										{
											"id": 2527,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2528,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2529,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 301,
															"character": 45
														}
													],
													"signatures": [
														{
															"id": 2530,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2531,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.addListener"
									}
								},
								{
									"id": 2532,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2533,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "change"
											}
										},
										{
											"id": 2534,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2535,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 302,
															"character": 47
														}
													],
													"signatures": [
														{
															"id": 2536,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2537,
																	"name": "eventType",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 2538,
																	"name": "filename",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.addListener"
									}
								},
								{
									"id": 2539,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2540,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2541,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2542,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 303,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 2543,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2544,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.addListener"
									}
								},
								{
									"id": 2545,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2546,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2547,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2548,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 304,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 2549,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.addListener"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.addListener"
							}
						},
						{
							"id": 2550,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 305,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 306,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 307,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 308,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2551,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2552,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2553,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2554,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 305,
															"character": 36
														}
													],
													"signatures": [
														{
															"id": 2555,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2556,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 2557,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2558,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "change"
											}
										},
										{
											"id": 2559,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2560,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 306,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 2561,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2562,
																	"name": "eventType",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 2563,
																	"name": "filename",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 2564,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2565,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2566,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2567,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 307,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 2568,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2569,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 2570,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2571,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2572,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2573,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 308,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 2574,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.on"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						},
						{
							"id": 2575,
							"name": "once",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 309,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 310,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 311,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 312,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2576,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2577,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2578,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2579,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 309,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 2580,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2581,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.once"
									}
								},
								{
									"id": 2582,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2583,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "change"
											}
										},
										{
											"id": 2584,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2585,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 310,
															"character": 40
														}
													],
													"signatures": [
														{
															"id": 2586,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2587,
																	"name": "eventType",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 2588,
																	"name": "filename",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.once"
									}
								},
								{
									"id": 2589,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2590,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2591,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2592,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 311,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 2593,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2594,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.once"
									}
								},
								{
									"id": 2595,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2596,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2597,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2598,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 312,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 2599,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.once"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 2600,
							"name": "prependListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 313,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 314,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 315,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 316,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2601,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2602,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2603,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2604,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 313,
															"character": 49
														}
													],
													"signatures": [
														{
															"id": 2605,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2606,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.prependListener"
									}
								},
								{
									"id": 2607,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2608,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "change"
											}
										},
										{
											"id": 2609,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2610,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 314,
															"character": 51
														}
													],
													"signatures": [
														{
															"id": 2611,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2612,
																	"name": "eventType",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 2613,
																	"name": "filename",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.prependListener"
									}
								},
								{
									"id": 2614,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2615,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2616,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2617,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 315,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 2618,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2619,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.prependListener"
									}
								},
								{
									"id": 2620,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2621,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2622,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2623,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 316,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 2624,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.prependListener"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.prependListener"
							}
						},
						{
							"id": 2625,
							"name": "prependOnceListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 317,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 318,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 319,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 320,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2626,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2627,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2628,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2629,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 317,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 2630,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2631,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.prependOnceListener"
									}
								},
								{
									"id": 2632,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2633,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "change"
											}
										},
										{
											"id": 2634,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2635,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 318,
															"character": 55
														}
													],
													"signatures": [
														{
															"id": 2636,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2637,
																	"name": "eventType",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 2638,
																	"name": "filename",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.prependOnceListener"
									}
								},
								{
									"id": 2639,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2640,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2641,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2642,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 319,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 2643,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2644,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.prependOnceListener"
									}
								},
								{
									"id": 2645,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2646,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2647,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2648,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 320,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 2649,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2522,
										"name": "FSWatcher",
										"qualifiedName": "FSWatcher",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventEmitter.prependOnceListener"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								2650,
								2657,
								2664,
								2667,
								2670,
								2672,
								2675,
								2678,
								2682,
								2685,
								2523,
								2525,
								2550,
								2575,
								2600,
								2625
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 290,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "EventEmitter",
							"qualifiedName": "EventEmitter",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 2687,
					"name": "ReadStream",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Instances of "
							},
							{
								"kind": "code",
								"text": "`fs.ReadStream`"
							},
							{
								"kind": "text",
								"text": " are created and returned using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createReadStream",
								"target": 1900
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.1.93"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2702,
							"name": "once",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 157,
									"character": 15
								},
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 158,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2703,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " that is fulfilled when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits the given\nevent or that is rejected if the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " while waiting.\nThe "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event\nsemantics and does not listen to the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe special handling of the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event is only used when "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": "is used to wait for another event. If "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for the\n'"
											},
											{
												"kind": "code",
												"text": "`error'`"
											},
											{
												"kind": "text",
												"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting for the event:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v11.13.0, v10.16.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2704,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "NodeEventTarget",
												"qualifiedName": "NodeEventTarget",
												"package": "@types/node"
											}
										},
										{
											"id": 2705,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2706,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "StaticEventEmitterOptions",
												"qualifiedName": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2707,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2708,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "DOMEventTarget",
												"qualifiedName": "DOMEventTarget",
												"package": "@types/node"
											}
										},
										{
											"id": 2709,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2710,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "StaticEventEmitterOptions",
												"qualifiedName": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.once"
							}
						},
						{
							"id": 2711,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 217,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2712,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns an "
											},
											{
												"kind": "code",
												"text": "`AsyncIterator`"
											},
											{
												"kind": "text",
												"text": " that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events. It will throw\nif the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": ". It removes all listeners when\nexiting the loop. The "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting on events:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v13.6.0, v12.16.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "that iterates "
													},
													{
														"kind": "code",
														"text": "`eventName`"
													},
													{
														"kind": "text",
														"text": " events emitted by the "
													},
													{
														"kind": "code",
														"text": "`emitter`"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2713,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "EventEmitter",
												"qualifiedName": "global.NodeJS.EventEmitter",
												"package": "@types/node"
											}
										},
										{
											"id": 2714,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event being listened for"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2715,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "StaticEventEmitterOptions",
												"qualifiedName": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AsyncIterableIterator",
										"qualifiedName": "AsyncIterableIterator",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.on"
							}
						},
						{
							"id": 2716,
							"name": "listenerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 234,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2717,
									"name": "listenerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A class method that returns the number of listeners for the given "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "registered on the given "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.12"
													}
												]
											},
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Since v3.2.0 - Use "
													},
													{
														"kind": "code",
														"text": "`listenerCount`"
													},
													{
														"kind": "text",
														"text": " instead."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2718,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The emitter to query"
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "EventEmitter",
												"qualifiedName": "global.NodeJS.EventEmitter",
												"package": "@types/node"
											}
										},
										{
											"id": 2719,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The event name"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.listenerCount"
							}
						},
						{
							"id": 2720,
							"name": "getEventListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 262,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2721,
									"name": "getEventListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s this behaves exactly the same as calling "
											},
											{
												"kind": "code",
												"text": "`.listeners`"
											},
											{
												"kind": "text",
												"text": " on\nthe emitter.\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v15.2.0, v14.17.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2722,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "EventEmitter",
														"qualifiedName": "global.NodeJS.EventEmitter",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"name": "DOMEventTarget",
														"qualifiedName": "DOMEventTarget",
														"package": "@types/node"
													}
												]
											}
										},
										{
											"id": 2723,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.getEventListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.getEventListeners"
							}
						},
						{
							"id": 2724,
							"name": "setMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 280,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2725,
									"name": "setMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v15.4.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2726,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A non-negative number. The maximum number of listeners per "
													},
													{
														"kind": "code",
														"text": "`EventTarget`"
													},
													{
														"kind": "text",
														"text": " event."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2727,
											"name": "eventTargets",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "EventEmitter",
															"qualifiedName": "global.NodeJS.EventEmitter",
															"package": "@types/node"
														},
														{
															"type": "reference",
															"name": "DOMEventTarget",
															"qualifiedName": "DOMEventTarget",
															"package": "@types/node"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.setMaxListeners"
							}
						},
						{
							"id": 2728,
							"name": "errorMonitor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This symbol shall be used to install a listener for only monitoring "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": "\nevents. Listeners installed using this symbol are called before the regular\n"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is emitted, therefore the process will still crash if no\nregular "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " listener is installed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 290,
									"character": 24
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 2728,
									"name": "errorMonitor",
									"qualifiedName": "EventEmitter.errorMonitor",
									"package": "@types/node"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.errorMonitor"
							}
						},
						{
							"id": 2729,
							"name": "captureRejectionSymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 291,
									"character": 24
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 2729,
									"name": "captureRejectionSymbol",
									"qualifiedName": "EventEmitter.captureRejectionSymbol",
									"package": "@types/node"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.captureRejectionSymbol"
							}
						},
						{
							"id": 2730,
							"name": "captureRejections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets or gets the default captureRejection value for all emitters."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 296,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.captureRejections"
							}
						},
						{
							"id": 2731,
							"name": "defaultMaxListeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 297,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.defaultMaxListeners"
							}
						},
						{
							"id": 3149,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 462,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3150,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`emitter.removeListener()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3151,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3152,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3153,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 462,
															"character": 58
														}
													],
													"signatures": [
														{
															"id": 3154,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3155,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.off"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.off"
							}
						},
						{
							"id": 3156,
							"name": "removeAllListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 473,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3157,
									"name": "removeAllListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes all listeners, or those of the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3158,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.removeAllListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.removeAllListeners"
							}
						},
						{
							"id": 3159,
							"name": "setMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 483,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3160,
									"name": "setMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "By default "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s will print a warning if more than "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners()`"
											},
											{
												"kind": "text",
												"text": " method allows the limit to be\nmodified for this specific "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance. The value can be set to"
											},
											{
												"kind": "code",
												"text": "`Infinity`"
											},
											{
												"kind": "text",
												"text": " (or "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.3.5"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3161,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.setMaxListeners"
							}
						},
						{
							"id": 3162,
							"name": "getMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 489,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3163,
									"name": "getMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the current max listener value for the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " which is either\nset by "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners(n)`"
											},
											{
												"kind": "text",
												"text": " or defaults to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "defaultMaxListeners",
												"target": 2731
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v1.0.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.getMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.getMaxListeners"
							}
						},
						{
							"id": 3164,
							"name": "listeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 502,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3165,
									"name": "listeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3166,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.listeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.listeners"
							}
						},
						{
							"id": 3167,
							"name": "rawListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 532,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3168,
									"name": "rawListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ",\nincluding any wrappers (such as those created by "
											},
											{
												"kind": "code",
												"text": "`.once()`"
											},
											{
												"kind": "text",
												"text": ").\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v9.4.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3169,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.rawListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.rawListeners"
							}
						},
						{
							"id": 3170,
							"name": "listenerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 579,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3171,
									"name": "listenerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the number of listeners listening to the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v3.2.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3172,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event being listened for"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.listenerCount"
							}
						},
						{
							"id": 3173,
							"name": "eventNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 632,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3174,
									"name": "eventNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
											},
											{
												"kind": "code",
												"text": "`Symbol`"
											},
											{
												"kind": "text",
												"text": "s.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.eventNames"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.eventNames"
							}
						},
						{
							"id": 2735,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 327,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2736,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2737,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2738,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 327,
															"character": 25
														}
													],
													"signatures": [
														{
															"id": 2739,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2740,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "ErrnoException",
																		"qualifiedName": "NodeJS.ErrnoException",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2741,
							"name": "bytesRead",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of bytes that have been read so far."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 332,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2742,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The path to the file the stream is reading from as specified in the first\nargument to "
									},
									{
										"kind": "code",
										"text": "`fs.createReadStream()`"
									},
									{
										"kind": "text",
										"text": ". If "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " is passed as a string, then"
									},
									{
										"kind": "code",
										"text": "`readStream.path`"
									},
									{
										"kind": "text",
										"text": " will be a string. If "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " is passed as a "
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": ", then"
									},
									{
										"kind": "code",
										"text": "`readStream.path`"
									},
									{
										"kind": "text",
										"text": " will be a\n"
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": ". If "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " is specified, then"
									},
									{
										"kind": "code",
										"text": "`readStream.path`"
									},
									{
										"kind": "text",
										"text": " will be "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.93"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 339,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								]
							}
						},
						{
							"id": 2743,
							"name": "pending",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the underlying file has not been opened yet,\ni.e. before the "
									},
									{
										"kind": "code",
										"text": "`'ready'`"
									},
									{
										"kind": "text",
										"text": " event is emitted."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.2.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 345,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2744,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 352,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 353,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 354,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 355,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 356,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 357,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 358,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 359,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 360,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 361,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2745,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "events.EventEmitter\n  1. open\n  2. close\n  3. ready"
											}
										]
									},
									"parameters": [
										{
											"id": 2746,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2747,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2748,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 352,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 2749,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								},
								{
									"id": 2750,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2751,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 2752,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2753,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 353,
															"character": 45
														}
													],
													"signatures": [
														{
															"id": 2754,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2755,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								},
								{
									"id": 2756,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2757,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 2758,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2759,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 354,
															"character": 44
														}
													],
													"signatures": [
														{
															"id": 2760,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								},
								{
									"id": 2761,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2762,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2763,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2764,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 355,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 2765,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2766,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								},
								{
									"id": 2767,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2768,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 2769,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2770,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 356,
															"character": 45
														}
													],
													"signatures": [
														{
															"id": 2771,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2772,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								},
								{
									"id": 2773,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2774,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 2775,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2776,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 357,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 2777,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								},
								{
									"id": 2778,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2779,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 2780,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2781,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 358,
															"character": 49
														}
													],
													"signatures": [
														{
															"id": 2782,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								},
								{
									"id": 2783,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2784,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 2785,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2786,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 359,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 2787,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								},
								{
									"id": 2788,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2789,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 2790,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2791,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 360,
															"character": 47
														}
													],
													"signatures": [
														{
															"id": 2792,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								},
								{
									"id": 2793,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2794,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2795,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2796,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 361,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 2797,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2798,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.addListener"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Readable.addListener"
							}
						},
						{
							"id": 2799,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 362,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 363,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 364,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 365,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 366,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 367,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 368,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 369,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 370,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 371,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2800,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2801,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2802,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2803,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 362,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 2804,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								},
								{
									"id": 2805,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2806,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 2807,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2808,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 363,
															"character": 36
														}
													],
													"signatures": [
														{
															"id": 2809,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2810,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								},
								{
									"id": 2811,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2812,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 2813,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2814,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 364,
															"character": 35
														}
													],
													"signatures": [
														{
															"id": 2815,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								},
								{
									"id": 2816,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2817,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2818,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2819,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 365,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 2820,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2821,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								},
								{
									"id": 2822,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2823,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 2824,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2825,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 366,
															"character": 36
														}
													],
													"signatures": [
														{
															"id": 2826,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2827,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								},
								{
									"id": 2828,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2829,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 2830,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2831,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 367,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 2832,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								},
								{
									"id": 2833,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2834,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 2835,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2836,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 368,
															"character": 40
														}
													],
													"signatures": [
														{
															"id": 2837,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								},
								{
									"id": 2838,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2839,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 2840,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2841,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 369,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 2842,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								},
								{
									"id": 2843,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2844,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 2845,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2846,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 370,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 2847,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								},
								{
									"id": 2848,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2849,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2850,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2851,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 371,
															"character": 45
														}
													],
													"signatures": [
														{
															"id": 2852,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2853,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.on"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Readable.on"
							}
						},
						{
							"id": 2854,
							"name": "once",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 372,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 373,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 374,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 375,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 376,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 377,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 378,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 379,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 380,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 381,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2855,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2856,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2857,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2858,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 372,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 2859,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2860,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2861,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 2862,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2863,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 373,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 2864,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2865,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2866,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2867,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 2868,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2869,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 374,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 2870,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2871,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2872,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2873,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2874,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 375,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 2875,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2876,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2877,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2878,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 2879,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2880,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 376,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 2881,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2882,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2883,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2884,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 2885,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2886,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 377,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 2887,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2888,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2889,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 2890,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2891,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 378,
															"character": 42
														}
													],
													"signatures": [
														{
															"id": 2892,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2893,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2894,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 2895,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2896,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 379,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 2897,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2898,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2899,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 2900,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2901,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 380,
															"character": 40
														}
													],
													"signatures": [
														{
															"id": 2902,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								},
								{
									"id": 2903,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2904,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2905,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2906,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 381,
															"character": 47
														}
													],
													"signatures": [
														{
															"id": 2907,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2908,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.once"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Readable.once"
							}
						},
						{
							"id": 2909,
							"name": "prependListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 382,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 383,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 384,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 385,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 386,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 387,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 388,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 389,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 390,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 391,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2910,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2911,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2912,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2913,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 382,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 2914,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								},
								{
									"id": 2915,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2916,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 2917,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2918,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 383,
															"character": 49
														}
													],
													"signatures": [
														{
															"id": 2919,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2920,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								},
								{
									"id": 2921,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2922,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 2923,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2924,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 384,
															"character": 48
														}
													],
													"signatures": [
														{
															"id": 2925,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								},
								{
									"id": 2926,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2927,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2928,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2929,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 385,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 2930,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2931,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								},
								{
									"id": 2932,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2933,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 2934,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2935,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 386,
															"character": 49
														}
													],
													"signatures": [
														{
															"id": 2936,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2937,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								},
								{
									"id": 2938,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2939,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 2940,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2941,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 387,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 2942,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								},
								{
									"id": 2943,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2944,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 2945,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2946,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 388,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 2947,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								},
								{
									"id": 2948,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2949,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 2950,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2951,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 389,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 2952,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								},
								{
									"id": 2953,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2954,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 2955,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2956,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 390,
															"character": 51
														}
													],
													"signatures": [
														{
															"id": 2957,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								},
								{
									"id": 2958,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2959,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 2960,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2961,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 391,
															"character": 58
														}
													],
													"signatures": [
														{
															"id": 2962,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2963,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependListener"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Readable.prependListener"
							}
						},
						{
							"id": 2964,
							"name": "prependOnceListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 392,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 393,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 394,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 395,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 396,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 397,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 398,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 399,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 400,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 401,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2965,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2966,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 2967,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2968,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 392,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 2969,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								},
								{
									"id": 2970,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2971,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 2972,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2973,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 393,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 2974,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2975,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"name": "Buffer",
																				"qualifiedName": "global.Buffer",
																				"package": "@types/node"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								},
								{
									"id": 2976,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2977,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 2978,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2979,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 394,
															"character": 52
														}
													],
													"signatures": [
														{
															"id": 2980,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								},
								{
									"id": 2981,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2982,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 2983,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2984,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 395,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 2985,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2986,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								},
								{
									"id": 2987,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2988,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 2989,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2990,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 396,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 2991,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 2992,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								},
								{
									"id": 2993,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2994,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 2995,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2996,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 397,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 2997,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								},
								{
									"id": 2998,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2999,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 3000,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3001,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 398,
															"character": 57
														}
													],
													"signatures": [
														{
															"id": 3002,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								},
								{
									"id": 3003,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3004,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 3005,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3006,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 399,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 3007,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								},
								{
									"id": 3008,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3009,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 3010,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3011,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 400,
															"character": 55
														}
													],
													"signatures": [
														{
															"id": 3012,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								},
								{
									"id": 3013,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3014,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3015,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3016,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 401,
															"character": 62
														}
													],
													"signatures": [
														{
															"id": 3017,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3018,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Readable.prependOnceListener"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Readable.prependOnceListener"
							}
						},
						{
							"id": 3142,
							"name": "pipe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 25,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3143,
									"name": "pipe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 3144,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3144,
														"name": "T",
														"qualifiedName": "T",
														"package": "@types/node"
													}
												],
												"name": "WritableStream",
												"qualifiedName": "NodeJS.WritableStream",
												"package": "@types/node"
											}
										}
									],
									"parameters": [
										{
											"id": 3145,
											"name": "destination",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 3144,
												"name": "T",
												"qualifiedName": "T",
												"package": "@types/node"
											}
										},
										{
											"id": 3146,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3147,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3148,
															"name": "end",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/stream.d.ts",
																	"line": 28,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3148
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 27,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3144,
										"name": "T",
										"qualifiedName": "T",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.pipe"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.pipe"
							}
						},
						{
							"id": 2688,
							"name": "from",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 55,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2689,
									"name": "from",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A utility method for creating Readable Streams out of iterators."
											}
										]
									},
									"parameters": [
										{
											"id": 2690,
											"name": "iterable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Iterable",
														"qualifiedName": "Iterable",
														"package": "typescript"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "AsyncIterable",
														"qualifiedName": "AsyncIterable",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 2691,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "ReadableOptions",
												"qualifiedName": "internal.ReadableOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Readable",
										"qualifiedName": "internal.Readable",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.from"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.from"
							}
						},
						{
							"id": 2692,
							"name": "fromWeb",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 61,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2693,
									"name": "fromWeb",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A utility method for creating a "
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": " from a web "
											},
											{
												"kind": "code",
												"text": "`ReadableStream`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v17.0.0"
													}
												]
											}
										],
										"modifierTags": [
											"@experimental"
										]
									},
									"parameters": [
										{
											"id": 2694,
											"name": "readableStream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ReadableStream",
												"qualifiedName": "ReadableStream",
												"package": "@types/node"
											}
										},
										{
											"id": 2695,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ReadableOptions",
														"qualifiedName": "internal.ReadableOptions",
														"package": "@types/node"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "encoding"
															},
															{
																"type": "literal",
																"value": "highWaterMark"
															},
															{
																"type": "literal",
																"value": "objectMode"
															},
															{
																"type": "literal",
																"value": "signal"
															}
														]
													}
												],
												"name": "Pick",
												"qualifiedName": "Pick",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Readable",
										"qualifiedName": "internal.Readable",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.fromWeb"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.fromWeb"
							}
						},
						{
							"id": 2696,
							"name": "isDisturbed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 66,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2697,
									"name": "isDisturbed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns whether the stream has been read from or cancelled."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v16.8.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2698,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Readable",
														"qualifiedName": "internal.Readable",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"name": "ReadableStream",
														"qualifiedName": "NodeJS.ReadableStream",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.isDisturbed"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.isDisturbed"
							}
						},
						{
							"id": 2699,
							"name": "toWeb",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 72,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2700,
									"name": "toWeb",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A utility method for creating a web "
											},
											{
												"kind": "code",
												"text": "`ReadableStream`"
											},
											{
												"kind": "text",
												"text": " from a "
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v17.0.0"
													}
												]
											}
										],
										"modifierTags": [
											"@experimental"
										]
									},
									"parameters": [
										{
											"id": 2701,
											"name": "streamReadable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Readable",
												"qualifiedName": "internal.Readable",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ReadableStream",
										"qualifiedName": "ReadableStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.toWeb"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.toWeb"
							}
						},
						{
							"id": 3019,
							"name": "readableAborted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns whether the stream was destroyed or errored before emitting "
									},
									{
										"kind": "code",
										"text": "`'end'`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v16.8.0"
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 78,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.readableAborted"
							}
						},
						{
							"id": 3020,
							"name": "readable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if it is safe to call "
									},
									{
										"kind": "code",
										"text": "`readable.read()`"
									},
									{
										"kind": "text",
										"text": ", which means\nthe stream has not been destroyed or emitted "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`'end'`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 84,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.readable"
							}
						},
						{
							"id": 3021,
							"name": "readableDidRead",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns whether "
									},
									{
										"kind": "code",
										"text": "`'data'`"
									},
									{
										"kind": "text",
										"text": " has been emitted."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v16.7.0, v14.18.0"
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 90,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.readableDidRead"
							}
						},
						{
							"id": 3022,
							"name": "readableEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Getter for the property "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " of a given "
									},
									{
										"kind": "code",
										"text": "`Readable`"
									},
									{
										"kind": "text",
										"text": " stream. The "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": "property can be set using the "
									},
									{
										"kind": "code",
										"text": "`readable.setEncoding()`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v12.7.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 95,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "BufferEncoding",
								"qualifiedName": "global.BufferEncoding",
								"package": "@types/node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.readableEncoding"
							}
						},
						{
							"id": 3023,
							"name": "readableEnded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Becomes "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " when "
									},
									{
										"kind": "code",
										"text": "`'end'`"
									},
									{
										"kind": "text",
										"text": " event is emitted."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v12.9.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 100,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.readableEnded"
							}
						},
						{
							"id": 3024,
							"name": "readableFlowing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property reflects the current state of a "
									},
									{
										"kind": "code",
										"text": "`Readable`"
									},
									{
										"kind": "text",
										"text": " stream as described\nin the "
									},
									{
										"kind": "code",
										"text": "`Three states`"
									},
									{
										"kind": "text",
										"text": " section."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 106,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.readableFlowing"
							}
						},
						{
							"id": 3025,
							"name": "readableHighWaterMark",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of "
									},
									{
										"kind": "code",
										"text": "`highWaterMark`"
									},
									{
										"kind": "text",
										"text": " passed when creating this "
									},
									{
										"kind": "code",
										"text": "`Readable`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 111,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.readableHighWaterMark"
							}
						},
						{
							"id": 3026,
							"name": "readableLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property contains the number of bytes (or objects) in the queue\nready to be read. The value provides introspection data regarding\nthe status of the "
									},
									{
										"kind": "code",
										"text": "`highWaterMark`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 118,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.readableLength"
							}
						},
						{
							"id": 3027,
							"name": "readableObjectMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Getter for the property "
									},
									{
										"kind": "code",
										"text": "`objectMode`"
									},
									{
										"kind": "text",
										"text": " of a given "
									},
									{
										"kind": "code",
										"text": "`Readable`"
									},
									{
										"kind": "text",
										"text": " stream."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v12.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 123,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.readableObjectMode"
							}
						},
						{
							"id": 3028,
							"name": "destroyed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " after "
									},
									{
										"kind": "code",
										"text": "`readable.destroy()`"
									},
									{
										"kind": "text",
										"text": " has been called."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v18.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 128,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.destroyed"
							}
						},
						{
							"id": 3029,
							"name": "closed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is true after 'close' has been emitted."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v8.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 133,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.closed"
							}
						},
						{
							"id": 3030,
							"name": "errored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns error if the stream has been destroyed with an error."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v18.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 138,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Error",
								"qualifiedName": "Error",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.errored"
							}
						},
						{
							"id": 2732,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 139,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2733,
									"name": "new ReadStream",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2734,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "ReadableOptions",
												"qualifiedName": "internal.ReadableOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.constructor"
							}
						},
						{
							"id": 3031,
							"name": "_construct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 140,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3032,
									"name": "_construct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3033,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3034,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 140,
															"character": 34
														}
													],
													"signatures": [
														{
															"id": 3035,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3036,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable._construct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable._construct"
							}
						},
						{
							"id": 3037,
							"name": "_read",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 141,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3038,
									"name": "_read",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3039,
											"name": "size",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable._read"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable._read"
							}
						},
						{
							"id": 3040,
							"name": "read",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 218,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3041,
									"name": "read",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`readable.read()`"
											},
											{
												"kind": "text",
												"text": " method reads data out of the internal buffer and\nreturns it. If no data is available to be read, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " is returned. By default,\nthe data is returned as a "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": " object unless an encoding has been\nspecified using the "
											},
											{
												"kind": "code",
												"text": "`readable.setEncoding()`"
											},
											{
												"kind": "text",
												"text": " method or the stream is operating\nin object mode.\n\nThe optional "
											},
											{
												"kind": "code",
												"text": "`size`"
											},
											{
												"kind": "text",
												"text": " argument specifies a specific number of bytes to read. If"
											},
											{
												"kind": "code",
												"text": "`size`"
											},
											{
												"kind": "text",
												"text": " bytes are not available to be read, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " will be returned _unless_the stream has ended, in which\ncase all of the data remaining in the internal\nbuffer will be returned.\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`size`"
											},
											{
												"kind": "text",
												"text": " argument is not specified, all of the data contained in the\ninternal buffer will be returned.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`size`"
											},
											{
												"kind": "text",
												"text": " argument must be less than or equal to 1 GiB.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`readable.read()`"
											},
											{
												"kind": "text",
												"text": " method should only be called on "
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": " streams\noperating in paused mode. In flowing mode, "
											},
											{
												"kind": "code",
												"text": "`readable.read()`"
											},
											{
												"kind": "text",
												"text": " is called\nautomatically until the internal buffer is fully drained.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst readable = getReadableStreamSomehow();\n\n// 'readable' may be triggered multiple times as data is buffered in\nreadable.on('readable', () => {\n  let chunk;\n  console.log('Stream is readable (new data received in buffer)');\n  // Use a loop to make sure we read all currently available data\n  while (null !== (chunk = readable.read())) {\n    console.log(`Read ${chunk.length} bytes of data...`);\n  }\n});\n\n// 'end' will be triggered once when there is no more data available\nreadable.on('end', () => {\n  console.log('Reached end of stream.');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nEach call to "
											},
											{
												"kind": "code",
												"text": "`readable.read()`"
											},
											{
												"kind": "text",
												"text": " returns a chunk of data, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": ". The chunks\nare not concatenated. A "
											},
											{
												"kind": "code",
												"text": "`while`"
											},
											{
												"kind": "text",
												"text": " loop is necessary to consume all data\ncurrently in the buffer. When reading a large file "
											},
											{
												"kind": "code",
												"text": "`.read()`"
											},
											{
												"kind": "text",
												"text": " may return "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": ",\nhaving consumed all buffered content so far, but there is still more data to\ncome not yet buffered. In this case a new "
											},
											{
												"kind": "code",
												"text": "`'readable'`"
											},
											{
												"kind": "text",
												"text": " event will be emitted\nwhen there is more data in the buffer. Finally the "
											},
											{
												"kind": "code",
												"text": "`'end'`"
											},
											{
												"kind": "text",
												"text": " event will be\nemitted when there is no more data to come.\n\nTherefore to read a file's whole contents from a "
											},
											{
												"kind": "code",
												"text": "`readable`"
											},
											{
												"kind": "text",
												"text": ", it is necessary\nto collect chunks across multiple "
											},
											{
												"kind": "code",
												"text": "`'readable'`"
											},
											{
												"kind": "text",
												"text": " events:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst chunks = [];\n\nreadable.on('readable', () => {\n  let chunk;\n  while (null !== (chunk = readable.read())) {\n    chunks.push(chunk);\n  }\n});\n\nreadable.on('end', () => {\n  const content = chunks.join('');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nA "
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": " stream in object mode will always return a single item from\na call to "
											},
											{
												"kind": "code",
												"text": "`readable.read(size)`"
											},
											{
												"kind": "text",
												"text": ", regardless of the value of the"
											},
											{
												"kind": "code",
												"text": "`size`"
											},
											{
												"kind": "text",
												"text": " argument.\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`readable.read()`"
											},
											{
												"kind": "text",
												"text": " method returns a chunk of data, a "
											},
											{
												"kind": "code",
												"text": "`'data'`"
											},
											{
												"kind": "text",
												"text": " event will\nalso be emitted.\n\nCalling "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "read",
												"target": 1084
											},
											{
												"kind": "text",
												"text": " after the "
											},
											{
												"kind": "code",
												"text": "`'end'`"
											},
											{
												"kind": "text",
												"text": " event has\nbeen emitted will return "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": ". No runtime error will be raised."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.4"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3042,
											"name": "size",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optional argument to specify how much data to read."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.read"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.read"
							}
						},
						{
							"id": 3043,
							"name": "setEncoding",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 243,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3044,
									"name": "setEncoding",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`readable.setEncoding()`"
											},
											{
												"kind": "text",
												"text": " method sets the character encoding for\ndata read from the "
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": " stream.\n\nBy default, no encoding is assigned and stream data will be returned as"
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": " objects. Setting an encoding causes the stream data\nto be returned as strings of the specified encoding rather than as "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": "objects. For instance, calling "
											},
											{
												"kind": "code",
												"text": "`readable.setEncoding('utf8')`"
											},
											{
												"kind": "text",
												"text": " will cause the\noutput data to be interpreted as UTF-8 data, and passed as strings. Calling"
											},
											{
												"kind": "code",
												"text": "`readable.setEncoding('hex')`"
											},
											{
												"kind": "text",
												"text": " will cause the data to be encoded in hexadecimal\nstring format.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": " stream will properly handle multi-byte characters delivered\nthrough the stream that would otherwise become improperly decoded if simply\npulled from the stream as "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": " objects.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst readable = getReadableStreamSomehow();\nreadable.setEncoding('utf8');\nreadable.on('data', (chunk) => {\n  assert.equal(typeof chunk, 'string');\n  console.log('Got %d characters of string data:', chunk.length);\n});\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.4"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3045,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The encoding to use."
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.setEncoding"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.setEncoding"
							}
						},
						{
							"id": 3046,
							"name": "pause",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 265,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3047,
									"name": "pause",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`readable.pause()`"
											},
											{
												"kind": "text",
												"text": " method will cause a stream in flowing mode to stop\nemitting "
											},
											{
												"kind": "code",
												"text": "`'data'`"
											},
											{
												"kind": "text",
												"text": " events, switching out of flowing mode. Any data that\nbecomes available will remain in the internal buffer.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst readable = getReadableStreamSomehow();\nreadable.on('data', (chunk) => {\n  console.log(`Received ${chunk.length} bytes of data.`);\n  readable.pause();\n  console.log('There will be no additional data for 1 second.');\n  setTimeout(() => {\n    console.log('Now data will start flowing again.');\n    readable.resume();\n  }, 1000);\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe "
											},
											{
												"kind": "code",
												"text": "`readable.pause()`"
											},
											{
												"kind": "text",
												"text": " method has no effect if there is a "
											},
											{
												"kind": "code",
												"text": "`'readable'`"
											},
											{
												"kind": "text",
												"text": "event listener."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.4"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.pause"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.pause"
							}
						},
						{
							"id": 3048,
							"name": "resume",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 284,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3049,
									"name": "resume",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`readable.resume()`"
											},
											{
												"kind": "text",
												"text": " method causes an explicitly paused "
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": " stream to\nresume emitting "
											},
											{
												"kind": "code",
												"text": "`'data'`"
											},
											{
												"kind": "text",
												"text": " events, switching the stream into flowing mode.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`readable.resume()`"
											},
											{
												"kind": "text",
												"text": " method can be used to fully consume the data from a\nstream without actually processing any of that data:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\ngetReadableStreamSomehow()\n  .resume()\n  .on('end', () => {\n    console.log('Reached the end, but did not read anything.');\n  });\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe "
											},
											{
												"kind": "code",
												"text": "`readable.resume()`"
											},
											{
												"kind": "text",
												"text": " method has no effect if there is a "
											},
											{
												"kind": "code",
												"text": "`'readable'`"
											},
											{
												"kind": "text",
												"text": "event listener."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.4"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.resume"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.resume"
							}
						},
						{
							"id": 3050,
							"name": "isPaused",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 301,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3051,
									"name": "isPaused",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`readable.isPaused()`"
											},
											{
												"kind": "text",
												"text": " method returns the current operating state of the"
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": ". This is used primarily by the mechanism that underlies the"
											},
											{
												"kind": "code",
												"text": "`readable.pipe()`"
											},
											{
												"kind": "text",
												"text": " method. In most\ntypical cases, there will be no reason to\nuse this method directly.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst readable = new stream.Readable();\n\nreadable.isPaused(); // === false\nreadable.pause();\nreadable.isPaused(); // === true\nreadable.resume();\nreadable.isPaused(); // === false\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.11.14"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.isPaused"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.isPaused"
							}
						},
						{
							"id": 3052,
							"name": "unpipe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 328,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3053,
									"name": "unpipe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`readable.unpipe()`"
											},
											{
												"kind": "text",
												"text": " method detaches a "
											},
											{
												"kind": "code",
												"text": "`Writable`"
											},
											{
												"kind": "text",
												"text": " stream previously attached\nusing the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "pipe",
												"target": 3142
											},
											{
												"kind": "text",
												"text": " method.\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`destination`"
											},
											{
												"kind": "text",
												"text": " is not specified, then _all_ pipes are detached.\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`destination`"
											},
											{
												"kind": "text",
												"text": " is specified, but no pipe is set up for it, then\nthe method does nothing.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst fs = require('fs');\nconst readable = getReadableStreamSomehow();\nconst writable = fs.createWriteStream('file.txt');\n// All the data from readable goes into 'file.txt',\n// but only for the first second.\nreadable.pipe(writable);\nsetTimeout(() => {\n  console.log('Stop writing to file.txt.');\n  readable.unpipe(writable);\n  console.log('Manually close the file stream.');\n  writable.end();\n}, 1000);\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.4"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3054,
											"name": "destination",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optional specific stream to unpipe"
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "WritableStream",
												"qualifiedName": "NodeJS.WritableStream",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.unpipe"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.unpipe"
							}
						},
						{
							"id": 3055,
							"name": "unshift",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 394,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3056,
									"name": "unshift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Passing "
											},
											{
												"kind": "code",
												"text": "`chunk`"
											},
											{
												"kind": "text",
												"text": " as "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " signals the end of the stream (EOF) and behaves the\nsame as "
											},
											{
												"kind": "code",
												"text": "`readable.push(null)`"
											},
											{
												"kind": "text",
												"text": ", after which no more data can be written. The EOF\nsignal is put at the end of the buffer and any buffered data will still be\nflushed.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`readable.unshift()`"
											},
											{
												"kind": "text",
												"text": " method pushes a chunk of data back into the internal\nbuffer. This is useful in certain situations where a stream is being consumed by\ncode that needs to \"un-consume\" some amount of data that it has optimistically\npulled out of the source, so that the data can be passed on to some other party.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`stream.unshift(chunk)`"
											},
											{
												"kind": "text",
												"text": " method cannot be called after the "
											},
											{
												"kind": "code",
												"text": "`'end'`"
											},
											{
												"kind": "text",
												"text": " event\nhas been emitted or a runtime error will be thrown.\n\nDevelopers using "
											},
											{
												"kind": "code",
												"text": "`stream.unshift()`"
											},
											{
												"kind": "text",
												"text": " often should consider switching to\nuse of a "
											},
											{
												"kind": "code",
												"text": "`Transform`"
											},
											{
												"kind": "text",
												"text": " stream instead. See the "
											},
											{
												"kind": "code",
												"text": "`API for stream implementers`"
											},
											{
												"kind": "text",
												"text": " section for more information.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\n// Pull off a header delimited by \\n\\n.\n// Use unshift() if we get too much.\n// Call the callback with (error, header, stream).\nconst { StringDecoder } = require('string_decoder');\nfunction parseHeader(stream, callback) {\n  stream.on('error', callback);\n  stream.on('readable', onReadable);\n  const decoder = new StringDecoder('utf8');\n  let header = '';\n  function onReadable() {\n    let chunk;\n    while (null !== (chunk = stream.read())) {\n      const str = decoder.write(chunk);\n      if (str.includes('\\n\\n')) {\n        // Found the header boundary.\n        const split = str.split(/\\n\\n/);\n        header += split.shift();\n        const remaining = split.join('\\n\\n');\n        const buf = Buffer.from(remaining, 'utf8');\n        stream.removeListener('error', callback);\n        // Remove the 'readable' listener before unshifting.\n        stream.removeListener('readable', onReadable);\n        if (buf.length)\n          stream.unshift(buf);\n        // Now the body of the message can be read from the stream.\n        callback(null, header, stream);\n        return;\n      }\n      // Still reading the header.\n      header += str;\n    }\n  }\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nUnlike "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "push",
												"target": 3062
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`stream.unshift(chunk)`"
											},
											{
												"kind": "text",
												"text": " will not\nend the reading process by resetting the internal reading state of the stream.\nThis can cause unexpected results if "
											},
											{
												"kind": "code",
												"text": "`readable.unshift()`"
											},
											{
												"kind": "text",
												"text": " is called during a\nread (i.e. from within a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "_read",
												"target": 3037
											},
											{
												"kind": "text",
												"text": " implementation on a\ncustom stream). Following the call to "
											},
											{
												"kind": "code",
												"text": "`readable.unshift()`"
											},
											{
												"kind": "text",
												"text": " with an immediate "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "push",
												"target": 3062
											},
											{
												"kind": "text",
												"text": " will reset the reading state appropriately,\nhowever it is best to simply avoid calling "
											},
											{
												"kind": "code",
												"text": "`readable.unshift()`"
											},
											{
												"kind": "text",
												"text": " while in the\nprocess of performing a read."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.11"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3057,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Chunk of data to unshift onto the read queue. For streams not operating in object mode, "
													},
													{
														"kind": "code",
														"text": "`chunk`"
													},
													{
														"kind": "text",
														"text": " must be a string, "
													},
													{
														"kind": "code",
														"text": "`Buffer`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`Uint8Array`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`null`"
													},
													{
														"kind": "text",
														"text": ". For object mode\nstreams, "
													},
													{
														"kind": "code",
														"text": "`chunk`"
													},
													{
														"kind": "text",
														"text": " may be any JavaScript value."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3058,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Encoding of string chunks. Must be a valid "
													},
													{
														"kind": "code",
														"text": "`Buffer`"
													},
													{
														"kind": "text",
														"text": " encoding, such as "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`'ascii'`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.unshift"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.unshift"
							}
						},
						{
							"id": 3059,
							"name": "wrap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 420,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3060,
									"name": "wrap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Prior to Node.js 0.10, streams did not implement the entire "
											},
											{
												"kind": "code",
												"text": "`stream`"
											},
											{
												"kind": "text",
												"text": " module API\nas it is currently defined. (See "
											},
											{
												"kind": "code",
												"text": "`Compatibility`"
											},
											{
												"kind": "text",
												"text": " for more information.)\n\nWhen using an older Node.js library that emits "
											},
											{
												"kind": "code",
												"text": "`'data'`"
											},
											{
												"kind": "text",
												"text": " events and has a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "pause",
												"target": 3046
											},
											{
												"kind": "text",
												"text": " method that is advisory only, the"
											},
											{
												"kind": "code",
												"text": "`readable.wrap()`"
											},
											{
												"kind": "text",
												"text": " method can be used to create a "
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": "\nstream that uses\nthe old stream as its data source.\n\nIt will rarely be necessary to use "
											},
											{
												"kind": "code",
												"text": "`readable.wrap()`"
											},
											{
												"kind": "text",
												"text": " but the method has been\nprovided as a convenience for interacting with older Node.js applications and\nlibraries.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { OldReader } = require('./old-api-module.js');\nconst { Readable } = require('stream');\nconst oreader = new OldReader();\nconst myReader = new Readable().wrap(oreader);\n\nmyReader.on('readable', () => {\n  myReader.read(); // etc.\n});\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.4"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3061,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An \"old style\" readable stream"
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "ReadableStream",
												"qualifiedName": "NodeJS.ReadableStream",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.wrap"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.wrap"
							}
						},
						{
							"id": 3062,
							"name": "push",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 421,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3063,
									"name": "push",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3064,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3065,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.push"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.push"
							}
						},
						{
							"id": 3066,
							"name": "_destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 422,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3067,
									"name": "_destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3068,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										},
										{
											"id": 3069,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3070,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 422,
															"character": 52
														}
													],
													"signatures": [
														{
															"id": 3071,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3072,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable._destroy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable._destroy"
							}
						},
						{
							"id": 3073,
							"name": "destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 434,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3074,
									"name": "destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Destroy the stream. Optionally emit an "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event, and emit a "
											},
											{
												"kind": "code",
												"text": "`'close'`"
											},
											{
												"kind": "text",
												"text": "event (unless "
											},
											{
												"kind": "code",
												"text": "`emitClose`"
											},
											{
												"kind": "text",
												"text": " is set to "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "). After this call, the readable\nstream will release any internal resources and subsequent calls to "
											},
											{
												"kind": "code",
												"text": "`push()`"
											},
											{
												"kind": "text",
												"text": "will be ignored.\n\nOnce "
											},
											{
												"kind": "code",
												"text": "`destroy()`"
											},
											{
												"kind": "text",
												"text": " has been called any further calls will be a no-op and no\nfurther errors except from "
											},
											{
												"kind": "code",
												"text": "`_destroy()`"
											},
											{
												"kind": "text",
												"text": " may be emitted as "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": ".\n\nImplementors should not override this method, but instead implement "
											},
											{
												"kind": "code",
												"text": "`readable._destroy()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v8.0.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3075,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Error which will be passed as payload in "
													},
													{
														"kind": "code",
														"text": "`'error'`"
													},
													{
														"kind": "text",
														"text": " event"
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.destroy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.destroy"
							}
						},
						{
							"id": 3076,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 454,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 455,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 456,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 457,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 458,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 459,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 460,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 461,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3077,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3078,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.emit"
									}
								},
								{
									"id": 3079,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3080,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 3081,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.emit"
									}
								},
								{
									"id": 3082,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3083,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.emit"
									}
								},
								{
									"id": 3084,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3085,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3086,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.emit"
									}
								},
								{
									"id": 3087,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3088,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.emit"
									}
								},
								{
									"id": 3089,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3090,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.emit"
									}
								},
								{
									"id": 3091,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3092,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.emit"
									}
								},
								{
									"id": 3093,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3094,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3095,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.emit"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.emit"
							}
						},
						{
							"id": 3096,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 494,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 495,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 496,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 497,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 498,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 499,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 500,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 501,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3097,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3098,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3099,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3100,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 494,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 3101,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.removeListener"
									}
								},
								{
									"id": 3102,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3103,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 3104,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3105,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 495,
															"character": 52
														}
													],
													"signatures": [
														{
															"id": 3106,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3107,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.removeListener"
									}
								},
								{
									"id": 3108,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3109,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 3110,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3111,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 496,
															"character": 51
														}
													],
													"signatures": [
														{
															"id": 3112,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.removeListener"
									}
								},
								{
									"id": 3113,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3114,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3115,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3116,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 497,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 3117,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3118,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.removeListener"
									}
								},
								{
									"id": 3119,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3120,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 3121,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3122,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 498,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 3123,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.removeListener"
									}
								},
								{
									"id": 3124,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3125,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 3126,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3127,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 499,
															"character": 56
														}
													],
													"signatures": [
														{
															"id": 3128,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.removeListener"
									}
								},
								{
									"id": 3129,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3130,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 3131,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3132,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 500,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 3133,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.removeListener"
									}
								},
								{
									"id": 3134,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3135,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3136,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3137,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 501,
															"character": 61
														}
													],
													"signatures": [
														{
															"id": 3138,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3139,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2687,
										"name": "ReadStream",
										"qualifiedName": "ReadStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.removeListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.removeListener"
							}
						},
						{
							"id": 3140,
							"name": "[asyncIterator]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 502,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3141,
									"name": "[asyncIterator]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AsyncIterableIterator",
										"qualifiedName": "AsyncIterableIterator",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Readable.__@asyncIterator@105"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Readable.__@asyncIterator@105"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								2702,
								2711,
								2716,
								2720,
								2724,
								3149,
								3156,
								3159,
								3162,
								3164,
								3167,
								3170,
								3173,
								2735,
								2744,
								2799,
								2854,
								2909,
								2964,
								3142,
								2688,
								2692,
								2696,
								2699,
								3031,
								3037,
								3040,
								3043,
								3046,
								3048,
								3050,
								3052,
								3055,
								3059,
								3062,
								3066,
								3073,
								3076,
								3096,
								3140
							]
						},
						{
							"title": "Properties",
							"children": [
								2728,
								2729,
								2730,
								2731,
								2741,
								2742,
								2743,
								3019,
								3020,
								3021,
								3022,
								3023,
								3024,
								3025,
								3026,
								3027,
								3028,
								3029,
								3030
							]
						},
						{
							"title": "Constructors",
							"children": [
								2732
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 326,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Readable",
							"qualifiedName": "internal.Readable",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 3175,
					"name": "WriteStream",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "* Extends "
							},
							{
								"kind": "code",
								"text": "`stream.Writable`"
							},
							{
								"kind": "text",
								"text": "\n\nInstances of "
							},
							{
								"kind": "code",
								"text": "`fs.WriteStream`"
							},
							{
								"kind": "text",
								"text": " are created and returned using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWriteStream",
								"target": 1904
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.1.93"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 3183,
							"name": "once",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 157,
									"character": 15
								},
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 158,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 3184,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " that is fulfilled when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits the given\nevent or that is rejected if the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " while waiting.\nThe "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event\nsemantics and does not listen to the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe special handling of the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event is only used when "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": "is used to wait for another event. If "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for the\n'"
											},
											{
												"kind": "code",
												"text": "`error'`"
											},
											{
												"kind": "text",
												"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting for the event:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v11.13.0, v10.16.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3185,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "NodeEventTarget",
												"qualifiedName": "NodeEventTarget",
												"package": "@types/node"
											}
										},
										{
											"id": 3186,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3187,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "StaticEventEmitterOptions",
												"qualifiedName": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								},
								{
									"id": 3188,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3189,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "DOMEventTarget",
												"qualifiedName": "DOMEventTarget",
												"package": "@types/node"
											}
										},
										{
											"id": 3190,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3191,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "StaticEventEmitterOptions",
												"qualifiedName": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.once"
							}
						},
						{
							"id": 3192,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 217,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 3193,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns an "
											},
											{
												"kind": "code",
												"text": "`AsyncIterator`"
											},
											{
												"kind": "text",
												"text": " that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events. It will throw\nif the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": ". It removes all listeners when\nexiting the loop. The "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting on events:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v13.6.0, v12.16.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "that iterates "
													},
													{
														"kind": "code",
														"text": "`eventName`"
													},
													{
														"kind": "text",
														"text": " events emitted by the "
													},
													{
														"kind": "code",
														"text": "`emitter`"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3194,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "EventEmitter",
												"qualifiedName": "global.NodeJS.EventEmitter",
												"package": "@types/node"
											}
										},
										{
											"id": 3195,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event being listened for"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3196,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "StaticEventEmitterOptions",
												"qualifiedName": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AsyncIterableIterator",
										"qualifiedName": "AsyncIterableIterator",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.on"
							}
						},
						{
							"id": 3197,
							"name": "listenerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 234,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 3198,
									"name": "listenerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A class method that returns the number of listeners for the given "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "registered on the given "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.12"
													}
												]
											},
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Since v3.2.0 - Use "
													},
													{
														"kind": "code",
														"text": "`listenerCount`"
													},
													{
														"kind": "text",
														"text": " instead."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3199,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The emitter to query"
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "EventEmitter",
												"qualifiedName": "global.NodeJS.EventEmitter",
												"package": "@types/node"
											}
										},
										{
											"id": 3200,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The event name"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.listenerCount"
							}
						},
						{
							"id": 3201,
							"name": "getEventListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 262,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 3202,
									"name": "getEventListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s this behaves exactly the same as calling "
											},
											{
												"kind": "code",
												"text": "`.listeners`"
											},
											{
												"kind": "text",
												"text": " on\nthe emitter.\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v15.2.0, v14.17.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3203,
											"name": "emitter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "EventEmitter",
														"qualifiedName": "global.NodeJS.EventEmitter",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"name": "DOMEventTarget",
														"qualifiedName": "DOMEventTarget",
														"package": "@types/node"
													}
												]
											}
										},
										{
											"id": 3204,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.getEventListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.getEventListeners"
							}
						},
						{
							"id": 3205,
							"name": "setMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 280,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 3206,
									"name": "setMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v15.4.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3207,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A non-negative number. The maximum number of listeners per "
													},
													{
														"kind": "code",
														"text": "`EventTarget`"
													},
													{
														"kind": "text",
														"text": " event."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3208,
											"name": "eventTargets",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "EventEmitter",
															"qualifiedName": "global.NodeJS.EventEmitter",
															"package": "@types/node"
														},
														{
															"type": "reference",
															"name": "DOMEventTarget",
															"qualifiedName": "DOMEventTarget",
															"package": "@types/node"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.setMaxListeners"
							}
						},
						{
							"id": 3209,
							"name": "errorMonitor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This symbol shall be used to install a listener for only monitoring "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": "\nevents. Listeners installed using this symbol are called before the regular\n"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is emitted, therefore the process will still crash if no\nregular "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " listener is installed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 290,
									"character": 24
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 2728,
									"name": "errorMonitor",
									"qualifiedName": "EventEmitter.errorMonitor",
									"package": "@types/node"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.errorMonitor"
							}
						},
						{
							"id": 3210,
							"name": "captureRejectionSymbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 291,
									"character": 24
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 2729,
									"name": "captureRejectionSymbol",
									"qualifiedName": "EventEmitter.captureRejectionSymbol",
									"package": "@types/node"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.captureRejectionSymbol"
							}
						},
						{
							"id": 3211,
							"name": "captureRejections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets or gets the default captureRejection value for all emitters."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 296,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.captureRejections"
							}
						},
						{
							"id": 3212,
							"name": "defaultMaxListeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 297,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.defaultMaxListeners"
							}
						},
						{
							"id": 3634,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 462,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3635,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`emitter.removeListener()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3636,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3637,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3638,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 462,
															"character": 58
														}
													],
													"signatures": [
														{
															"id": 3639,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3640,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.off"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.off"
							}
						},
						{
							"id": 3641,
							"name": "removeAllListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 473,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3642,
									"name": "removeAllListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes all listeners, or those of the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3643,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.removeAllListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.removeAllListeners"
							}
						},
						{
							"id": 3644,
							"name": "setMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 483,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3645,
									"name": "setMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "By default "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s will print a warning if more than "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners()`"
											},
											{
												"kind": "text",
												"text": " method allows the limit to be\nmodified for this specific "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance. The value can be set to"
											},
											{
												"kind": "code",
												"text": "`Infinity`"
											},
											{
												"kind": "text",
												"text": " (or "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.3.5"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3646,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.setMaxListeners"
							}
						},
						{
							"id": 3647,
							"name": "getMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 489,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3648,
									"name": "getMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the current max listener value for the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " which is either\nset by "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners(n)`"
											},
											{
												"kind": "text",
												"text": " or defaults to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "defaultMaxListeners",
												"target": 3212
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v1.0.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.getMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.getMaxListeners"
							}
						},
						{
							"id": 3649,
							"name": "listeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 502,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3650,
									"name": "listeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3651,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.listeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.listeners"
							}
						},
						{
							"id": 3652,
							"name": "rawListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 532,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3653,
									"name": "rawListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ",\nincluding any wrappers (such as those created by "
											},
											{
												"kind": "code",
												"text": "`.once()`"
											},
											{
												"kind": "text",
												"text": ").\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v9.4.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3654,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function",
											"qualifiedName": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.rawListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.rawListeners"
							}
						},
						{
							"id": 3655,
							"name": "listenerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 579,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3656,
									"name": "listenerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the number of listeners listening to the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v3.2.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3657,
											"name": "eventName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event being listened for"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.listenerCount"
							}
						},
						{
							"id": 3658,
							"name": "eventNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 632,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3659,
									"name": "eventNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
											},
											{
												"kind": "code",
												"text": "`Symbol`"
											},
											{
												"kind": "text",
												"text": "s.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.eventNames"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.eventNames"
							}
						},
						{
							"id": 3216,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 415,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3217,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Closes "
											},
											{
												"kind": "code",
												"text": "`writeStream`"
											},
											{
												"kind": "text",
												"text": ". Optionally accepts a\ncallback that will be executed once the "
											},
											{
												"kind": "code",
												"text": "`writeStream`"
											},
											{
												"kind": "text",
												"text": "is closed."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.4"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3218,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3219,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 415,
															"character": 25
														}
													],
													"signatures": [
														{
															"id": 3220,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3221,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "ErrnoException",
																		"qualifiedName": "NodeJS.ErrnoException",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3222,
							"name": "bytesWritten",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of bytes written so far. Does not include data that is still queued\nfor writing."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.4.7"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 421,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3223,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The path to the file the stream is writing to as specified in the first\nargument to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "createWriteStream",
										"target": 1904
									},
									{
										"kind": "text",
										"text": ". If "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " is passed as a string, then"
									},
									{
										"kind": "code",
										"text": "`writeStream.path`"
									},
									{
										"kind": "text",
										"text": " will be a string. If "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " is passed as a "
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": ", then"
									},
									{
										"kind": "code",
										"text": "`writeStream.path`"
									},
									{
										"kind": "text",
										"text": " will be a\n"
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.93"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 428,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								]
							}
						},
						{
							"id": 3224,
							"name": "pending",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the underlying file has not been opened yet,\ni.e. before the "
									},
									{
										"kind": "code",
										"text": "`'ready'`"
									},
									{
										"kind": "text",
										"text": " event is emitted."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 434,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3225,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 441,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 442,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 443,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 444,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 445,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 446,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 447,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 448,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 449,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3226,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "events.EventEmitter\n  1. open\n  2. close\n  3. ready"
											}
										]
									},
									"parameters": [
										{
											"id": 3227,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3228,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3229,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 441,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 3230,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.addListener"
									}
								},
								{
									"id": 3231,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3232,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "drain"
											}
										},
										{
											"id": 3233,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3234,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 442,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 3235,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.addListener"
									}
								},
								{
									"id": 3236,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3237,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3238,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3239,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 443,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 3240,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3241,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.addListener"
									}
								},
								{
									"id": 3242,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3243,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "finish"
											}
										},
										{
											"id": 3244,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3245,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 444,
															"character": 47
														}
													],
													"signatures": [
														{
															"id": 3246,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.addListener"
									}
								},
								{
									"id": 3247,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3248,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 3249,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3250,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 445,
															"character": 45
														}
													],
													"signatures": [
														{
															"id": 3251,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3252,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.addListener"
									}
								},
								{
									"id": 3253,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3254,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pipe"
											}
										},
										{
											"id": 3255,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3256,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 446,
															"character": 45
														}
													],
													"signatures": [
														{
															"id": 3257,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3258,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.addListener"
									}
								},
								{
									"id": 3259,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3260,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 3261,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3262,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 447,
															"character": 46
														}
													],
													"signatures": [
														{
															"id": 3263,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.addListener"
									}
								},
								{
									"id": 3264,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3265,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "unpipe"
											}
										},
										{
											"id": 3266,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3267,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 448,
															"character": 47
														}
													],
													"signatures": [
														{
															"id": 3268,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3269,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.addListener"
									}
								},
								{
									"id": 3270,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3271,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3272,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3273,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 449,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 3274,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3275,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.addListener"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Writable.addListener"
							}
						},
						{
							"id": 3276,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 450,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 451,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 452,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 453,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 454,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 455,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 456,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 457,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 458,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3277,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3278,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3279,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3280,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 450,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 3281,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								},
								{
									"id": 3282,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3283,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "drain"
											}
										},
										{
											"id": 3284,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3285,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 451,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 3286,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								},
								{
									"id": 3287,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3288,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3289,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3290,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 452,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 3291,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3292,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								},
								{
									"id": 3293,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3294,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "finish"
											}
										},
										{
											"id": 3295,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3296,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 453,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 3297,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								},
								{
									"id": 3298,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3299,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 3300,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3301,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 454,
															"character": 36
														}
													],
													"signatures": [
														{
															"id": 3302,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3303,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								},
								{
									"id": 3304,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3305,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pipe"
											}
										},
										{
											"id": 3306,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3307,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 455,
															"character": 36
														}
													],
													"signatures": [
														{
															"id": 3308,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3309,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								},
								{
									"id": 3310,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3311,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 3312,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3313,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 456,
															"character": 37
														}
													],
													"signatures": [
														{
															"id": 3314,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								},
								{
									"id": 3315,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3316,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "unpipe"
											}
										},
										{
											"id": 3317,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3318,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 457,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 3319,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3320,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								},
								{
									"id": 3321,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3322,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3323,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3324,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 458,
															"character": 45
														}
													],
													"signatures": [
														{
															"id": 3325,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3326,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.on"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Writable.on"
							}
						},
						{
							"id": 3327,
							"name": "once",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 459,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 460,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 461,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 462,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 463,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 464,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 465,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 466,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 467,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3328,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3329,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3330,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3331,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 459,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 3332,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								},
								{
									"id": 3333,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3334,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "drain"
											}
										},
										{
											"id": 3335,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3336,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 460,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 3337,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								},
								{
									"id": 3338,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3339,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3340,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3341,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 461,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 3342,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3343,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								},
								{
									"id": 3344,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3345,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "finish"
											}
										},
										{
											"id": 3346,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3347,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 462,
															"character": 40
														}
													],
													"signatures": [
														{
															"id": 3348,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								},
								{
									"id": 3349,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3350,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 3351,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3352,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 463,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 3353,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3354,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								},
								{
									"id": 3355,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3356,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pipe"
											}
										},
										{
											"id": 3357,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3358,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 464,
															"character": 38
														}
													],
													"signatures": [
														{
															"id": 3359,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3360,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								},
								{
									"id": 3361,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3362,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 3363,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3364,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 465,
															"character": 39
														}
													],
													"signatures": [
														{
															"id": 3365,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								},
								{
									"id": 3366,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3367,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "unpipe"
											}
										},
										{
											"id": 3368,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3369,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 466,
															"character": 40
														}
													],
													"signatures": [
														{
															"id": 3370,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3371,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								},
								{
									"id": 3372,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3373,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3374,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3375,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 467,
															"character": 47
														}
													],
													"signatures": [
														{
															"id": 3376,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3377,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.once"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Writable.once"
							}
						},
						{
							"id": 3378,
							"name": "prependListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 468,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 469,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 470,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 471,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 472,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 473,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 474,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 475,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 476,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3379,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3380,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3381,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3382,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 468,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 3383,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependListener"
									}
								},
								{
									"id": 3384,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3385,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "drain"
											}
										},
										{
											"id": 3386,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3387,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 469,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 3388,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependListener"
									}
								},
								{
									"id": 3389,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3390,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3391,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3392,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 470,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 3393,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3394,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependListener"
									}
								},
								{
									"id": 3395,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3396,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "finish"
											}
										},
										{
											"id": 3397,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3398,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 471,
															"character": 51
														}
													],
													"signatures": [
														{
															"id": 3399,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependListener"
									}
								},
								{
									"id": 3400,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3401,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 3402,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3403,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 472,
															"character": 49
														}
													],
													"signatures": [
														{
															"id": 3404,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3405,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependListener"
									}
								},
								{
									"id": 3406,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3407,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pipe"
											}
										},
										{
											"id": 3408,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3409,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 473,
															"character": 49
														}
													],
													"signatures": [
														{
															"id": 3410,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3411,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependListener"
									}
								},
								{
									"id": 3412,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3413,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 3414,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3415,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 474,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 3416,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependListener"
									}
								},
								{
									"id": 3417,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3418,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "unpipe"
											}
										},
										{
											"id": 3419,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3420,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 475,
															"character": 51
														}
													],
													"signatures": [
														{
															"id": 3421,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3422,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependListener"
									}
								},
								{
									"id": 3423,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3424,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3425,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3426,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 476,
															"character": 58
														}
													],
													"signatures": [
														{
															"id": 3427,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3428,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependListener"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Writable.prependListener"
							}
						},
						{
							"id": 3429,
							"name": "prependOnceListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 477,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 478,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 479,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 480,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 481,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 482,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 483,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 484,
									"character": 8
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 485,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3430,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3431,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3432,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3433,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 477,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 3434,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependOnceListener"
									}
								},
								{
									"id": 3435,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3436,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "drain"
											}
										},
										{
											"id": 3437,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3438,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 478,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 3439,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependOnceListener"
									}
								},
								{
									"id": 3440,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3441,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3442,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3443,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 479,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 3444,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3445,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependOnceListener"
									}
								},
								{
									"id": 3446,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3447,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "finish"
											}
										},
										{
											"id": 3448,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3449,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 480,
															"character": 55
														}
													],
													"signatures": [
														{
															"id": 3450,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependOnceListener"
									}
								},
								{
									"id": 3451,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3452,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "open"
											}
										},
										{
											"id": 3453,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3454,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 481,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 3455,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3456,
																	"name": "fd",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependOnceListener"
									}
								},
								{
									"id": 3457,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3458,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pipe"
											}
										},
										{
											"id": 3459,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3460,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 482,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 3461,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3462,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependOnceListener"
									}
								},
								{
									"id": 3463,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3464,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "ready"
											}
										},
										{
											"id": 3465,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3466,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 483,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 3467,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependOnceListener"
									}
								},
								{
									"id": 3468,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3469,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "unpipe"
											}
										},
										{
											"id": 3470,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3471,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 484,
															"character": 55
														}
													],
													"signatures": [
														{
															"id": 3472,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3473,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependOnceListener"
									}
								},
								{
									"id": 3474,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3475,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3476,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3477,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 485,
															"character": 62
														}
													],
													"signatures": [
														{
															"id": 3478,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3479,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"overwrites": {
										"type": "reference",
										"name": "stream.Writable.prependOnceListener"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "stream.Writable.prependOnceListener"
							}
						},
						{
							"id": 3627,
							"name": "pipe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 25,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3628,
									"name": "pipe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 3629,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3144,
														"name": "T",
														"qualifiedName": "T",
														"package": "@types/node"
													}
												],
												"name": "WritableStream",
												"qualifiedName": "NodeJS.WritableStream",
												"package": "@types/node"
											}
										}
									],
									"parameters": [
										{
											"id": 3630,
											"name": "destination",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 3144,
												"name": "T",
												"qualifiedName": "T",
												"package": "@types/node"
											}
										},
										{
											"id": 3631,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3632,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3633,
															"name": "end",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/stream.d.ts",
																	"line": 28,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3633
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 27,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3144,
										"name": "T",
										"qualifiedName": "T",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.pipe"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.pipe"
							}
						},
						{
							"id": 3176,
							"name": "fromWeb",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 527,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 3177,
									"name": "fromWeb",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A utility method for creating a "
											},
											{
												"kind": "code",
												"text": "`Writable`"
											},
											{
												"kind": "text",
												"text": " from a web "
											},
											{
												"kind": "code",
												"text": "`WritableStream`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v17.0.0"
													}
												]
											}
										],
										"modifierTags": [
											"@experimental"
										]
									},
									"parameters": [
										{
											"id": 3178,
											"name": "writableStream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "WritableStream",
												"qualifiedName": "WritableStream",
												"package": "@types/node"
											}
										},
										{
											"id": 3179,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "WritableOptions",
														"qualifiedName": "internal.WritableOptions",
														"package": "@types/node"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "highWaterMark"
															},
															{
																"type": "literal",
																"value": "objectMode"
															},
															{
																"type": "literal",
																"value": "signal"
															},
															{
																"type": "literal",
																"value": "decodeStrings"
															}
														]
													}
												],
												"name": "Pick",
												"qualifiedName": "Pick",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Writable",
										"qualifiedName": "internal.Writable",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.fromWeb"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.fromWeb"
							}
						},
						{
							"id": 3180,
							"name": "toWeb",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 533,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 3181,
									"name": "toWeb",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A utility method for creating a web "
											},
											{
												"kind": "code",
												"text": "`WritableStream`"
											},
											{
												"kind": "text",
												"text": " from a "
											},
											{
												"kind": "code",
												"text": "`Writable`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v17.0.0"
													}
												]
											}
										],
										"modifierTags": [
											"@experimental"
										]
									},
									"parameters": [
										{
											"id": 3182,
											"name": "streamWritable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Writable",
												"qualifiedName": "internal.Writable",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "WritableStream",
										"qualifiedName": "WritableStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.toWeb"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.toWeb"
							}
						},
						{
							"id": 3480,
							"name": "writable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if it is safe to call "
									},
									{
										"kind": "code",
										"text": "`writable.write()`"
									},
									{
										"kind": "text",
										"text": ", which means\nthe stream has not been destroyed, errored or ended."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 539,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.writable"
							}
						},
						{
							"id": 3481,
							"name": "writableEnded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " after "
									},
									{
										"kind": "code",
										"text": "`writable.end()`"
									},
									{
										"kind": "text",
										"text": " has been called. This property\ndoes not indicate whether the data has been flushed, for this use "
									},
									{
										"kind": "code",
										"text": "`writable.writableFinished`"
									},
									{
										"kind": "text",
										"text": " instead."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v12.9.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 545,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.writableEnded"
							}
						},
						{
							"id": 3482,
							"name": "writableFinished",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " immediately before the "
									},
									{
										"kind": "code",
										"text": "`'finish'`"
									},
									{
										"kind": "text",
										"text": " event is emitted."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v12.6.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 550,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.writableFinished"
							}
						},
						{
							"id": 3483,
							"name": "writableHighWaterMark",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return the value of "
									},
									{
										"kind": "code",
										"text": "`highWaterMark`"
									},
									{
										"kind": "text",
										"text": " passed when creating this "
									},
									{
										"kind": "code",
										"text": "`Writable`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 555,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.writableHighWaterMark"
							}
						},
						{
							"id": 3484,
							"name": "writableLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property contains the number of bytes (or objects) in the queue\nready to be written. The value provides introspection data regarding\nthe status of the "
									},
									{
										"kind": "code",
										"text": "`highWaterMark`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 562,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.writableLength"
							}
						},
						{
							"id": 3485,
							"name": "writableObjectMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Getter for the property "
									},
									{
										"kind": "code",
										"text": "`objectMode`"
									},
									{
										"kind": "text",
										"text": " of a given "
									},
									{
										"kind": "code",
										"text": "`Writable`"
									},
									{
										"kind": "text",
										"text": " stream."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v12.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 567,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.writableObjectMode"
							}
						},
						{
							"id": 3486,
							"name": "writableCorked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Number of times "
									},
									{
										"kind": "code",
										"text": "`writable.uncork()`"
									},
									{
										"kind": "text",
										"text": " needs to be\ncalled in order to fully uncork the stream."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.2.0, v12.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 573,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.writableCorked"
							}
						},
						{
							"id": 3487,
							"name": "destroyed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " after "
									},
									{
										"kind": "code",
										"text": "`writable.destroy()`"
									},
									{
										"kind": "text",
										"text": " has been called."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v8.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 578,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.destroyed"
							}
						},
						{
							"id": 3488,
							"name": "closed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is true after 'close' has been emitted."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v8.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 583,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.closed"
							}
						},
						{
							"id": 3489,
							"name": "errored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns error if the stream has been destroyed with an error."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v18.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 588,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Error",
								"qualifiedName": "Error",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.errored"
							}
						},
						{
							"id": 3490,
							"name": "writableNeedDrain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the stream's buffer has been full and stream will emit 'drain'."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 593,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.writableNeedDrain"
							}
						},
						{
							"id": 3213,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 594,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3214,
									"name": "new WriteStream",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3215,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "WritableOptions",
												"qualifiedName": "internal.WritableOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.constructor"
							}
						},
						{
							"id": 3491,
							"name": "_write",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 595,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3492,
									"name": "_write",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3493,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3494,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											}
										},
										{
											"id": 3495,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3496,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 595,
															"character": 67
														}
													],
													"signatures": [
														{
															"id": 3497,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3498,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable._write"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable._write"
							}
						},
						{
							"id": 3499,
							"name": "_writev",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 596,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3500,
									"name": "_writev",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3501,
											"name": "chunks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 3502,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {
															"isExternal": true
														},
														"children": [
															{
																"id": 3503,
																"name": "chunk",
																"kind": 1024,
																"kindString": "Property",
																"flags": {
																	"isExternal": true
																},
																"sources": [
																	{
																		"fileName": "node_modules/@types/node/stream.d.ts",
																		"line": 598,
																		"character": 20
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 3504,
																"name": "encoding",
																"kind": 1024,
																"kindString": "Property",
																"flags": {
																	"isExternal": true
																},
																"sources": [
																	{
																		"fileName": "node_modules/@types/node/stream.d.ts",
																		"line": 599,
																		"character": 20
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "BufferEncoding",
																	"qualifiedName": "global.BufferEncoding",
																	"package": "@types/node"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	3503,
																	3504
																]
															}
														],
														"sources": [
															{
																"fileName": "node_modules/@types/node/stream.d.ts",
																"line": 597,
																"character": 30
															}
														]
													}
												}
											}
										},
										{
											"id": 3505,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3506,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 601,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 3507,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3508,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable._writev"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable._writev"
							}
						},
						{
							"id": 3509,
							"name": "_construct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 603,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3510,
									"name": "_construct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3511,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3512,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 603,
															"character": 34
														}
													],
													"signatures": [
														{
															"id": 3513,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3514,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable._construct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable._construct"
							}
						},
						{
							"id": 3515,
							"name": "_destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 604,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3516,
									"name": "_destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3517,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										},
										{
											"id": 3518,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3519,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 604,
															"character": 52
														}
													],
													"signatures": [
														{
															"id": 3520,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3521,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable._destroy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable._destroy"
							}
						},
						{
							"id": 3522,
							"name": "_final",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 605,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3523,
									"name": "_final",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3524,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3525,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 605,
															"character": 29
														}
													],
													"signatures": [
														{
															"id": 3526,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3527,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable._final"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable._final"
							}
						},
						{
							"id": 3528,
							"name": "write",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 662,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 663,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3529,
									"name": "write",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`writable.write()`"
											},
											{
												"kind": "text",
												"text": " method writes some data to the stream, and calls the\nsupplied "
											},
											{
												"kind": "code",
												"text": "`callback`"
											},
											{
												"kind": "text",
												"text": " once the data has been fully handled. If an error\noccurs, the "
											},
											{
												"kind": "code",
												"text": "`callback`"
											},
											{
												"kind": "text",
												"text": " will be called with the error as its\nfirst argument. The "
											},
											{
												"kind": "code",
												"text": "`callback`"
											},
											{
												"kind": "text",
												"text": " is called asynchronously and before "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " is\nemitted.\n\nThe return value is "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the internal buffer is less than the"
											},
											{
												"kind": "code",
												"text": "`highWaterMark`"
											},
											{
												"kind": "text",
												"text": " configured when the stream was created after admitting "
											},
											{
												"kind": "code",
												"text": "`chunk`"
											},
											{
												"kind": "text",
												"text": ".\nIf "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " is returned, further attempts to write data to the stream should\nstop until the "
											},
											{
												"kind": "code",
												"text": "`'drain'`"
											},
											{
												"kind": "text",
												"text": " event is emitted.\n\nWhile a stream is not draining, calls to "
											},
											{
												"kind": "code",
												"text": "`write()`"
											},
											{
												"kind": "text",
												"text": " will buffer "
											},
											{
												"kind": "code",
												"text": "`chunk`"
											},
											{
												"kind": "text",
												"text": ", and\nreturn false. Once all currently buffered chunks are drained (accepted for\ndelivery by the operating system), the "
											},
											{
												"kind": "code",
												"text": "`'drain'`"
											},
											{
												"kind": "text",
												"text": " event will be emitted.\nOnce "
											},
											{
												"kind": "code",
												"text": "`write()`"
											},
											{
												"kind": "text",
												"text": " returns false, do not write more chunks\nuntil the "
											},
											{
												"kind": "code",
												"text": "`'drain'`"
											},
											{
												"kind": "text",
												"text": " event is emitted. While calling "
											},
											{
												"kind": "code",
												"text": "`write()`"
											},
											{
												"kind": "text",
												"text": " on a stream that\nis not draining is allowed, Node.js will buffer all written chunks until\nmaximum memory usage occurs, at which point it will abort unconditionally.\nEven before it aborts, high memory usage will cause poor garbage collector\nperformance and high RSS (which is not typically released back to the system,\neven after the memory is no longer required). Since TCP sockets may never\ndrain if the remote peer does not read the data, writing a socket that is\nnot draining may lead to a remotely exploitable vulnerability.\n\nWriting data while the stream is not draining is particularly\nproblematic for a "
											},
											{
												"kind": "code",
												"text": "`Transform`"
											},
											{
												"kind": "text",
												"text": ", because the "
											},
											{
												"kind": "code",
												"text": "`Transform`"
											},
											{
												"kind": "text",
												"text": " streams are paused\nby default until they are piped or a "
											},
											{
												"kind": "code",
												"text": "`'data'`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`'readable'`"
											},
											{
												"kind": "text",
												"text": " event handler\nis added.\n\nIf the data to be written can be generated or fetched on demand, it is\nrecommended to encapsulate the logic into a "
											},
											{
												"kind": "code",
												"text": "`Readable`"
											},
											{
												"kind": "text",
												"text": " and use "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "pipe",
												"target": 3627
											},
											{
												"kind": "text",
												"text": ". However, if calling "
											},
											{
												"kind": "code",
												"text": "`write()`"
											},
											{
												"kind": "text",
												"text": " is preferred, it is\npossible to respect backpressure and avoid memory issues using the "
											},
											{
												"kind": "code",
												"text": "`'drain'`"
											},
											{
												"kind": "text",
												"text": " event:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nfunction write(data, cb) {\n  if (!stream.write(data)) {\n    stream.once('drain', cb);\n  } else {\n    process.nextTick(cb);\n  }\n}\n\n// Wait for cb to be called before doing any other write.\nwrite('hello', () => {\n  console.log('Write completed, do more writes now.');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nA "
											},
											{
												"kind": "code",
												"text": "`Writable`"
											},
											{
												"kind": "text",
												"text": " stream in object mode will always ignore the "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " argument."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.4"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": " if the stream wishes for the calling code to wait for the "
													},
													{
														"kind": "code",
														"text": "`'drain'`"
													},
													{
														"kind": "text",
														"text": " event to be emitted before continuing to write additional data; otherwise "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3530,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optional data to write. For streams not operating in object mode, "
													},
													{
														"kind": "code",
														"text": "`chunk`"
													},
													{
														"kind": "text",
														"text": " must be a string, "
													},
													{
														"kind": "code",
														"text": "`Buffer`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`Uint8Array`"
													},
													{
														"kind": "text",
														"text": ". For object mode streams, "
													},
													{
														"kind": "code",
														"text": "`chunk`"
													},
													{
														"kind": "text",
														"text": " may be any\nJavaScript value other than "
													},
													{
														"kind": "code",
														"text": "`null`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3531,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback for when this chunk of data is flushed."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3532,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 662,
															"character": 41
														}
													],
													"signatures": [
														{
															"id": 3533,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3534,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.write"
									}
								},
								{
									"id": 3535,
									"name": "write",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3536,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3537,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											}
										},
										{
											"id": 3538,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3539,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 663,
															"character": 67
														}
													],
													"signatures": [
														{
															"id": 3540,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3541,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.write"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.write"
							}
						},
						{
							"id": 3542,
							"name": "setDefaultEncoding",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 669,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3543,
									"name": "setDefaultEncoding",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`writable.setDefaultEncoding()`"
											},
											{
												"kind": "text",
												"text": " method sets the default "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " for a "
											},
											{
												"kind": "code",
												"text": "`Writable`"
											},
											{
												"kind": "text",
												"text": " stream."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.11.15"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3544,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new default encoding"
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.setDefaultEncoding"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.setDefaultEncoding"
							}
						},
						{
							"id": 3545,
							"name": "end",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 692,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 693,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 694,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3546,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Calling the "
											},
											{
												"kind": "code",
												"text": "`writable.end()`"
											},
											{
												"kind": "text",
												"text": " method signals that no more data will be written\nto the "
											},
											{
												"kind": "code",
												"text": "`Writable`"
											},
											{
												"kind": "text",
												"text": ". The optional "
											},
											{
												"kind": "code",
												"text": "`chunk`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " arguments allow one\nfinal additional chunk of data to be written immediately before closing the\nstream.\n\nCalling the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "write",
												"target": 1378
											},
											{
												"kind": "text",
												"text": " method after calling "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "end",
												"target": 3545
											},
											{
												"kind": "text",
												"text": " will raise an error.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\n// Write 'hello, ' and then end with 'world!'.\nconst fs = require('fs');\nconst file = fs.createWriteStream('example.txt');\nfile.write('hello, ');\nfile.end('world!');\n// Writing more now is not allowed!\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.4"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3547,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3548,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 692,
															"character": 21
														}
													],
													"signatures": [
														{
															"id": 3549,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.end"
									}
								},
								{
									"id": 3550,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3551,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3552,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3553,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 693,
															"character": 33
														}
													],
													"signatures": [
														{
															"id": 3554,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.end"
									}
								},
								{
									"id": 3555,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3556,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3557,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											}
										},
										{
											"id": 3558,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3559,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 694,
															"character": 59
														}
													],
													"signatures": [
														{
															"id": 3560,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.end"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.end"
							}
						},
						{
							"id": 3561,
							"name": "cork",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 709,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3562,
									"name": "cork",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`writable.cork()`"
											},
											{
												"kind": "text",
												"text": " method forces all written data to be buffered in memory.\nThe buffered data will be flushed when either the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "uncork",
												"target": 3563
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "end",
												"target": 3545
											},
											{
												"kind": "text",
												"text": " methods are called.\n\nThe primary intent of "
											},
											{
												"kind": "code",
												"text": "`writable.cork()`"
											},
											{
												"kind": "text",
												"text": " is to accommodate a situation in which\nseveral small chunks are written to the stream in rapid succession. Instead of\nimmediately forwarding them to the underlying destination, "
											},
											{
												"kind": "code",
												"text": "`writable.cork()`"
											},
											{
												"kind": "text",
												"text": "buffers all the chunks until "
											},
											{
												"kind": "code",
												"text": "`writable.uncork()`"
											},
											{
												"kind": "text",
												"text": " is called, which will pass them\nall to "
											},
											{
												"kind": "code",
												"text": "`writable._writev()`"
											},
											{
												"kind": "text",
												"text": ", if present. This prevents a head-of-line blocking\nsituation where data is being buffered while waiting for the first small chunk\nto be processed. However, use of "
											},
											{
												"kind": "code",
												"text": "`writable.cork()`"
											},
											{
												"kind": "text",
												"text": " without implementing"
											},
											{
												"kind": "code",
												"text": "`writable._writev()`"
											},
											{
												"kind": "text",
												"text": " may have an adverse effect on throughput.\n\nSee also: "
											},
											{
												"kind": "code",
												"text": "`writable.uncork()`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`writable._writev()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.11.2"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.cork"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.cork"
							}
						},
						{
							"id": 3563,
							"name": "uncork",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 743,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3564,
									"name": "uncork",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`writable.uncork()`"
											},
											{
												"kind": "text",
												"text": " method flushes all data buffered since "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "cork",
												"target": 3561
											},
											{
												"kind": "text",
												"text": " was called.\n\nWhen using "
											},
											{
												"kind": "code",
												"text": "`writable.cork()`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`writable.uncork()`"
											},
											{
												"kind": "text",
												"text": " to manage the buffering\nof writes to a stream, defer calls to "
											},
											{
												"kind": "code",
												"text": "`writable.uncork()`"
											},
											{
												"kind": "text",
												"text": " using"
											},
											{
												"kind": "code",
												"text": "`process.nextTick()`"
											},
											{
												"kind": "text",
												"text": ". Doing so allows batching of all"
											},
											{
												"kind": "code",
												"text": "`writable.write()`"
											},
											{
												"kind": "text",
												"text": " calls that occur within a given Node.js event\nloop phase.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nstream.cork();\nstream.write('some ');\nstream.write('data ');\nprocess.nextTick(() => stream.uncork());\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`writable.cork()`"
											},
											{
												"kind": "text",
												"text": " method is called multiple times on a stream, the\nsame number of calls to "
											},
											{
												"kind": "code",
												"text": "`writable.uncork()`"
											},
											{
												"kind": "text",
												"text": " must be called to flush the buffered\ndata.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nstream.cork();\nstream.write('some ');\nstream.cork();\nstream.write('data ');\nprocess.nextTick(() => {\n  stream.uncork();\n  // The data will not be flushed until uncork() is called a second time.\n  stream.uncork();\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nSee also: "
											},
											{
												"kind": "code",
												"text": "`writable.cork()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.11.2"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.uncork"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.uncork"
							}
						},
						{
							"id": 3565,
							"name": "destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 760,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3566,
									"name": "destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Destroy the stream. Optionally emit an "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event, and emit a "
											},
											{
												"kind": "code",
												"text": "`'close'`"
											},
											{
												"kind": "text",
												"text": "event (unless "
											},
											{
												"kind": "code",
												"text": "`emitClose`"
											},
											{
												"kind": "text",
												"text": " is set to "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "). After this call, the writable\nstream has ended and subsequent calls to "
											},
											{
												"kind": "code",
												"text": "`write()`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`end()`"
											},
											{
												"kind": "text",
												"text": " will result in\nan "
											},
											{
												"kind": "code",
												"text": "`ERR_STREAM_DESTROYED`"
											},
											{
												"kind": "text",
												"text": " error.\nThis is a destructive and immediate way to destroy a stream. Previous calls to"
											},
											{
												"kind": "code",
												"text": "`write()`"
											},
											{
												"kind": "text",
												"text": " may not have drained, and may trigger an "
											},
											{
												"kind": "code",
												"text": "`ERR_STREAM_DESTROYED`"
											},
											{
												"kind": "text",
												"text": " error.\nUse "
											},
											{
												"kind": "code",
												"text": "`end()`"
											},
											{
												"kind": "text",
												"text": " instead of destroy if data should flush before close, or wait for\nthe "
											},
											{
												"kind": "code",
												"text": "`'drain'`"
											},
											{
												"kind": "text",
												"text": " event before destroying the stream.\n\nOnce "
											},
											{
												"kind": "code",
												"text": "`destroy()`"
											},
											{
												"kind": "text",
												"text": " has been called any further calls will be a no-op and no\nfurther errors except from "
											},
											{
												"kind": "code",
												"text": "`_destroy()`"
											},
											{
												"kind": "text",
												"text": " may be emitted as "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": ".\n\nImplementors should not override this method,\nbut instead implement "
											},
											{
												"kind": "code",
												"text": "`writable._destroy()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v8.0.0"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 3567,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optional, an error to emit with "
													},
													{
														"kind": "code",
														"text": "`'error'`"
													},
													{
														"kind": "text",
														"text": " event."
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.destroy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.destroy"
							}
						},
						{
							"id": 3568,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 778,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 779,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 780,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 781,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 782,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 783,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 784,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3569,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3570,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.emit"
									}
								},
								{
									"id": 3571,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3572,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "drain"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.emit"
									}
								},
								{
									"id": 3573,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3574,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3575,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.emit"
									}
								},
								{
									"id": 3576,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3577,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "finish"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.emit"
									}
								},
								{
									"id": 3578,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3579,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pipe"
											}
										},
										{
											"id": 3580,
											"name": "src",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Readable",
												"qualifiedName": "internal.Readable",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.emit"
									}
								},
								{
									"id": 3581,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3582,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "unpipe"
											}
										},
										{
											"id": 3583,
											"name": "src",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Readable",
												"qualifiedName": "internal.Readable",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.emit"
									}
								},
								{
									"id": 3584,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3585,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3586,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.emit"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.emit"
							}
						},
						{
							"id": 3587,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 813,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 814,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 815,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 816,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 817,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 818,
									"character": 12
								},
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 819,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3588,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3589,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3590,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3591,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 813,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 3592,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.removeListener"
									}
								},
								{
									"id": 3593,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3594,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "drain"
											}
										},
										{
											"id": 3595,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3596,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 814,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 3597,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.removeListener"
									}
								},
								{
									"id": 3598,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3599,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3600,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3601,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 815,
															"character": 53
														}
													],
													"signatures": [
														{
															"id": 3602,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3603,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error",
																		"qualifiedName": "Error",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.removeListener"
									}
								},
								{
									"id": 3604,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3605,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "finish"
											}
										},
										{
											"id": 3606,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3607,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 816,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 3608,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.removeListener"
									}
								},
								{
									"id": 3609,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3610,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pipe"
											}
										},
										{
											"id": 3611,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3612,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 817,
															"character": 52
														}
													],
													"signatures": [
														{
															"id": 3613,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3614,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.removeListener"
									}
								},
								{
									"id": 3615,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3616,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "unpipe"
											}
										},
										{
											"id": 3617,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3618,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 818,
															"character": 54
														}
													],
													"signatures": [
														{
															"id": 3619,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3620,
																	"name": "src",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Readable",
																		"qualifiedName": "internal.Readable",
																		"package": "@types/node"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.removeListener"
									}
								},
								{
									"id": 3621,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3622,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3623,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3624,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 819,
															"character": 61
														}
													],
													"signatures": [
														{
															"id": 3625,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3626,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3175,
										"name": "WriteStream",
										"qualifiedName": "WriteStream",
										"package": "@types/node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "stream.Writable.removeListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "stream.Writable.removeListener"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								3183,
								3192,
								3197,
								3201,
								3205,
								3634,
								3641,
								3644,
								3647,
								3649,
								3652,
								3655,
								3658,
								3216,
								3225,
								3276,
								3327,
								3378,
								3429,
								3627,
								3176,
								3180,
								3491,
								3499,
								3509,
								3515,
								3522,
								3528,
								3542,
								3545,
								3561,
								3563,
								3565,
								3568,
								3587
							]
						},
						{
							"title": "Properties",
							"children": [
								3209,
								3210,
								3211,
								3212,
								3222,
								3223,
								3224,
								3480,
								3481,
								3482,
								3483,
								3484,
								3485,
								3486,
								3487,
								3488,
								3489,
								3490
							]
						},
						{
							"title": "Constructors",
							"children": [
								3213
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 409,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Writable",
							"qualifiedName": "internal.Writable",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 1592,
					"name": "renameSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 523,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1593,
							"name": "renameSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renames the file from "
									},
									{
										"kind": "code",
										"text": "`oldPath`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`newPath`"
									},
									{
										"kind": "text",
										"text": ". Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`rename(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/rename.2.html) documentation for more details."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.21"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1594,
									"name": "oldPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1595,
									"name": "newPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1596,
					"name": "truncateSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 568,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1597,
							"name": "truncateSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Truncates the file. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ". A file descriptor can also be\npassed as the first argument. In this case, "
									},
									{
										"kind": "code",
										"text": "`fs.ftruncateSync()`"
									},
									{
										"kind": "text",
										"text": " is called.\n\nPassing a file descriptor is deprecated and may result in an error being thrown\nin the future."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.8.6"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1598,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1599,
									"name": "len",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1600,
					"name": "ftruncateSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 634,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1601,
							"name": "ftruncateSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Truncates the file descriptor. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ftruncate",
										"target": 946
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.8.6"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1602,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1603,
									"name": "len",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1604,
					"name": "chownSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 657,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1605,
							"name": "chownSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously changes owner and group of a file. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\nThis is the synchronous version of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "chown",
										"target": 873
									},
									{
										"kind": "text",
										"text": ".\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`chown(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/chown.2.html) documentation for more detail."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.97"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1606,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1607,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1608,
									"name": "gid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1609,
					"name": "fchownSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 681,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1610,
							"name": "fchownSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the owner of the file. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`fchown(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/fchown.2.html) documentation for more detail."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.4.7"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1611,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1612,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The file's new owner's user id."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1613,
									"name": "gid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The file's new group's group id."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1614,
					"name": "lchownSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 703,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1615,
							"name": "lchownSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the owner for the path. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`lchown(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/lchown.2.html) documentation for more details."
									}
								]
							},
							"parameters": [
								{
									"id": 1616,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1617,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The file's new owner's user id."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1618,
									"name": "gid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The file's new group's group id."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1619,
					"name": "lutimes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 713,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 714,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1620,
							"name": "lutimes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes the access and modification times of a file in the same way as "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "utimes",
										"target": 1353
									},
									{
										"kind": "text",
										"text": ", with the difference that if the path refers to a symbolic\nlink, then the link is not dereferenced: instead, the timestamps of the\nsymbolic link itself are changed.\n\nNo arguments other than a possible exception are given to the completion\ncallback."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v14.5.0, v12.19.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1621,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1622,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2324,
										"name": "TimeLike",
										"qualifiedName": "TimeLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1623,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2324,
										"name": "TimeLike",
										"qualifiedName": "TimeLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1624,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2325,
										"name": "NoParamCallback",
										"qualifiedName": "NoParamCallback",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1625,
					"name": "lutimes",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1626,
							"name": "__promisify__",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 723,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 1627,
									"name": "__promisify__",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Changes the access and modification times of a file in the same way as "
											},
											{
												"kind": "code",
												"text": "`fsPromises.utimes()`"
											},
											{
												"kind": "text",
												"text": ",\nwith the difference that if the path refers to a symbolic link, then the link is not\ndereferenced: instead, the timestamps of the symbolic link itself are changed."
											}
										]
									},
									"parameters": [
										{
											"id": 1628,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1629,
											"name": "atime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The last access time. If a string is provided, it will be coerced to number."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2324,
												"name": "TimeLike",
												"qualifiedName": "TimeLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1630,
											"name": "mtime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The last modified time. If a string is provided, it will be coerced to number."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2324,
												"name": "TimeLike",
												"qualifiedName": "TimeLike",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								1626
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 713,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 714,
							"character": 21
						}
					]
				},
				{
					"id": 1631,
					"name": "lutimesSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 731,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1632,
							"name": "lutimesSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Change the file system timestamps of the symbolic link referenced by "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": ".\nReturns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ", or throws an exception when parameters are incorrect or\nthe operation fails. This is the synchronous version of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "lutimes",
										"target": 1619
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v14.5.0, v12.19.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1633,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1634,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2324,
										"name": "TimeLike",
										"qualifiedName": "TimeLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1635,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2324,
										"name": "TimeLike",
										"qualifiedName": "TimeLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1636,
					"name": "chmodSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 764,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1637,
							"name": "chmodSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "For detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "chmod",
										"target": 862
									},
									{
										"kind": "text",
										"text": ".\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`chmod(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/chmod.2.html) documentation for more detail."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.6.7"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1638,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1639,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1640,
					"name": "fchmodSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 787,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1641,
							"name": "fchmodSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the permissions on the file. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`fchmod(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/fchmod.2.html) documentation for more detail."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.4.7"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1642,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1643,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1644,
					"name": "lchmod",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 797,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 799,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1645,
							"name": "lchmod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes the permissions on a symbolic link. No arguments other than a possible\nexception are given to the completion callback.\n\nThis method is only implemented on macOS.\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`lchmod(2)`"
									},
									{
										"kind": "text",
										"text": "](https://www.freebsd.org/cgi/man.cgi?query=lchmod&sektion=2) documentation for more detail."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v0.4.7"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1646,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1647,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/node"
									}
								},
								{
									"id": 1648,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2325,
										"name": "NoParamCallback",
										"qualifiedName": "NoParamCallback",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1649,
					"name": "lchmod",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"children": [
						{
							"id": 1650,
							"name": "__promisify__",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 805,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 1651,
									"name": "__promisify__",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous lchmod(2) - Change permissions of a file. Does not dereference symbolic links."
											}
										]
									},
									"parameters": [
										{
											"id": 1652,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1653,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A file mode. If a string is passed, it is parsed as an octal integer."
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "Mode",
												"qualifiedName": "Mode",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								1650
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 797,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 799,
							"character": 21
						}
					]
				},
				{
					"id": 1654,
					"name": "lchmodSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 815,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1655,
							"name": "lchmodSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes the permissions on a symbolic link. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nThis method is only implemented on macOS.\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`lchmod(2)`"
									},
									{
										"kind": "text",
										"text": "](https://www.freebsd.org/cgi/man.cgi?query=lchmod&sektion=2) documentation for more detail."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v0.4.7"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1656,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1657,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3660,
					"name": "StatSyncFn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3682,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the name of the function. Function names are read-only and can not be changed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.name"
							}
						},
						{
							"id": 3683,
							"name": "[hasInstance]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
									"line": 162,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3684,
									"name": "[hasInstance]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Determines whether the given value inherits from this function if this function was used\r\nas a constructor function.\r\n\r\nA constructor function can control which objects are recognized as its instances by\r\n'instanceof' by overriding this method."
											}
										]
									},
									"parameters": [
										{
											"id": 3685,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.__@hasInstance@20"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.__@hasInstance@20"
							}
						},
						{
							"id": 3661,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 286,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3662,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
											}
										]
									},
									"parameters": [
										{
											"id": 3663,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Function",
												"qualifiedName": "Function",
												"package": "typescript"
											}
										},
										{
											"id": 3664,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The object to be used as the this object."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3665,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A set of arguments to be passed to the function."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.apply"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.apply"
							}
						},
						{
							"id": 3666,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 293,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3667,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Calls a method of an object, substituting another object for the current object."
											}
										]
									},
									"parameters": [
										{
											"id": 3668,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Function",
												"qualifiedName": "Function",
												"package": "typescript"
											}
										},
										{
											"id": 3669,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The object to be used as the current object."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3670,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A list of arguments to be passed to the method."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.call"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.call"
							}
						},
						{
							"id": 3671,
							"name": "bind",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 301,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3672,
									"name": "bind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "For a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
											}
										]
									},
									"parameters": [
										{
											"id": 3673,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Function",
												"qualifiedName": "Function",
												"package": "typescript"
											}
										},
										{
											"id": 3674,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object to which the this keyword can refer inside the new function."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3675,
											"name": "argArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A list of arguments to be passed to the new function."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.bind"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.bind"
							}
						},
						{
							"id": 3676,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 304,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 3677,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a string representation of a function."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.toString"
							}
						},
						{
							"id": 3678,
							"name": "prototype",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 306,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.prototype"
							}
						},
						{
							"id": 3679,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 307,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.length"
							}
						},
						{
							"id": 3680,
							"name": "arguments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 310,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.arguments"
							}
						},
						{
							"id": 3681,
							"name": "caller",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 311,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "Function",
								"qualifiedName": "Function",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Function.caller"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3682,
								3678,
								3679,
								3680,
								3681
							]
						},
						{
							"title": "Methods",
							"children": [
								3683,
								3661,
								3666,
								3671,
								3676
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 935,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 3686,
							"name": "StatSyncFn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 3687,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3688,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 3689,
							"name": "StatSyncFn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 3690,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3691,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3692,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3693,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 940,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														},
														{
															"id": 3694,
															"name": "throwIfNoEntry",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 941,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3693,
																3694
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 939,
															"character": 40
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 3695,
							"name": "StatSyncFn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 3696,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3697,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3698,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3699,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 947,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														},
														{
															"id": 3700,
															"name": "throwIfNoEntry",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 948,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3699,
																3700
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 946,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3883,
								"name": "BigIntStats",
								"qualifiedName": "BigIntStats",
								"package": "@types/node"
							}
						},
						{
							"id": 3701,
							"name": "StatSyncFn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 3702,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3703,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3704,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3705,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 954,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3705
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 953,
															"character": 40
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 3706,
							"name": "StatSyncFn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 3707,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3708,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3709,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3710,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 960,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3710
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 959,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3883,
								"name": "BigIntStats",
								"qualifiedName": "BigIntStats",
								"package": "@types/node"
							}
						},
						{
							"id": 3711,
							"name": "StatSyncFn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 3712,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3713,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3714,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3715,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 966,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 3716,
															"name": "throwIfNoEntry",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 967,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3715,
																3716
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 965,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									},
									{
										"type": "reference",
										"id": 3883,
										"name": "BigIntStats",
										"qualifiedName": "BigIntStats",
										"package": "@types/node"
									}
								]
							}
						},
						{
							"id": 3717,
							"name": "StatSyncFn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 3718,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3719,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3924,
										"name": "StatSyncOptions",
										"qualifiedName": "StatSyncOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									},
									{
										"type": "reference",
										"id": 3883,
										"name": "BigIntStats",
										"qualifiedName": "BigIntStats",
										"package": "@types/node"
									}
								]
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Function",
							"qualifiedName": "Function",
							"package": "typescript"
						}
					]
				},
				{
					"id": 3720,
					"name": "statSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 976,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3721,
							"name": "statSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous stat(2) - Get file status."
									}
								]
							},
							"parameters": [
								{
									"id": 3722,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3723,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 3724,
							"name": "statSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous stat(2) - Get file status."
									}
								]
							},
							"parameters": [
								{
									"id": 3725,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3726,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3727,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3728,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 940,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														},
														{
															"id": 3729,
															"name": "throwIfNoEntry",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 941,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3728,
																3729
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 939,
															"character": 40
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 3730,
							"name": "statSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous stat(2) - Get file status."
									}
								]
							},
							"parameters": [
								{
									"id": 3731,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3732,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3733,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3734,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 947,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														},
														{
															"id": 3735,
															"name": "throwIfNoEntry",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 948,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3734,
																3735
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 946,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3883,
								"name": "BigIntStats",
								"qualifiedName": "BigIntStats",
								"package": "@types/node"
							}
						},
						{
							"id": 3736,
							"name": "statSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous stat(2) - Get file status."
									}
								]
							},
							"parameters": [
								{
									"id": 3737,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3738,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3739,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3740,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 954,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3740
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 953,
															"character": 40
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 3741,
							"name": "statSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous stat(2) - Get file status."
									}
								]
							},
							"parameters": [
								{
									"id": 3742,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3743,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3744,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3745,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 960,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3745
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 959,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3883,
								"name": "BigIntStats",
								"qualifiedName": "BigIntStats",
								"package": "@types/node"
							}
						},
						{
							"id": 3746,
							"name": "statSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous stat(2) - Get file status."
									}
								]
							},
							"parameters": [
								{
									"id": 3747,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3748,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3749,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3750,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 966,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 3751,
															"name": "throwIfNoEntry",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 967,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3750,
																3751
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 965,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									},
									{
										"type": "reference",
										"id": 3883,
										"name": "BigIntStats",
										"qualifiedName": "BigIntStats",
										"package": "@types/node"
									}
								]
							}
						},
						{
							"id": 3752,
							"name": "statSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous stat(2) - Get file status."
									}
								]
							},
							"parameters": [
								{
									"id": 3753,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3754,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3924,
										"name": "StatSyncOptions",
										"qualifiedName": "StatSyncOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									},
									{
										"type": "reference",
										"id": 3883,
										"name": "BigIntStats",
										"qualifiedName": "BigIntStats",
										"package": "@types/node"
									}
								]
							}
						}
					]
				},
				{
					"id": 1658,
					"name": "fstatSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1026,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1032,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1038,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1659,
							"name": "fstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the "
									},
									{
										"kind": "code",
										"text": "`fs.Stats`"
									},
									{
										"kind": "text",
										"text": " for the file descriptor.\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`fstat(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/fstat.2.html) documentation for more detail."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.95"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1660,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1661,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3922,
												"name": "StatOptions",
												"qualifiedName": "StatOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1662,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1663,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 1029,
																	"character": 12
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1663
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 1028,
															"character": 32
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 1664,
							"name": "fstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1665,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1666,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3922,
												"name": "StatOptions",
												"qualifiedName": "StatOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1667,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1668,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 1035,
																	"character": 12
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1668
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 1034,
															"character": 31
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3883,
								"name": "BigIntStats",
								"qualifiedName": "BigIntStats",
								"package": "@types/node"
							}
						},
						{
							"id": 1669,
							"name": "fstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1670,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1671,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3922,
										"name": "StatOptions",
										"qualifiedName": "StatOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									},
									{
										"type": "reference",
										"id": 3883,
										"name": "BigIntStats",
										"qualifiedName": "BigIntStats",
										"package": "@types/node"
									}
								]
							}
						}
					]
				},
				{
					"id": 3755,
					"name": "lstatSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1088,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 3756,
							"name": "lstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous lstat(2) - Get file status. Does not dereference symbolic links."
									}
								]
							},
							"parameters": [
								{
									"id": 3757,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3758,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 3759,
							"name": "lstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous lstat(2) - Get file status. Does not dereference symbolic links."
									}
								]
							},
							"parameters": [
								{
									"id": 3760,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3761,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3762,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3763,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 940,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														},
														{
															"id": 3764,
															"name": "throwIfNoEntry",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 941,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3763,
																3764
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 939,
															"character": 40
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 3765,
							"name": "lstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous lstat(2) - Get file status. Does not dereference symbolic links."
									}
								]
							},
							"parameters": [
								{
									"id": 3766,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3767,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3768,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3769,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 947,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														},
														{
															"id": 3770,
															"name": "throwIfNoEntry",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 948,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3769,
																3770
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 946,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3883,
								"name": "BigIntStats",
								"qualifiedName": "BigIntStats",
								"package": "@types/node"
							}
						},
						{
							"id": 3771,
							"name": "lstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous lstat(2) - Get file status. Does not dereference symbolic links."
									}
								]
							},
							"parameters": [
								{
									"id": 3772,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3773,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3774,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3775,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 954,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3775
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 953,
															"character": 40
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						},
						{
							"id": 3776,
							"name": "lstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous lstat(2) - Get file status. Does not dereference symbolic links."
									}
								]
							},
							"parameters": [
								{
									"id": 3777,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3778,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3779,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3780,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 960,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3780
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 959,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3883,
								"name": "BigIntStats",
								"qualifiedName": "BigIntStats",
								"package": "@types/node"
							}
						},
						{
							"id": 3781,
							"name": "lstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous lstat(2) - Get file status. Does not dereference symbolic links."
									}
								]
							},
							"parameters": [
								{
									"id": 3782,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3783,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3924,
												"name": "StatSyncOptions",
												"qualifiedName": "StatSyncOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3784,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3785,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 966,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 3786,
															"name": "throwIfNoEntry",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 967,
																	"character": 16
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3785,
																3786
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 965,
															"character": 39
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									},
									{
										"type": "reference",
										"id": 3883,
										"name": "BigIntStats",
										"qualifiedName": "BigIntStats",
										"package": "@types/node"
									}
								]
							}
						},
						{
							"id": 3787,
							"name": "lstatSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous lstat(2) - Get file status. Does not dereference symbolic links."
									}
								]
							},
							"parameters": [
								{
									"id": 3788,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 3789,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3924,
										"name": "StatSyncOptions",
										"qualifiedName": "StatSyncOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 2370,
										"name": "Stats",
										"qualifiedName": "Stats",
										"package": "@types/node"
									},
									{
										"type": "reference",
										"id": 3883,
										"name": "BigIntStats",
										"qualifiedName": "BigIntStats",
										"package": "@types/node"
									}
								]
							}
						}
					]
				},
				{
					"id": 1672,
					"name": "linkSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1108,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1673,
							"name": "linkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new link from the "
									},
									{
										"kind": "code",
										"text": "`existingPath`"
									},
									{
										"kind": "text",
										"text": " to the "
									},
									{
										"kind": "code",
										"text": "`newPath`"
									},
									{
										"kind": "text",
										"text": ". See the POSIX ["
									},
									{
										"kind": "code",
										"text": "`link(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/link.2.html) documentation for more detail. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.31"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1674,
									"name": "existingPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1675,
									"name": "newPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1676,
					"name": "symlinkSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1165,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1677,
							"name": "symlinkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "symlink",
										"target": 1307
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.31"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1678,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1679,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1680,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Type",
										"qualifiedName": "symlink.Type",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1681,
					"name": "readlinkSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1227,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1233,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1239,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1682,
							"name": "readlinkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the symbolic link's string value.\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`readlink(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/readlink.2.html) documentation for more details.\n\nThe optional "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " argument can be a string specifying an encoding, or an\nobject with an "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " property specifying the character encoding to use for\nthe link path returned. If the "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " is set to "
									},
									{
										"kind": "code",
										"text": "`'buffer'`"
									},
									{
										"kind": "text",
										"text": ",\nthe link path returned will be passed as a "
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": " object."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.31"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1683,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1684,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 2334,
										"name": "EncodingOption",
										"qualifiedName": "EncodingOption",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1685,
							"name": "readlinkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous readlink(2) - read value of a symbolic link."
									}
								]
							},
							"parameters": [
								{
									"id": 1686,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1687,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2329,
										"name": "BufferEncodingOption",
										"qualifiedName": "BufferEncodingOption",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						},
						{
							"id": 1688,
							"name": "readlinkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous readlink(2) - read value of a symbolic link."
									}
								]
							},
							"parameters": [
								{
									"id": 1689,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1690,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2334,
										"name": "EncodingOption",
										"qualifiedName": "EncodingOption",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								]
							}
						}
					]
				},
				{
					"id": 1691,
					"name": "realpathSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1332,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1338,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1344,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1345,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1692,
							"name": "realpathSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the resolved pathname.\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "realpath",
										"target": 1192
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.31"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1693,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1694,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 2334,
										"name": "EncodingOption",
										"qualifiedName": "EncodingOption",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1695,
							"name": "realpathSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous realpath(3) - return the canonicalized absolute pathname."
									}
								]
							},
							"parameters": [
								{
									"id": 1696,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1697,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2329,
										"name": "BufferEncodingOption",
										"qualifiedName": "BufferEncodingOption",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						},
						{
							"id": 1698,
							"name": "realpathSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous realpath(3) - return the canonicalized absolute pathname."
									}
								]
							},
							"parameters": [
								{
									"id": 1699,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1700,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2334,
										"name": "EncodingOption",
										"qualifiedName": "EncodingOption",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								]
							}
						}
					]
				},
				{
					"id": 1701,
					"name": "realpathSync",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1702,
							"name": "native",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1346,
									"character": 17
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1347,
									"character": 17
								},
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1348,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 1703,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1704,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1705,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 2334,
												"name": "EncodingOption",
												"qualifiedName": "EncodingOption",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1706,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1707,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1708,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2329,
												"name": "BufferEncodingOption",
												"qualifiedName": "BufferEncodingOption",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								},
								{
									"id": 1709,
									"name": "native",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1710,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1711,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 2334,
												"name": "EncodingOption",
												"qualifiedName": "EncodingOption",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								1702
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1332,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1338,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1344,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1345,
							"character": 21
						}
					]
				},
				{
					"id": 1712,
					"name": "unlinkSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1381,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1713,
							"name": "unlinkSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous ["
									},
									{
										"kind": "code",
										"text": "`unlink(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/unlink.2.html). Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.21"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1714,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3790,
					"name": "RmDirOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3791,
							"name": "maxRetries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If an "
									},
									{
										"kind": "code",
										"text": "`EBUSY`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`EMFILE`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`ENFILE`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`ENOTEMPTY`"
									},
									{
										"kind": "text",
										"text": ", or\n"
									},
									{
										"kind": "code",
										"text": "`EPERM`"
									},
									{
										"kind": "text",
										"text": " error is encountered, Node.js will retry the operation with a linear\nbackoff wait of "
									},
									{
										"kind": "code",
										"text": "`retryDelay`"
									},
									{
										"kind": "text",
										"text": " ms longer on each try. This option represents the\nnumber of retries. This option is ignored if the "
									},
									{
										"kind": "code",
										"text": "`recursive`"
									},
									{
										"kind": "text",
										"text": " option is not\n"
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1391,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3792,
							"name": "recursive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "since v14.14.0 In future versions of Node.js and will trigger a warning\n"
											},
											{
												"kind": "code",
												"text": "`fs.rmdir(path, { recursive: true })`"
											},
											{
												"kind": "text",
												"text": " will throw if "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " does not exist or is a file.\nUse "
											},
											{
												"kind": "code",
												"text": "`fs.rm(path, { recursive: true, force: true })`"
											},
											{
												"kind": "text",
												"text": " instead.\n\nIf "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", perform a recursive directory removal. In\nrecursive mode, operations are retried on failure."
											}
										]
									},
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "false"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1401,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3793,
							"name": "retryDelay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of time in milliseconds to wait between retries.\nThis option is ignored if the "
									},
									{
										"kind": "code",
										"text": "`recursive`"
									},
									{
										"kind": "text",
										"text": " option is not "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "100"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1407,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3791,
								3792,
								3793
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1382,
							"character": 21
						}
					]
				},
				{
					"id": 1715,
					"name": "rmdirSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1437,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1716,
							"name": "rmdirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous ["
									},
									{
										"kind": "code",
										"text": "`rmdir(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/rmdir.2.html). Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nUsing "
									},
									{
										"kind": "code",
										"text": "`fs.rmdirSync()`"
									},
									{
										"kind": "text",
										"text": " on a file (not a directory) results in an "
									},
									{
										"kind": "code",
										"text": "`ENOENT`"
									},
									{
										"kind": "text",
										"text": " error\non Windows and an "
									},
									{
										"kind": "code",
										"text": "`ENOTDIR`"
									},
									{
										"kind": "text",
										"text": " error on POSIX.\n\nTo get a behavior similar to the "
									},
									{
										"kind": "code",
										"text": "`rm -rf`"
									},
									{
										"kind": "text",
										"text": " Unix command, use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "rmSync",
										"target": 1719
									},
									{
										"kind": "text",
										"text": " with options "
									},
									{
										"kind": "code",
										"text": "`{ recursive: true, force: true }`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.21"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1717,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1718,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3790,
										"name": "RmDirOptions",
										"qualifiedName": "RmDirOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3794,
					"name": "RmOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3795,
							"name": "force",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", exceptions will be ignored if "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " does not exist."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "false"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1443,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3796,
							"name": "maxRetries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If an "
									},
									{
										"kind": "code",
										"text": "`EBUSY`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`EMFILE`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`ENFILE`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`ENOTEMPTY`"
									},
									{
										"kind": "text",
										"text": ", or\n"
									},
									{
										"kind": "code",
										"text": "`EPERM`"
									},
									{
										"kind": "text",
										"text": " error is encountered, Node.js will retry the operation with a linear\nbackoff wait of "
									},
									{
										"kind": "code",
										"text": "`retryDelay`"
									},
									{
										"kind": "text",
										"text": " ms longer on each try. This option represents the\nnumber of retries. This option is ignored if the "
									},
									{
										"kind": "code",
										"text": "`recursive`"
									},
									{
										"kind": "text",
										"text": " option is not\n"
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1452,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3797,
							"name": "recursive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", perform a recursive directory removal. In\nrecursive mode, operations are retried on failure."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "false"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1458,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3798,
							"name": "retryDelay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of time in milliseconds to wait between retries.\nThis option is ignored if the "
									},
									{
										"kind": "code",
										"text": "`recursive`"
									},
									{
										"kind": "text",
										"text": " option is not "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "100"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1464,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3795,
								3796,
								3797,
								3798
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1438,
							"character": 21
						}
					]
				},
				{
					"id": 1719,
					"name": "rmSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1483,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1720,
							"name": "rmSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously removes files and directories (modeled on the standard POSIX "
									},
									{
										"kind": "code",
										"text": "`rm`"
									},
									{
										"kind": "text",
										"text": "utility). Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v14.14.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1721,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1722,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3794,
										"name": "RmOptions",
										"qualifiedName": "RmOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3799,
					"name": "MakeDirectoryOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3800,
							"name": "recursive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether parent folders should be created.\nIf a folder was created, the path to the first created folder will be returned."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "false"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1490,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3801,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A file mode. If a string is passed, it is parsed as an octal integer. If not specified"
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "0o777"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 1495,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Mode",
								"qualifiedName": "Mode",
								"package": "@types/node"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3800,
								3801
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1484,
							"character": 21
						}
					]
				},
				{
					"id": 1723,
					"name": "mkdtempSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1752,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1758,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1764,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1724,
							"name": "mkdtempSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the created directory path.\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "mkdtemp",
										"target": 1496
									},
									{
										"kind": "text",
										"text": ".\n\nThe optional "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " argument can be a string specifying an encoding, or an\nobject with an "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " property specifying the character encoding to use."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v5.10.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1725,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1726,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 2334,
										"name": "EncodingOption",
										"qualifiedName": "EncodingOption",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1727,
							"name": "mkdtempSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously creates a unique temporary directory.\nGenerates six random characters to be appended behind a required prefix to create a unique temporary directory."
									}
								]
							},
							"parameters": [
								{
									"id": 1728,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1729,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2329,
										"name": "BufferEncodingOption",
										"qualifiedName": "BufferEncodingOption",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						},
						{
							"id": 1730,
							"name": "mkdtempSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously creates a unique temporary directory.\nGenerates six random characters to be appended behind a required prefix to create a unique temporary directory."
									}
								]
							},
							"parameters": [
								{
									"id": 1731,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1732,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2334,
										"name": "EncodingOption",
										"qualifiedName": "EncodingOption",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								]
							}
						}
					]
				},
				{
					"id": 1733,
					"name": "readdirSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1907,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1922,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1936,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1950,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1734,
							"name": "readdirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reads the contents of the directory.\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`readdir(3)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man3/readdir.3.html) documentation for more details.\n\nThe optional "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " argument can be a string specifying an encoding, or an\nobject with an "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " property specifying the character encoding to use for\nthe filenames returned. If the "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " is set to "
									},
									{
										"kind": "code",
										"text": "`'buffer'`"
									},
									{
										"kind": "text",
										"text": ",\nthe filenames returned will be passed as "
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": " objects.\n\nIf "
									},
									{
										"kind": "code",
										"text": "`options.withFileTypes`"
									},
									{
										"kind": "text",
										"text": " is set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the result will contain "
									},
									{
										"kind": "code",
										"text": "`fs.Dirent`"
									},
									{
										"kind": "text",
										"text": " objects."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.21"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1735,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1736,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1737,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1738,
															"name": "encoding",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 1911,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "BufferEncoding",
																"qualifiedName": "global.BufferEncoding",
																"package": "@types/node"
															}
														},
														{
															"id": 1739,
															"name": "withFileTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 1912,
																	"character": 18
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1738,
																1739
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 1910,
															"character": 14
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1740,
							"name": "readdirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous readdir(3) - read a directory."
									}
								]
							},
							"parameters": [
								{
									"id": 1741,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1742,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "buffer"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1743,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1744,
															"name": "encoding",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 1926,
																	"character": 18
																}
															],
															"type": {
																"type": "literal",
																"value": "buffer"
															}
														},
														{
															"id": 1745,
															"name": "withFileTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 1927,
																	"character": 18
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1744,
																1745
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 1925,
															"character": 14
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Buffer",
									"qualifiedName": "global.Buffer",
									"package": "@types/node"
								}
							}
						},
						{
							"id": 1746,
							"name": "readdirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous readdir(3) - read a directory."
									}
								]
							},
							"parameters": [
								{
									"id": 1747,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1748,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											},
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 2332,
														"name": "ObjectEncodingOptions",
														"qualifiedName": "ObjectEncodingOptions",
														"package": "@types/node"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1749,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 1750,
																	"name": "withFileTypes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs.d.ts",
																			"line": 1940,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": false
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1750
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 1939,
																	"character": 39
																}
															]
														}
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Buffer",
											"qualifiedName": "global.Buffer",
											"package": "@types/node"
										}
									}
								]
							}
						},
						{
							"id": 1751,
							"name": "readdirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous readdir(3) - read a directory."
									}
								]
							},
							"parameters": [
								{
									"id": 1752,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1753,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If called with "
											},
											{
												"kind": "code",
												"text": "`withFileTypes: true`"
											},
											{
												"kind": "text",
												"text": " the result data will be an array of Dirent."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 2332,
												"name": "ObjectEncodingOptions",
												"qualifiedName": "ObjectEncodingOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1754,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1755,
															"name": "withFileTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 1953,
																	"character": 12
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1755
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 1952,
															"character": 41
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2405,
									"name": "Dirent",
									"qualifiedName": "Dirent",
									"package": "@types/node"
								}
							}
						}
					]
				},
				{
					"id": 1756,
					"name": "closeSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 1983,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1757,
							"name": "closeSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Closes the file descriptor. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nCalling "
									},
									{
										"kind": "code",
										"text": "`fs.closeSync()`"
									},
									{
										"kind": "text",
										"text": " on any file descriptor ("
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": ") that is currently in use\nthrough any other "
									},
									{
										"kind": "code",
										"text": "`fs`"
									},
									{
										"kind": "text",
										"text": " operation may lead to undefined behavior.\n\nSee the POSIX ["
									},
									{
										"kind": "code",
										"text": "`close(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/close.2.html) documentation for more detail."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.21"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1758,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1759,
					"name": "openSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2031,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1760,
							"name": "openSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an integer representing the file descriptor.\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "open",
										"target": 1043
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.21"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1761,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1762,
									"name": "flags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 2335,
										"name": "OpenMode",
										"qualifiedName": "OpenMode",
										"package": "@types/node"
									}
								},
								{
									"id": 1763,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1764,
					"name": "utimesSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2058,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1765,
							"name": "utimesSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "utimes",
										"target": 1353
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.4.2"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1766,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1767,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2324,
										"name": "TimeLike",
										"qualifiedName": "TimeLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1768,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2324,
										"name": "TimeLike",
										"qualifiedName": "TimeLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1769,
					"name": "futimesSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2078,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1770,
							"name": "futimesSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronous version of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "futimes",
										"target": 963
									},
									{
										"kind": "text",
										"text": ". Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.4.2"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1771,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1772,
									"name": "atime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2324,
										"name": "TimeLike",
										"qualifiedName": "TimeLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1773,
									"name": "mtime",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2324,
										"name": "TimeLike",
										"qualifiedName": "TimeLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1774,
					"name": "fsyncSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2100,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1775,
							"name": "fsyncSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.\nRefer to the POSIX ["
									},
									{
										"kind": "code",
										"text": "`fsync(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/fsync.2.html) documentation for more detail. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.96"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1776,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1777,
					"name": "writeSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2230,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2238,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1778,
							"name": "writeSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "For detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "write",
										"target": 1378
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.21"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of bytes written."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1779,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1780,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "ArrayBufferView",
										"qualifiedName": "NodeJS.ArrayBufferView",
										"package": "@types/node"
									}
								},
								{
									"id": 1781,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1782,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1783,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1784,
							"name": "writeSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously writes "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": " to the file referenced by the supplied file descriptor, returning the number of bytes written."
									}
								]
							},
							"parameters": [
								{
									"id": 1785,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A file descriptor."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1786,
									"name": "string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string to write."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1787,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1788,
									"name": "encoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The expected string encoding."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "BufferEncoding",
										"qualifiedName": "global.BufferEncoding",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3802,
					"name": "ReadPosition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2239,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							}
						]
					}
				},
				{
					"id": 3803,
					"name": "ReadSyncOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3804,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2244,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3805,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "`length of buffer`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2248,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3806,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "null"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2252,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 3802,
								"name": "ReadPosition",
								"qualifiedName": "ReadPosition",
								"package": "@types/node"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3804,
								3805,
								3806
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2240,
							"character": 21
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3807,
							"name": "ReadAsyncOptions"
						}
					]
				},
				{
					"id": 3807,
					"name": "ReadAsyncOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3809,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2244,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3804,
								"name": "ReadSyncOptions.offset"
							}
						},
						{
							"id": 3810,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "`length of buffer`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2248,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3805,
								"name": "ReadSyncOptions.length"
							}
						},
						{
							"id": 3811,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "null"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2252,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 3802,
								"name": "ReadPosition",
								"qualifiedName": "ReadPosition",
								"package": "@types/node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3806,
								"name": "ReadSyncOptions.position"
							}
						},
						{
							"id": 3808,
							"name": "buffer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2255,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 3812,
								"name": "TBuffer",
								"qualifiedName": "ReadAsyncOptions.TBuffer",
								"package": "@types/node"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3809,
								3810,
								3811,
								3808
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2254,
							"character": 21
						}
					],
					"typeParameters": [
						{
							"id": 3812,
							"name": "TBuffer",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"name": "NodeJS.ArrayBufferView",
								"qualifiedName": "NodeJS.ArrayBufferView",
								"package": "@types/node"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3803,
							"name": "ReadSyncOptions",
							"qualifiedName": "ReadSyncOptions",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 1789,
					"name": "readSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2334,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2339,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1790,
							"name": "readSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of "
									},
									{
										"kind": "code",
										"text": "`bytesRead`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "read",
										"target": 1084
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.21"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1791,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1792,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "ArrayBufferView",
										"qualifiedName": "NodeJS.ArrayBufferView",
										"package": "@types/node"
									}
								},
								{
									"id": 1793,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1794,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1795,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 3802,
										"name": "ReadPosition",
										"qualifiedName": "ReadPosition",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1796,
							"name": "readSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Similar to the above "
									},
									{
										"kind": "code",
										"text": "`fs.readSync`"
									},
									{
										"kind": "text",
										"text": " function, this version takes an optional "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " object.\nIf no "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " object is specified, it will default with the above values."
									}
								]
							},
							"parameters": [
								{
									"id": 1797,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1798,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "ArrayBufferView",
										"qualifiedName": "NodeJS.ArrayBufferView",
										"package": "@types/node"
									}
								},
								{
									"id": 1799,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3803,
										"name": "ReadSyncOptions",
										"qualifiedName": "ReadSyncOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1800,
					"name": "readFileSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2532,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2546,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2562,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1801,
							"name": "readFileSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the contents of the "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "readFile",
										"target": 1108
									},
									{
										"kind": "text",
										"text": ".\n\nIf the "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " option is specified then this function returns a\nstring. Otherwise it returns a buffer.\n\nSimilar to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "readFile",
										"target": 1108
									},
									{
										"kind": "text",
										"text": ", when the path is a directory, the behavior of"
									},
									{
										"kind": "code",
										"text": "`fs.readFileSync()`"
									},
									{
										"kind": "text",
										"text": " is platform-specific.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { readFileSync } from 'fs';\n\n// macOS, Linux, and Windows\nreadFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nreadFileSync('<directory>'); // => <data>\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.8"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1802,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "filename or file descriptor"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2323,
										"name": "PathOrFileDescriptor",
										"qualifiedName": "PathOrFileDescriptor",
										"package": "@types/node"
									}
								},
								{
									"id": 1803,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1804,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1805,
													"name": "encoding",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 2535,
															"character": 12
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 1806,
													"name": "flag",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 2536,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1805,
														1806
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 2534,
													"character": 18
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						},
						{
							"id": 1807,
							"name": "readFileSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously reads the entire contents of a file."
									}
								]
							},
							"parameters": [
								{
									"id": 1808,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol.\nIf a file descriptor is provided, the underlying file will _not_ be closed automatically."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2323,
										"name": "PathOrFileDescriptor",
										"qualifiedName": "PathOrFileDescriptor",
										"package": "@types/node"
									}
								},
								{
									"id": 1809,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Either the encoding for the result, or an object that contains the encoding and an optional flag.\nIf a flag is not provided, it defaults to "
											},
											{
												"kind": "code",
												"text": "`'r'`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1810,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1811,
															"name": "encoding",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 2550,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "BufferEncoding",
																"qualifiedName": "global.BufferEncoding",
																"package": "@types/node"
															}
														},
														{
															"id": 1812,
															"name": "flag",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 2551,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1811,
																1812
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 2549,
															"character": 14
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1813,
							"name": "readFileSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously reads the entire contents of a file."
									}
								]
							},
							"parameters": [
								{
									"id": 1814,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol.\nIf a file descriptor is provided, the underlying file will _not_ be closed automatically."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2323,
										"name": "PathOrFileDescriptor",
										"qualifiedName": "PathOrFileDescriptor",
										"package": "@types/node"
									}
								},
								{
									"id": 1815,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Either the encoding for the result, or an object that contains the encoding and an optional flag.\nIf a flag is not provided, it defaults to "
											},
											{
												"kind": "code",
												"text": "`'r'`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											},
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 2332,
														"name": "ObjectEncodingOptions",
														"qualifiedName": "ObjectEncodingOptions",
														"package": "@types/node"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1816,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 1817,
																	"name": "flag",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs.d.ts",
																			"line": 2566,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1817
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 2565,
																	"character": 39
																}
															]
														}
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								]
							}
						}
					]
				},
				{
					"id": 1818,
					"name": "writeFileSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2673,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1819,
							"name": "writeFileSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`mode`"
									},
									{
										"kind": "text",
										"text": " option only affects the newly created file. See "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "open",
										"target": 1043
									},
									{
										"kind": "text",
										"text": " for more details.\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "writeFile",
										"target": 1452
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.29"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1820,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "filename or file descriptor"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2323,
										"name": "PathOrFileDescriptor",
										"qualifiedName": "PathOrFileDescriptor",
										"package": "@types/node"
									}
								},
								{
									"id": 1821,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "ArrayBufferView",
												"qualifiedName": "NodeJS.ArrayBufferView",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1822,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "WriteFileOptions",
										"qualifiedName": "WriteFileOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1823,
					"name": "appendFileSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2797,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1824,
							"name": "appendFileSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously append data to a file, creating the file if it does not yet\nexist. "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " can be a string or a "
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`mode`"
									},
									{
										"kind": "text",
										"text": " option only affects the newly created file. See "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "open",
										"target": 1043
									},
									{
										"kind": "text",
										"text": " for more details.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { appendFileSync } from 'fs';\n\ntry {\n  appendFileSync('message.txt', 'data to append');\n  console.log('The \"data to append\" was appended to file!');\n} catch (err) {\n  // Handle the error\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " is a string, then it specifies the encoding:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { appendFileSync } from 'fs';\n\nappendFileSync('message.txt', 'data to append', 'utf8');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " may be specified as a numeric file descriptor that has been opened\nfor appending (using "
									},
									{
										"kind": "code",
										"text": "`fs.open()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`fs.openSync()`"
									},
									{
										"kind": "text",
										"text": "). The file descriptor will\nnot be closed automatically.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { openSync, closeSync, appendFileSync } from 'fs';\n\nlet fd;\n\ntry {\n  fd = openSync('message.txt', 'a');\n  appendFileSync(fd, 'data to append', 'utf8');\n} catch (err) {\n  // Handle the error\n} finally {\n  if (fd !== undefined)\n    closeSync(fd);\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.6.7"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1825,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "filename or file descriptor"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2323,
										"name": "PathOrFileDescriptor",
										"qualifiedName": "PathOrFileDescriptor",
										"package": "@types/node"
									}
								},
								{
									"id": 1826,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Uint8Array",
												"qualifiedName": "Uint8Array",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 1827,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "WriteFileOptions",
										"qualifiedName": "WriteFileOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3813,
					"name": "WatchFileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Watch for changes on "
							},
							{
								"kind": "code",
								"text": "`filename`"
							},
							{
								"kind": "text",
								"text": ". The callback "
							},
							{
								"kind": "code",
								"text": "`listener`"
							},
							{
								"kind": "text",
								"text": " will be called each\ntime the file is accessed.\n\nThe "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": " argument may be omitted. If provided, it should be an object. The"
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": " object may contain a boolean named "
							},
							{
								"kind": "code",
								"text": "`persistent`"
							},
							{
								"kind": "text",
								"text": " that indicates\nwhether the process should continue to run as long as files are being watched.\nThe "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": " object may specify an "
							},
							{
								"kind": "code",
								"text": "`interval`"
							},
							{
								"kind": "text",
								"text": " property indicating how often the\ntarget should be polled in milliseconds.\n\nThe "
							},
							{
								"kind": "code",
								"text": "`listener`"
							},
							{
								"kind": "text",
								"text": " gets two arguments the current stat object and the previous\nstat object:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { watchFile } from 'fs';\n\nwatchFile('message.text', (curr, prev) => {\n  console.log(`the current mtime is: ${curr.mtime}`);\n  console.log(`the previous mtime was: ${prev.mtime}`);\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThese stat objects are instances of "
							},
							{
								"kind": "code",
								"text": "`fs.Stat`"
							},
							{
								"kind": "text",
								"text": ". If the "
							},
							{
								"kind": "code",
								"text": "`bigint`"
							},
							{
								"kind": "text",
								"text": " option is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ",\nthe numeric values in these objects are specified as "
							},
							{
								"kind": "code",
								"text": "`BigInt`"
							},
							{
								"kind": "text",
								"text": "s.\n\nTo be notified when the file was modified, not just accessed, it is necessary\nto compare "
							},
							{
								"kind": "code",
								"text": "`curr.mtimeMs`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`prev.mtimeMs`"
							},
							{
								"kind": "text",
								"text": ".\n\nWhen an "
							},
							{
								"kind": "code",
								"text": "`fs.watchFile`"
							},
							{
								"kind": "text",
								"text": " operation results in an "
							},
							{
								"kind": "code",
								"text": "`ENOENT`"
							},
							{
								"kind": "text",
								"text": " error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch). If the file is created later on, the listener will be called\nagain, with the latest stat objects. This is a change in functionality since\nv0.10.\n\nUsing "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "watch",
								"target": 1864
							},
							{
								"kind": "text",
								"text": " is more efficient than "
							},
							{
								"kind": "code",
								"text": "`fs.watchFile`"
							},
							{
								"kind": "text",
								"text": " and"
							},
							{
								"kind": "code",
								"text": "`fs.unwatchFile`"
							},
							{
								"kind": "text",
								"text": ". "
							},
							{
								"kind": "code",
								"text": "`fs.watch`"
							},
							{
								"kind": "text",
								"text": " should be used instead of "
							},
							{
								"kind": "code",
								"text": "`fs.watchFile`"
							},
							{
								"kind": "text",
								"text": " and"
							},
							{
								"kind": "code",
								"text": "`fs.unwatchFile`"
							},
							{
								"kind": "text",
								"text": " when possible.\n\nWhen a file being watched by "
							},
							{
								"kind": "code",
								"text": "`fs.watchFile()`"
							},
							{
								"kind": "text",
								"text": " disappears and reappears,\nthen the contents of "
							},
							{
								"kind": "code",
								"text": "`previous`"
							},
							{
								"kind": "text",
								"text": " in the second callback event (the file's\nreappearance) will be the same as the contents of "
							},
							{
								"kind": "code",
								"text": "`previous`"
							},
							{
								"kind": "text",
								"text": " in the first\ncallback event (its disappearance).\n\nThis happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name"
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.1.31"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 3814,
							"name": "bigint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2845,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3815,
							"name": "persistent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2846,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3816,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2847,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3814,
								3815,
								3816
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2844,
							"character": 21
						}
					]
				},
				{
					"id": 1828,
					"name": "watchFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2895,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2904,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2917,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1829,
							"name": "watchFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Watch for changes on "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": ". The callback "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will be called each\ntime the file is accessed.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " argument may be omitted. If provided, it should be an object. The"
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " object may contain a boolean named "
									},
									{
										"kind": "code",
										"text": "`persistent`"
									},
									{
										"kind": "text",
										"text": " that indicates\nwhether the process should continue to run as long as files are being watched.\nThe "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " object may specify an "
									},
									{
										"kind": "code",
										"text": "`interval`"
									},
									{
										"kind": "text",
										"text": " property indicating how often the\ntarget should be polled in milliseconds.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " gets two arguments the current stat object and the previous\nstat object:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { watchFile } from 'fs';\n\nwatchFile('message.text', (curr, prev) => {\n  console.log(`the current mtime is: ${curr.mtime}`);\n  console.log(`the previous mtime was: ${prev.mtime}`);\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThese stat objects are instances of "
									},
									{
										"kind": "code",
										"text": "`fs.Stat`"
									},
									{
										"kind": "text",
										"text": ". If the "
									},
									{
										"kind": "code",
										"text": "`bigint`"
									},
									{
										"kind": "text",
										"text": " option is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ",\nthe numeric values in these objects are specified as "
									},
									{
										"kind": "code",
										"text": "`BigInt`"
									},
									{
										"kind": "text",
										"text": "s.\n\nTo be notified when the file was modified, not just accessed, it is necessary\nto compare "
									},
									{
										"kind": "code",
										"text": "`curr.mtimeMs`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`prev.mtimeMs`"
									},
									{
										"kind": "text",
										"text": ".\n\nWhen an "
									},
									{
										"kind": "code",
										"text": "`fs.watchFile`"
									},
									{
										"kind": "text",
										"text": " operation results in an "
									},
									{
										"kind": "code",
										"text": "`ENOENT`"
									},
									{
										"kind": "text",
										"text": " error, it\nwill invoke the listener once, with all the fields zeroed (or, for dates, the\nUnix Epoch). If the file is created later on, the listener will be called\nagain, with the latest stat objects. This is a change in functionality since\nv0.10.\n\nUsing "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "watch",
										"target": 1864
									},
									{
										"kind": "text",
										"text": " is more efficient than "
									},
									{
										"kind": "code",
										"text": "`fs.watchFile`"
									},
									{
										"kind": "text",
										"text": " and"
									},
									{
										"kind": "code",
										"text": "`fs.unwatchFile`"
									},
									{
										"kind": "text",
										"text": ". "
									},
									{
										"kind": "code",
										"text": "`fs.watch`"
									},
									{
										"kind": "text",
										"text": " should be used instead of "
									},
									{
										"kind": "code",
										"text": "`fs.watchFile`"
									},
									{
										"kind": "text",
										"text": " and"
									},
									{
										"kind": "code",
										"text": "`fs.unwatchFile`"
									},
									{
										"kind": "text",
										"text": " when possible.\n\nWhen a file being watched by "
									},
									{
										"kind": "code",
										"text": "`fs.watchFile()`"
									},
									{
										"kind": "text",
										"text": " disappears and reappears,\nthen the contents of "
									},
									{
										"kind": "code",
										"text": "`previous`"
									},
									{
										"kind": "text",
										"text": " in the second callback event (the file's\nreappearance) will be the same as the contents of "
									},
									{
										"kind": "code",
										"text": "`previous`"
									},
									{
										"kind": "text",
										"text": " in the first\ncallback event (its disappearance).\n\nThis happens when:\n\n* the file is deleted, followed by a restore\n* the file is renamed and then renamed a second time back to its original name"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.31"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1830,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1831,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3813,
												"name": "WatchFileOptions",
												"qualifiedName": "WatchFileOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1832,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1833,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 2899,
																	"character": 18
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1833
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 2898,
															"character": 34
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 1834,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1835,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 2902,
													"character": 18
												}
											],
											"signatures": [
												{
													"id": 1836,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1837,
															"name": "curr",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															}
														},
														{
															"id": 1838,
															"name": "prev",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2445,
								"name": "StatWatcher",
								"qualifiedName": "StatWatcher",
								"package": "@types/node"
							}
						},
						{
							"id": 1839,
							"name": "watchFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1840,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1841,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 3813,
												"name": "WatchFileOptions",
												"qualifiedName": "WatchFileOptions",
												"package": "@types/node"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1842,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1843,
															"name": "bigint",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 2908,
																	"character": 18
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1843
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/node/fs.d.ts",
															"line": 2907,
															"character": 34
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 1844,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1845,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 2911,
													"character": 18
												}
											],
											"signatures": [
												{
													"id": 1846,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1847,
															"name": "curr",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 3883,
																"name": "BigIntStats",
																"qualifiedName": "BigIntStats",
																"package": "@types/node"
															}
														},
														{
															"id": 1848,
															"name": "prev",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 3883,
																"name": "BigIntStats",
																"qualifiedName": "BigIntStats",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2445,
								"name": "StatWatcher",
								"qualifiedName": "StatWatcher",
								"package": "@types/node"
							}
						},
						{
							"id": 1849,
							"name": "watchFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Watch for changes on "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": ". The callback "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will be called each time the file is accessed."
									}
								]
							},
							"parameters": [
								{
									"id": 1850,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file or directory. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1851,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1852,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 2917,
													"character": 60
												}
											],
											"signatures": [
												{
													"id": 1853,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1854,
															"name": "curr",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															}
														},
														{
															"id": 1855,
															"name": "prev",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2445,
								"name": "StatWatcher",
								"qualifiedName": "StatWatcher",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 1856,
					"name": "unwatchFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2930,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1857,
							"name": "unwatchFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stop watching for changes on "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": ". If "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is specified, only that\nparticular listener is removed. Otherwise, _all_ listeners are removed,\neffectively stopping watching of "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": ".\n\nCalling "
									},
									{
										"kind": "code",
										"text": "`fs.unwatchFile()`"
									},
									{
										"kind": "text",
										"text": " with a filename that is not being watched is a\nno-op, not an error.\n\nUsing "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "watch",
										"target": 1864
									},
									{
										"kind": "text",
										"text": " is more efficient than "
									},
									{
										"kind": "code",
										"text": "`fs.watchFile()`"
									},
									{
										"kind": "text",
										"text": " and"
									},
									{
										"kind": "code",
										"text": "`fs.unwatchFile()`"
									},
									{
										"kind": "text",
										"text": ". "
									},
									{
										"kind": "code",
										"text": "`fs.watch()`"
									},
									{
										"kind": "text",
										"text": " should be used instead of "
									},
									{
										"kind": "code",
										"text": "`fs.watchFile()`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`fs.unwatchFile()`"
									},
									{
										"kind": "text",
										"text": " when possible."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.31"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1858,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1859,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional, a listener previously attached using "
											},
											{
												"kind": "code",
												"text": "`fs.watchFile()`"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1860,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 2930,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 1861,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1862,
															"name": "curr",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															}
														},
														{
															"id": 1863,
															"name": "prev",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3817,
					"name": "WatchOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3821,
							"name": "signal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When provided the corresponding "
									},
									{
										"kind": "code",
										"text": "`AbortController`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel an asynchronous action."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 307,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "AbortSignal",
								"qualifiedName": "AbortSignal",
								"package": "@types/node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Abortable.signal"
							}
						},
						{
							"id": 3818,
							"name": "encoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2932,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "BufferEncoding",
										"qualifiedName": "global.BufferEncoding",
										"package": "@types/node"
									},
									{
										"type": "literal",
										"value": "buffer"
									}
								]
							}
						},
						{
							"id": 3819,
							"name": "persistent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2933,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3820,
							"name": "recursive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2934,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3821,
								3818,
								3819,
								3820
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2931,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Abortable",
							"qualifiedName": "EventEmitter.Abortable",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 3822,
					"name": "WatchEventType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2936,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "rename"
							},
							{
								"type": "literal",
								"value": "change"
							}
						]
					}
				},
				{
					"id": 3823,
					"name": "WatchListener",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2937,
							"character": 16
						}
					],
					"typeParameters": [
						{
							"id": 3828,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExternal": true
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3824,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 2937,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 3825,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3826,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 3822,
												"name": "WatchEventType",
												"qualifiedName": "WatchEventType",
												"package": "@types/node"
											}
										},
										{
											"id": 3827,
											"name": "filename",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 3828,
												"name": "T",
												"qualifiedName": "T",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1864,
					"name": "watch",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2958,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2975,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2984,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 2989,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1865,
							"name": "watch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Watch for changes on "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": ", where "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": " is either a file or a\ndirectory.\n\nThe second argument is optional. If "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " is provided as a string, it\nspecifies the "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": ". Otherwise "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " should be passed as an object.\n\nThe listener callback gets two arguments "
									},
									{
										"kind": "code",
										"text": "`(eventType, filename)`"
									},
									{
										"kind": "text",
										"text": ". "
									},
									{
										"kind": "code",
										"text": "`eventType`"
									},
									{
										"kind": "text",
										"text": "is either "
									},
									{
										"kind": "code",
										"text": "`'rename'`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`'change'`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": " is the name of the file\nwhich triggered the event.\n\nOn most platforms, "
									},
									{
										"kind": "code",
										"text": "`'rename'`"
									},
									{
										"kind": "text",
										"text": " is emitted whenever a filename appears or\ndisappears in the directory.\n\nThe listener callback is attached to the "
									},
									{
										"kind": "code",
										"text": "`'change'`"
									},
									{
										"kind": "text",
										"text": " event fired by "
									},
									{
										"kind": "code",
										"text": "`fs.FSWatcher`"
									},
									{
										"kind": "text",
										"text": ", but it is not the same thing as the "
									},
									{
										"kind": "code",
										"text": "`'change'`"
									},
									{
										"kind": "text",
										"text": " value of"
									},
									{
										"kind": "code",
										"text": "`eventType`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf a "
									},
									{
										"kind": "code",
										"text": "`signal`"
									},
									{
										"kind": "text",
										"text": " is passed, aborting the corresponding AbortController will close\nthe returned "
									},
									{
										"kind": "code",
										"text": "`fs.FSWatcher`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.5.10"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1866,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1867,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "buffer"
											},
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 3817,
														"name": "WatchOptions",
														"qualifiedName": "WatchOptions",
														"package": "@types/node"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1868,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 1869,
																	"name": "encoding",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs.d.ts",
																			"line": 2962,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": "buffer"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1869
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs.d.ts",
																	"line": 2961,
																	"character": 30
																}
															]
														}
													}
												]
											}
										]
									}
								},
								{
									"id": 1870,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3823,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "WatchListener",
										"qualifiedName": "WatchListener",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2522,
								"name": "FSWatcher",
								"qualifiedName": "FSWatcher",
								"package": "@types/node"
							}
						},
						{
							"id": 1871,
							"name": "watch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Watch for changes on "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": ", where "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": " is either a file or a directory, returning an "
									},
									{
										"kind": "code",
										"text": "`FSWatcher`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"parameters": [
								{
									"id": 1872,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file or directory. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1873,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Either the encoding for the filename provided to the listener, or an object optionally specifying encoding, persistent, and recursive options.\nIf "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " is not supplied, the default of "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used.\nIf "
											},
											{
												"kind": "code",
												"text": "`persistent`"
											},
											{
												"kind": "text",
												"text": " is not supplied, the default of "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " is used.\nIf "
											},
											{
												"kind": "code",
												"text": "`recursive`"
											},
											{
												"kind": "text",
												"text": " is not supplied, the default of "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											},
											{
												"type": "reference",
												"id": 3817,
												"name": "WatchOptions",
												"qualifiedName": "WatchOptions",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1874,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3823,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "WatchListener",
										"qualifiedName": "WatchListener",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2522,
								"name": "FSWatcher",
								"qualifiedName": "FSWatcher",
								"package": "@types/node"
							}
						},
						{
							"id": 1875,
							"name": "watch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Watch for changes on "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": ", where "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": " is either a file or a directory, returning an "
									},
									{
										"kind": "code",
										"text": "`FSWatcher`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"parameters": [
								{
									"id": 1876,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file or directory. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1877,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Either the encoding for the filename provided to the listener, or an object optionally specifying encoding, persistent, and recursive options.\nIf "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " is not supplied, the default of "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " is used.\nIf "
											},
											{
												"kind": "code",
												"text": "`persistent`"
											},
											{
												"kind": "text",
												"text": " is not supplied, the default of "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " is used.\nIf "
											},
											{
												"kind": "code",
												"text": "`recursive`"
											},
											{
												"kind": "text",
												"text": " is not supplied, the default of "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " is used."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3817,
												"name": "WatchOptions",
												"qualifiedName": "WatchOptions",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1878,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3823,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												]
											}
										],
										"name": "WatchListener",
										"qualifiedName": "WatchListener",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2522,
								"name": "FSWatcher",
								"qualifiedName": "FSWatcher",
								"package": "@types/node"
							}
						},
						{
							"id": 1879,
							"name": "watch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Watch for changes on "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": ", where "
									},
									{
										"kind": "code",
										"text": "`filename`"
									},
									{
										"kind": "text",
										"text": " is either a file or a directory, returning an "
									},
									{
										"kind": "code",
										"text": "`FSWatcher`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"parameters": [
								{
									"id": 1880,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A path to a file or directory. If a URL is provided, it must use the "
											},
											{
												"kind": "code",
												"text": "`file:`"
											},
											{
												"kind": "text",
												"text": " protocol."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1881,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3823,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "WatchListener",
										"qualifiedName": "WatchListener",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2522,
								"name": "FSWatcher",
								"qualifiedName": "FSWatcher",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 1882,
					"name": "exists",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3119,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3121,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1883,
							"name": "exists",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Test whether or not the given path exists by checking with the file system.\nThen call the "
									},
									{
										"kind": "code",
										"text": "`callback`"
									},
									{
										"kind": "text",
										"text": " argument with either true or false:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { exists } from 'fs';\n\nexists('/etc/passwd', (e) => {\n  console.log(e ? 'it exists' : 'no passwd!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\n**The parameters for this callback are not consistent with other Node.js**\n**callbacks.** Normally, the first parameter to a Node.js callback is an "
									},
									{
										"kind": "code",
										"text": "`err`"
									},
									{
										"kind": "text",
										"text": "parameter, optionally followed by other parameters. The "
									},
									{
										"kind": "code",
										"text": "`fs.exists()`"
									},
									{
										"kind": "text",
										"text": " callback\nhas only one boolean parameter. This is one reason "
									},
									{
										"kind": "code",
										"text": "`fs.access()`"
									},
									{
										"kind": "text",
										"text": " is recommended\ninstead of "
									},
									{
										"kind": "code",
										"text": "`fs.exists()`"
									},
									{
										"kind": "text",
										"text": ".\n\nUsing "
									},
									{
										"kind": "code",
										"text": "`fs.exists()`"
									},
									{
										"kind": "text",
										"text": " to check for the existence of a file before calling"
									},
									{
										"kind": "code",
										"text": "`fs.open()`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`fs.readFile()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`fs.writeFile()`"
									},
									{
										"kind": "text",
										"text": " is not recommended. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file does not exist.\n\n**write (NOT RECOMMENDED)**\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { exists, open, close } from 'fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    console.error('myfile already exists');\n  } else {\n    open('myfile', 'wx', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        writeMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  }\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\n**write (RECOMMENDED)**\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { open, close } from 'fs';\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\n**read (NOT RECOMMENDED)**\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { open, close, exists } from 'fs';\n\nexists('myfile', (e) => {\n  if (e) {\n    open('myfile', 'r', (err, fd) => {\n      if (err) throw err;\n\n      try {\n        readMyData(fd);\n      } finally {\n        close(fd, (err) => {\n          if (err) throw err;\n        });\n      }\n    });\n  } else {\n    console.error('myfile does not exist');\n  }\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\n**read (RECOMMENDED)**\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { open, close } from 'fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe \"not recommended\" examples above check for existence and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.\n\nIn general, check for the existence of a file only if the file won’t be\nused directly, for example when its existence is a signal from another\nprocess."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.0.2"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v1.0.0 - Use "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "stat",
												"target": 1297
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "access",
												"target": 817
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1884,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1885,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1886,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 3119,
													"character": 53
												}
											],
											"signatures": [
												{
													"id": 1887,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1888,
															"name": "exists",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1889,
					"name": "exists",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"children": [
						{
							"id": 1890,
							"name": "__promisify__",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3126,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 1891,
									"name": "__promisify__",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1892,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file or directory. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol.\nURL support is _experimental_."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								1890
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3119,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3121,
							"character": 21
						}
					]
				},
				{
					"id": 1893,
					"name": "existsSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3145,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1894,
							"name": "existsSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the path exists, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\nFor detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "exists",
										"target": 1882
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "`fs.exists()`"
									},
									{
										"kind": "text",
										"text": " is deprecated, but "
									},
									{
										"kind": "code",
										"text": "`fs.existsSync()`"
									},
									{
										"kind": "text",
										"text": " is not. The "
									},
									{
										"kind": "code",
										"text": "`callback`"
									},
									{
										"kind": "text",
										"text": "parameter to "
									},
									{
										"kind": "code",
										"text": "`fs.exists()`"
									},
									{
										"kind": "text",
										"text": " accepts parameters that are inconsistent with other\nNode.js callbacks. "
									},
									{
										"kind": "code",
										"text": "`fs.existsSync()`"
									},
									{
										"kind": "text",
										"text": " does not use a callback.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { existsSync } from 'fs';\n\nif (existsSync('/etc/passwd'))\n  console.log('The path exists.');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.21"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1895,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3829,
					"name": "constants",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3830,
							"name": "F_OK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.access(). File is visible to the calling process."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3149,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3831,
							"name": "R_OK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.access(). File can be read by the calling process."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3151,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3832,
							"name": "W_OK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.access(). File can be written by the calling process."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3153,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3833,
							"name": "X_OK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.access(). File can be executed by the calling process."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3155,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3834,
							"name": "COPYFILE_EXCL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.copyFile. Flag indicating the destination file should not be overwritten if it already exists."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3158,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3835,
							"name": "COPYFILE_FICLONE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.copyFile. copy operation will attempt to create a copy-on-write reflink.\nIf the underlying platform does not support copy-on-write, then a fallback copy mechanism is used."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3163,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3836,
							"name": "COPYFILE_FICLONE_FORCE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.copyFile. Copy operation will attempt to create a copy-on-write reflink.\nIf the underlying platform does not support copy-on-write, then the operation will fail with an error."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3168,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3837,
							"name": "O_RDONLY",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating to open a file for read-only access."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3171,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3838,
							"name": "O_WRONLY",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating to open a file for write-only access."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3173,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3839,
							"name": "O_RDWR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating to open a file for read-write access."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3175,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3840,
							"name": "O_CREAT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating to create the file if it does not already exist."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3177,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3841,
							"name": "O_EXCL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating that opening a file should fail if the O_CREAT flag is set and the file already exists."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3179,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3842,
							"name": "O_NOCTTY",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating that if path identifies a terminal device,\nopening the path shall not cause that terminal to become the controlling terminal for the process\n(if the process does not already have one)."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3185,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3843,
							"name": "O_TRUNC",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating that if the file exists and is a regular file, and the file is opened successfully for write access, its length shall be truncated to zero."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3187,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3844,
							"name": "O_APPEND",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating that data will be appended to the end of the file."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3189,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3845,
							"name": "O_DIRECTORY",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating that the open should fail if the path is not a directory."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3191,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3846,
							"name": "O_NOATIME",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "constant for fs.open().\nFlag indicating reading accesses to the file system will no longer result in\nan update to the atime information associated with the file.\nThis flag is available on Linux operating systems only."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3198,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3847,
							"name": "O_NOFOLLOW",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating that the open should fail if the path is a symbolic link."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3200,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3848,
							"name": "O_SYNC",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating that the file is opened for synchronous I/O."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3202,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3849,
							"name": "O_DSYNC",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating that the file is opened for synchronous I/O with write operations waiting for data integrity."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3204,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3850,
							"name": "O_SYMLINK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating to open the symbolic link itself rather than the resource it is pointing to."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3206,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3851,
							"name": "O_DIRECT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). When set, an attempt will be made to minimize caching effects of file I/O."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3208,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3852,
							"name": "O_NONBLOCK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.open(). Flag indicating to open the file in nonblocking mode when possible."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3210,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3853,
							"name": "S_IFMT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining a file's type. Bit mask used to extract the file type code."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3213,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3854,
							"name": "S_IFREG",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining a file's type. File type constant for a regular file."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3215,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3855,
							"name": "S_IFDIR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining a file's type. File type constant for a directory."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3217,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3856,
							"name": "S_IFCHR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining a file's type. File type constant for a character-oriented device file."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3219,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3857,
							"name": "S_IFBLK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining a file's type. File type constant for a block-oriented device file."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3221,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3858,
							"name": "S_IFIFO",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining a file's type. File type constant for a FIFO/pipe."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3223,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3859,
							"name": "S_IFLNK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining a file's type. File type constant for a symbolic link."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3225,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3860,
							"name": "S_IFSOCK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining a file's type. File type constant for a socket."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3227,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3861,
							"name": "S_IRWXU",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by owner."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3230,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3862,
							"name": "S_IRUSR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by owner."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3232,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3863,
							"name": "S_IWUSR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by owner."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3234,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3864,
							"name": "S_IXUSR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by owner."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3236,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3865,
							"name": "S_IRWXG",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by group."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3238,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3866,
							"name": "S_IRGRP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by group."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3240,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3867,
							"name": "S_IWGRP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by group."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3242,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3868,
							"name": "S_IXGRP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by group."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3244,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3869,
							"name": "S_IRWXO",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by others."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3246,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3870,
							"name": "S_IROTH",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by others."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3248,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3871,
							"name": "S_IWOTH",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by others."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3250,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3872,
							"name": "S_IXOTH",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by others."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3252,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3873,
							"name": "UV_FS_O_FILEMAP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true,
								"isConst": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When set, a memory file mapping is used to access the file. This flag\nis available on Windows operating systems only. On other operating systems,\nthis flag is ignored."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3258,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"children": [
								3830,
								3831,
								3832,
								3833,
								3834,
								3835,
								3836,
								3837,
								3838,
								3839,
								3840,
								3841,
								3842,
								3843,
								3844,
								3845,
								3846,
								3847,
								3848,
								3849,
								3850,
								3851,
								3852,
								3853,
								3854,
								3855,
								3856,
								3857,
								3858,
								3859,
								3860,
								3861,
								3862,
								3863,
								3864,
								3865,
								3866,
								3867,
								3868,
								3869,
								3870,
								3871,
								3872,
								3873
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3146,
							"character": 21
						}
					]
				},
				{
					"id": 1896,
					"name": "accessSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3457,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1897,
							"name": "accessSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously tests a user's permissions for the file or directory specified\nby "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": ". The "
									},
									{
										"kind": "code",
										"text": "`mode`"
									},
									{
										"kind": "text",
										"text": " argument is an optional integer that specifies the\naccessibility checks to be performed. "
									},
									{
										"kind": "code",
										"text": "`mode`"
									},
									{
										"kind": "text",
										"text": " should be either the value"
									},
									{
										"kind": "code",
										"text": "`fs.constants.F_OK`"
									},
									{
										"kind": "text",
										"text": " or a mask consisting of the bitwise OR of any of"
									},
									{
										"kind": "code",
										"text": "`fs.constants.R_OK`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`fs.constants.W_OK`"
									},
									{
										"kind": "text",
										"text": ", and\n"
									},
									{
										"kind": "code",
										"text": "`fs.constants.X_OK`"
									},
									{
										"kind": "text",
										"text": " (e.g."
									},
									{
										"kind": "code",
										"text": "`fs.constants.W_OK | fs.constants.R_OK`"
									},
									{
										"kind": "text",
										"text": "). Check "
									},
									{
										"kind": "code",
										"text": "`File access constants`"
									},
									{
										"kind": "text",
										"text": " for\npossible values of "
									},
									{
										"kind": "code",
										"text": "`mode`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf any of the accessibility checks fail, an "
									},
									{
										"kind": "code",
										"text": "`Error`"
									},
									{
										"kind": "text",
										"text": " will be thrown. Otherwise,\nthe method will return "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { accessSync, constants } from 'fs';\n\ntry {\n  accessSync('etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can read/write');\n} catch (err) {\n  console.error('no access!');\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.11.15"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1898,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1899,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1900,
					"name": "createReadStream",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3538,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1901,
							"name": "createReadStream",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unlike the 16 kb default "
									},
									{
										"kind": "code",
										"text": "`highWaterMark`"
									},
									{
										"kind": "text",
										"text": " for a "
									},
									{
										"kind": "code",
										"text": "`stream.Readable`"
									},
									{
										"kind": "text",
										"text": ", the stream\nreturned by this method has a default "
									},
									{
										"kind": "code",
										"text": "`highWaterMark`"
									},
									{
										"kind": "text",
										"text": " of 64 kb.\n\n"
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " can include "
									},
									{
										"kind": "code",
										"text": "`start`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`end`"
									},
									{
										"kind": "text",
										"text": " values to read a range of bytes from\nthe file instead of the entire file. Both "
									},
									{
										"kind": "code",
										"text": "`start`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`end`"
									},
									{
										"kind": "text",
										"text": " are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, ["
									},
									{
										"kind": "code",
										"text": "`Number.MAX_SAFE_INTEGER`"
									},
									{
										"kind": "text",
										"text": "](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\\] range. If "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " is specified and "
									},
									{
										"kind": "code",
										"text": "`start`"
									},
									{
										"kind": "text",
										"text": " is\nomitted or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`fs.createReadStream()`"
									},
									{
										"kind": "text",
										"text": " reads sequentially from the\ncurrent file position. The "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " can be any one of those accepted by "
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " is specified, "
									},
									{
										"kind": "code",
										"text": "`ReadStream`"
									},
									{
										"kind": "text",
										"text": " will ignore the "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " argument and will use\nthe specified file descriptor. This means that no "
									},
									{
										"kind": "code",
										"text": "`'open'`"
									},
									{
										"kind": "text",
										"text": " event will be\nemitted. "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " should be blocking; non-blocking "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": "s should be passed to "
									},
									{
										"kind": "code",
										"text": "`net.Socket`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " points to a character device that only supports blocking reads\n(such as keyboard or sound card), read operations do not finish until data is\navailable. This can prevent the process from exiting and the stream from\nclosing naturally.\n\nBy default, the stream will emit a "
									},
									{
										"kind": "code",
										"text": "`'close'`"
									},
									{
										"kind": "text",
										"text": " event after it has been\ndestroyed.  Set the "
									},
									{
										"kind": "code",
										"text": "`emitClose`"
									},
									{
										"kind": "text",
										"text": " option to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " to change this behavior.\n\nBy providing the "
									},
									{
										"kind": "code",
										"text": "`fs`"
									},
									{
										"kind": "text",
										"text": " option, it is possible to override the corresponding "
									},
									{
										"kind": "code",
										"text": "`fs`"
									},
									{
										"kind": "text",
										"text": "implementations for "
									},
									{
										"kind": "code",
										"text": "`open`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`read`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`close`"
									},
									{
										"kind": "text",
										"text": ". When providing the "
									},
									{
										"kind": "code",
										"text": "`fs`"
									},
									{
										"kind": "text",
										"text": " option,\nan override for "
									},
									{
										"kind": "code",
										"text": "`read`"
									},
									{
										"kind": "text",
										"text": " is required. If no "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " is provided, an override for"
									},
									{
										"kind": "code",
										"text": "`open`"
									},
									{
										"kind": "text",
										"text": " is also required. If "
									},
									{
										"kind": "code",
										"text": "`autoClose`"
									},
									{
										"kind": "text",
										"text": " is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", an override for "
									},
									{
										"kind": "code",
										"text": "`close`"
									},
									{
										"kind": "text",
										"text": " is\nalso required.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { createReadStream } from 'fs';\n\n// Create a stream from some character device.\nconst stream = createReadStream('/dev/input/event0');\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf "
									},
									{
										"kind": "code",
										"text": "`autoClose`"
									},
									{
										"kind": "text",
										"text": " is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If "
									},
									{
										"kind": "code",
										"text": "`autoClose`"
									},
									{
										"kind": "text",
										"text": " is set to true (default\nbehavior), on "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`'end'`"
									},
									{
										"kind": "text",
										"text": " the file descriptor will be closed\nautomatically.\n\n"
									},
									{
										"kind": "code",
										"text": "`mode`"
									},
									{
										"kind": "text",
										"text": " sets the file mode (permission and sticky bits), but only if the\nfile was created.\n\nAn example to read the last 10 bytes of a file which is 100 bytes long:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { createReadStream } from 'fs';\n\ncreateReadStream('sample.txt', { start: 90, end: 99 });\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " is a string, then it specifies the encoding."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.31"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1902,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1903,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											},
											{
												"type": "reference",
												"name": "ReadStreamOptions",
												"qualifiedName": "ReadStreamOptions",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2687,
								"name": "ReadStream",
								"qualifiedName": "ReadStream",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 1904,
					"name": "createWriteStream",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3566,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1905,
							"name": "createWriteStream",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " may also include a "
									},
									{
										"kind": "code",
										"text": "`start`"
									},
									{
										"kind": "text",
										"text": " option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, ["
									},
									{
										"kind": "code",
										"text": "`Number.MAX_SAFE_INTEGER`"
									},
									{
										"kind": "text",
										"text": "](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\\] range. Modifying a file rather than\nreplacing it may require the "
									},
									{
										"kind": "code",
										"text": "`flags`"
									},
									{
										"kind": "text",
										"text": " option to be set to "
									},
									{
										"kind": "code",
										"text": "`r+`"
									},
									{
										"kind": "text",
										"text": " rather than the\ndefault "
									},
									{
										"kind": "code",
										"text": "`w`"
									},
									{
										"kind": "text",
										"text": ". The "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " can be any one of those accepted by "
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf "
									},
									{
										"kind": "code",
										"text": "`autoClose`"
									},
									{
										"kind": "text",
										"text": " is set to true (default behavior) on "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`'finish'`"
									},
									{
										"kind": "text",
										"text": "the file descriptor will be closed automatically. If "
									},
									{
										"kind": "code",
										"text": "`autoClose`"
									},
									{
										"kind": "text",
										"text": " is false,\nthen the file descriptor won't be closed, even if there's an error.\nIt is the application's responsibility to close it and make sure there's no\nfile descriptor leak.\n\nBy default, the stream will emit a "
									},
									{
										"kind": "code",
										"text": "`'close'`"
									},
									{
										"kind": "text",
										"text": " event after it has been\ndestroyed.  Set the "
									},
									{
										"kind": "code",
										"text": "`emitClose`"
									},
									{
										"kind": "text",
										"text": " option to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " to change this behavior.\n\nBy providing the "
									},
									{
										"kind": "code",
										"text": "`fs`"
									},
									{
										"kind": "text",
										"text": " option it is possible to override the corresponding "
									},
									{
										"kind": "code",
										"text": "`fs`"
									},
									{
										"kind": "text",
										"text": "implementations for "
									},
									{
										"kind": "code",
										"text": "`open`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`write`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`writev`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`close`"
									},
									{
										"kind": "text",
										"text": ". Overriding "
									},
									{
										"kind": "code",
										"text": "`write()`"
									},
									{
										"kind": "text",
										"text": "without "
									},
									{
										"kind": "code",
										"text": "`writev()`"
									},
									{
										"kind": "text",
										"text": " can reduce\nperformance as some optimizations ("
									},
									{
										"kind": "code",
										"text": "`_writev()`"
									},
									{
										"kind": "text",
										"text": ")\nwill be disabled. When providing the "
									},
									{
										"kind": "code",
										"text": "`fs`"
									},
									{
										"kind": "text",
										"text": " option, overrides for at least one of"
									},
									{
										"kind": "code",
										"text": "`write`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`writev`"
									},
									{
										"kind": "text",
										"text": " are required. If no "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " option is supplied, an override\nfor "
									},
									{
										"kind": "code",
										"text": "`open`"
									},
									{
										"kind": "text",
										"text": " is also required. If "
									},
									{
										"kind": "code",
										"text": "`autoClose`"
									},
									{
										"kind": "text",
										"text": " is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", an override for "
									},
									{
										"kind": "code",
										"text": "`close`"
									},
									{
										"kind": "text",
										"text": "is also required.\n\nLike "
									},
									{
										"kind": "code",
										"text": "`fs.ReadStream`"
									},
									{
										"kind": "text",
										"text": ", if "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " is specified, "
									},
									{
										"kind": "code",
										"text": "`fs.WriteStream`"
									},
									{
										"kind": "text",
										"text": " will ignore the"
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " argument and will use the specified file descriptor. This means that no"
									},
									{
										"kind": "code",
										"text": "`'open'`"
									},
									{
										"kind": "text",
										"text": " event will be\nemitted. "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " should be blocking; non-blocking "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": "s\nshould be passed to "
									},
									{
										"kind": "code",
										"text": "`net.Socket`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " is a string, then it specifies the encoding."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.31"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1906,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1907,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BufferEncoding",
												"qualifiedName": "global.BufferEncoding",
												"package": "@types/node"
											},
											{
												"type": "reference",
												"name": "StreamOptions",
												"qualifiedName": "StreamOptions",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3175,
								"name": "WriteStream",
								"qualifiedName": "WriteStream",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 1908,
					"name": "fdatasyncSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3587,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1909,
							"name": "fdatasyncSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX ["
									},
									{
										"kind": "code",
										"text": "`fdatasync(2)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man2/fdatasync.2.html) documentation for details. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.96"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1910,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1911,
					"name": "copyFileSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3666,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1912,
							"name": "copyFileSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously copies "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`dest`"
									},
									{
										"kind": "text",
										"text": ". By default, "
									},
									{
										"kind": "code",
										"text": "`dest`"
									},
									{
										"kind": "text",
										"text": " is overwritten if it\nalready exists. Returns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ". Node.js makes no guarantees about the\natomicity of the copy operation. If an error occurs after the destination file\nhas been opened for writing, Node.js will attempt to remove the destination.\n\n"
									},
									{
										"kind": "code",
										"text": "`mode`"
									},
									{
										"kind": "text",
										"text": " is an optional integer that specifies the behavior\nof the copy operation. It is possible to create a mask consisting of the bitwise\nOR of two or more values (e.g."
									},
									{
										"kind": "code",
										"text": "`fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`"
									},
									{
										"kind": "text",
										"text": ").\n\n* "
									},
									{
										"kind": "code",
										"text": "`fs.constants.COPYFILE_EXCL`"
									},
									{
										"kind": "text",
										"text": ": The copy operation will fail if "
									},
									{
										"kind": "code",
										"text": "`dest`"
									},
									{
										"kind": "text",
										"text": " already\nexists.\n* "
									},
									{
										"kind": "code",
										"text": "`fs.constants.COPYFILE_FICLONE`"
									},
									{
										"kind": "text",
										"text": ": The copy operation will attempt to create a\ncopy-on-write reflink. If the platform does not support copy-on-write, then a\nfallback copy mechanism is used.\n* "
									},
									{
										"kind": "code",
										"text": "`fs.constants.COPYFILE_FICLONE_FORCE`"
									},
									{
										"kind": "text",
										"text": ": The copy operation will attempt to\ncreate a copy-on-write reflink. If the platform does not support\ncopy-on-write, then the operation will fail.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { copyFileSync, constants } from 'fs';\n\n// destination.txt will be created or overwritten by default.\ncopyFileSync('source.txt', 'destination.txt');\nconsole.log('source.txt was copied to destination.txt');\n\n// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ncopyFileSync('source.txt', 'destination.txt', constants.COPYFILE_EXCL);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v8.5.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1913,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "source filename to copy"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1914,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "destination filename of the copy operation"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1915,
									"name": "mode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "modifiers for copy operation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3874,
					"name": "WriteVResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3875,
							"name": "bytesWritten",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3694,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3876,
							"name": "buffers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3695,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ArrayBufferView",
									"qualifiedName": "NodeJS.ArrayBufferView",
									"package": "@types/node"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3875,
								3876
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3693,
							"character": 21
						}
					]
				},
				{
					"id": 1916,
					"name": "writevSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3706,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1917,
							"name": "writevSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "For detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "writev",
										"target": 1472
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v12.9.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of bytes written."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1918,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1919,
									"name": "buffers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"name": "ArrayBufferView",
												"qualifiedName": "NodeJS.ArrayBufferView",
												"package": "@types/node"
											}
										}
									}
								},
								{
									"id": 1920,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1921,
					"name": "readv",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3721,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3722,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3732,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1922,
							"name": "readv",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Read from a file specified by "
									},
									{
										"kind": "code",
										"text": "`fd`"
									},
									{
										"kind": "text",
										"text": " and write to an array of "
									},
									{
										"kind": "code",
										"text": "`ArrayBufferView`"
									},
									{
										"kind": "text",
										"text": "s\nusing "
									},
									{
										"kind": "code",
										"text": "`readv()`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "`position`"
									},
									{
										"kind": "text",
										"text": " is the offset from the beginning of the file from where data\nshould be read. If "
									},
									{
										"kind": "code",
										"text": "`typeof position !== 'number'`"
									},
									{
										"kind": "text",
										"text": ", the data will be read\nfrom the current position.\n\nThe callback will be given three arguments: "
									},
									{
										"kind": "code",
										"text": "`err`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`bytesRead`"
									},
									{
										"kind": "text",
										"text": ", and"
									},
									{
										"kind": "code",
										"text": "`buffers`"
									},
									{
										"kind": "text",
										"text": ". "
									},
									{
										"kind": "code",
										"text": "`bytesRead`"
									},
									{
										"kind": "text",
										"text": " is how many bytes were read from the file.\n\nIf this method is invoked as its "
									},
									{
										"kind": "code",
										"text": "`util.promisify()`"
									},
									{
										"kind": "text",
										"text": " ed version, it returns\na promise for an "
									},
									{
										"kind": "code",
										"text": "`Object`"
									},
									{
										"kind": "text",
										"text": " with "
									},
									{
										"kind": "code",
										"text": "`bytesRead`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`buffers`"
									},
									{
										"kind": "text",
										"text": " properties."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.13.0, v12.17.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1923,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1924,
									"name": "buffers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"name": "ArrayBufferView",
												"qualifiedName": "NodeJS.ArrayBufferView",
												"package": "@types/node"
											}
										}
									}
								},
								{
									"id": 1925,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1926,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 3721,
													"character": 90
												}
											],
											"signatures": [
												{
													"id": 1927,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1928,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1929,
															"name": "bytesRead",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1930,
															"name": "buffers",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "ArrayBufferView",
																	"qualifiedName": "NodeJS.ArrayBufferView",
																	"package": "@types/node"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1931,
							"name": "readv",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1932,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1933,
									"name": "buffers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"name": "ArrayBufferView",
												"qualifiedName": "NodeJS.ArrayBufferView",
												"package": "@types/node"
											}
										}
									}
								},
								{
									"id": 1934,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1935,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1936,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 3726,
													"character": 12
												}
											],
											"signatures": [
												{
													"id": 1937,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1938,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														},
														{
															"id": 1939,
															"name": "bytesRead",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1940,
															"name": "buffers",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "ArrayBufferView",
																	"qualifiedName": "NodeJS.ArrayBufferView",
																	"package": "@types/node"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1941,
					"name": "readv",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 1942,
							"name": "__promisify__",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3733,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 1943,
									"name": "__promisify__",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1944,
											"name": "fd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1945,
											"name": "buffers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "ArrayBufferView",
														"qualifiedName": "NodeJS.ArrayBufferView",
														"package": "@types/node"
													}
												}
											}
										},
										{
											"id": 1946,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3877,
												"name": "ReadVResult",
												"qualifiedName": "ReadVResult",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								1942
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3721,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3722,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3732,
							"character": 21
						}
					]
				},
				{
					"id": 3877,
					"name": "ReadVResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3878,
							"name": "bytesRead",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3729,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3879,
							"name": "buffers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3730,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ArrayBufferView",
									"qualifiedName": "NodeJS.ArrayBufferView",
									"package": "@types/node"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3878,
								3879
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3728,
							"character": 21
						}
					]
				},
				{
					"id": 1947,
					"name": "readvSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3741,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1948,
							"name": "readvSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "For detailed information, see the documentation of the asynchronous version of\nthis API: "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "readv",
										"target": 1921
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.13.0, v12.17.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of bytes read."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1949,
									"name": "fd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1950,
									"name": "buffers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"name": "ArrayBufferView",
												"qualifiedName": "NodeJS.ArrayBufferView",
												"package": "@types/node"
											}
										}
									}
								},
								{
									"id": 1951,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3880,
					"name": "OpenDirOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3881,
							"name": "encoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3743,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BufferEncoding",
								"qualifiedName": "global.BufferEncoding",
								"package": "@types/node"
							}
						},
						{
							"id": 3882,
							"name": "bufferSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Number of directory entries that are buffered\ninternally when reading from the directory. Higher values lead to better\nperformance but higher memory usage."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "32"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3750,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3881,
								3882
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3742,
							"character": 21
						}
					]
				},
				{
					"id": 1952,
					"name": "opendirSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3762,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1953,
							"name": "opendirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously open a directory. See ["
									},
									{
										"kind": "code",
										"text": "`opendir(3)`"
									},
									{
										"kind": "text",
										"text": "](http://man7.org/linux/man-pages/man3/opendir.3.html).\n\nCreates an "
									},
									{
										"kind": "code",
										"text": "`fs.Dir`"
									},
									{
										"kind": "text",
										"text": ", which contains all further functions for reading from\nand cleaning up the directory.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`encoding`"
									},
									{
										"kind": "text",
										"text": " option sets the encoding for the "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " while opening the\ndirectory and subsequent read operations."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v12.12.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1954,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 2322,
										"name": "PathLike",
										"qualifiedName": "PathLike",
										"package": "@types/node"
									}
								},
								{
									"id": 1955,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3880,
										"name": "OpenDirOptions",
										"qualifiedName": "OpenDirOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2423,
								"name": "Dir",
								"qualifiedName": "Dir",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 3883,
					"name": "BigIntStats",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3888,
							"name": "isFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 46,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3889,
									"name": "isFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2338,
										"name": "StatsBase.isFile"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2337,
								"name": "StatsBase.isFile"
							}
						},
						{
							"id": 3890,
							"name": "isDirectory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 47,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3891,
									"name": "isDirectory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2340,
										"name": "StatsBase.isDirectory"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2339,
								"name": "StatsBase.isDirectory"
							}
						},
						{
							"id": 3892,
							"name": "isBlockDevice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3893,
									"name": "isBlockDevice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2342,
										"name": "StatsBase.isBlockDevice"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2341,
								"name": "StatsBase.isBlockDevice"
							}
						},
						{
							"id": 3894,
							"name": "isCharacterDevice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3895,
									"name": "isCharacterDevice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2344,
										"name": "StatsBase.isCharacterDevice"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2343,
								"name": "StatsBase.isCharacterDevice"
							}
						},
						{
							"id": 3896,
							"name": "isSymbolicLink",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3897,
									"name": "isSymbolicLink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2346,
										"name": "StatsBase.isSymbolicLink"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2345,
								"name": "StatsBase.isSymbolicLink"
							}
						},
						{
							"id": 3898,
							"name": "isFIFO",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3899,
									"name": "isFIFO",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2348,
										"name": "StatsBase.isFIFO"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2347,
								"name": "StatsBase.isFIFO"
							}
						},
						{
							"id": 3900,
							"name": "isSocket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 52,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3901,
									"name": "isSocket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2350,
										"name": "StatsBase.isSocket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2349,
								"name": "StatsBase.isSocket"
							}
						},
						{
							"id": 3902,
							"name": "dev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2351,
								"name": "StatsBase.dev"
							}
						},
						{
							"id": 3903,
							"name": "ino",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2352,
								"name": "StatsBase.ino"
							}
						},
						{
							"id": 3904,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 55,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2353,
								"name": "StatsBase.mode"
							}
						},
						{
							"id": 3905,
							"name": "nlink",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 56,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2354,
								"name": "StatsBase.nlink"
							}
						},
						{
							"id": 3906,
							"name": "uid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2355,
								"name": "StatsBase.uid"
							}
						},
						{
							"id": 3907,
							"name": "gid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 58,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2356,
								"name": "StatsBase.gid"
							}
						},
						{
							"id": 3908,
							"name": "rdev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 59,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2357,
								"name": "StatsBase.rdev"
							}
						},
						{
							"id": 3909,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 60,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2358,
								"name": "StatsBase.size"
							}
						},
						{
							"id": 3910,
							"name": "blksize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 61,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2359,
								"name": "StatsBase.blksize"
							}
						},
						{
							"id": 3911,
							"name": "blocks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2360,
								"name": "StatsBase.blocks"
							}
						},
						{
							"id": 3912,
							"name": "atimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 63,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2361,
								"name": "StatsBase.atimeMs"
							}
						},
						{
							"id": 3913,
							"name": "mtimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 64,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2362,
								"name": "StatsBase.mtimeMs"
							}
						},
						{
							"id": 3914,
							"name": "ctimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 65,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2363,
								"name": "StatsBase.ctimeMs"
							}
						},
						{
							"id": 3915,
							"name": "birthtimeMs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2364,
								"name": "StatsBase.birthtimeMs"
							}
						},
						{
							"id": 3916,
							"name": "atime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 67,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2365,
								"name": "StatsBase.atime"
							}
						},
						{
							"id": 3917,
							"name": "mtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 68,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2366,
								"name": "StatsBase.mtime"
							}
						},
						{
							"id": 3918,
							"name": "ctime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 69,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2367,
								"name": "StatsBase.ctime"
							}
						},
						{
							"id": 3919,
							"name": "birthtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 70,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2368,
								"name": "StatsBase.birthtime"
							}
						},
						{
							"id": 3884,
							"name": "atimeNs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3780,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						},
						{
							"id": 3885,
							"name": "mtimeNs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3781,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						},
						{
							"id": 3886,
							"name": "ctimeNs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3782,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						},
						{
							"id": 3887,
							"name": "birthtimeNs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3783,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								3888,
								3890,
								3892,
								3894,
								3896,
								3898,
								3900
							]
						},
						{
							"title": "Properties",
							"children": [
								3902,
								3903,
								3904,
								3905,
								3906,
								3907,
								3908,
								3909,
								3910,
								3911,
								3912,
								3913,
								3914,
								3915,
								3916,
								3917,
								3918,
								3919,
								3884,
								3885,
								3886,
								3887
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3779,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2336,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "bigint"
								}
							],
							"name": "StatsBase",
							"qualifiedName": "StatsBase",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 3920,
					"name": "BigIntOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3921,
							"name": "bigint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3786,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3921
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3785,
							"character": 21
						}
					]
				},
				{
					"id": 3922,
					"name": "StatOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3923,
							"name": "bigint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3789,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3923
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3788,
							"character": 21
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3924,
							"name": "StatSyncOptions"
						}
					]
				},
				{
					"id": 3924,
					"name": "StatSyncOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3926,
							"name": "bigint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3789,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3923,
								"name": "StatOptions.bigint"
							}
						},
						{
							"id": 3925,
							"name": "throwIfNoEntry",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3792,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3926,
								3925
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3791,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3922,
							"name": "StatOptions",
							"qualifiedName": "StatOptions",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 3927,
					"name": "CopySyncOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 3932,
							"name": "dereference",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Dereference symlinks"
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "false"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3799,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CopyOptionsBase.dereference"
							}
						},
						{
							"id": 3933,
							"name": "errorOnExist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When "
									},
									{
										"kind": "code",
										"text": "`force`"
									},
									{
										"kind": "text",
										"text": " is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", and the destination\nexists, throw an error."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "false"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CopyOptionsBase.errorOnExist"
							}
						},
						{
							"id": 3934,
							"name": "force",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Overwrite existing file or directory. _The copy\noperation will ignore errors if you set this to false and the destination\nexists. Use the "
									},
									{
										"kind": "code",
										"text": "`errorOnExist`"
									},
									{
										"kind": "text",
										"text": " option to change this behavior."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "true"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3812,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CopyOptionsBase.force"
							}
						},
						{
							"id": 3935,
							"name": "preserveTimestamps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " timestamps from "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " will\nbe preserved."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "false"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3818,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CopyOptionsBase.preserveTimestamps"
							}
						},
						{
							"id": 3936,
							"name": "recursive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Copy directories recursively."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "false"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3823,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CopyOptionsBase.recursive"
							}
						},
						{
							"id": 3937,
							"name": "verbatimSymlinks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When true, path resolution for symlinks will be skipped"
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "false"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3828,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CopyOptionsBase.verbatimSymlinks"
							}
						},
						{
							"id": 3928,
							"name": "filter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs.d.ts",
									"line": 3842,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3929,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to filter copied files/directories. Return\n"
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " to copy the item, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " to ignore it."
											}
										]
									},
									"parameters": [
										{
											"id": 3930,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3931,
											"name": "destination",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3932,
								3933,
								3934,
								3935,
								3936,
								3937
							]
						},
						{
							"title": "Methods",
							"children": [
								3928
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3837,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CopyOptionsBase",
							"qualifiedName": "CopyOptionsBase",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 1956,
					"name": "cp",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3855,
							"character": 20
						},
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3856,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1957,
							"name": "cp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously copies the entire directory structure from "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`dest`"
									},
									{
										"kind": "text",
										"text": ",\nincluding subdirectories and files.\n\nWhen copying a directory to another directory, globs are not supported and\nbehavior is similar to "
									},
									{
										"kind": "code",
										"text": "`cp dir1/ dir2/`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v16.7.0"
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"parameters": [
								{
									"id": 1958,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "URL",
												"qualifiedName": "URL",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1959,
									"name": "destination",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "URL",
												"qualifiedName": "URL",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1960,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1961,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 3855,
													"character": 82
												}
											],
											"signatures": [
												{
													"id": 1962,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1963,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1964,
							"name": "cp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1965,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "URL",
												"qualifiedName": "URL",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1966,
									"name": "destination",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "URL",
												"qualifiedName": "URL",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1967,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "CopyOptions",
										"qualifiedName": "CopyOptions",
										"package": "@types/node"
									}
								},
								{
									"id": 1968,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1969,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/fs.d.ts",
													"line": 3856,
													"character": 101
												}
											],
											"signatures": [
												{
													"id": 1970,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1971,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "ErrnoException",
																"qualifiedName": "NodeJS.ErrnoException",
																"package": "@types/node"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1972,
					"name": "cpSync",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs.d.ts",
							"line": 3868,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1973,
							"name": "cpSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously copies the entire directory structure from "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`dest`"
									},
									{
										"kind": "text",
										"text": ",\nincluding subdirectories and files.\n\nWhen copying a directory to another directory, globs are not supported and\nbehavior is similar to "
									},
									{
										"kind": "code",
										"text": "`cp dir1/ dir2/`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v16.7.0"
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"parameters": [
								{
									"id": 1974,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "URL",
												"qualifiedName": "URL",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1975,
									"name": "destination",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "URL",
												"qualifiedName": "URL",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1976,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3927,
										"name": "CopySyncOptions",
										"qualifiedName": "CopySyncOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1977,
					"name": "promises",
					"kind": 4,
					"kindString": "Namespace",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 2194,
							"name": "FileChangeInfo",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 2195,
									"name": "eventType",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 39,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 3822,
										"name": "WatchEventType",
										"qualifiedName": "WatchEventType",
										"package": "@types/node"
									}
								},
								{
									"id": 2196,
									"name": "filename",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 40,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 2197,
										"name": "T",
										"qualifiedName": "FileChangeInfo.T",
										"package": "@types/node"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2195,
										2196
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 38,
									"character": 14
								}
							],
							"typeParameters": [
								{
									"id": 2197,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								}
							]
						},
						{
							"id": 2198,
							"name": "FlagAndOpenMode",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 2199,
									"name": "mode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 43,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "Mode",
										"qualifiedName": "Mode",
										"package": "@types/node"
									}
								},
								{
									"id": 2200,
									"name": "flag",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 44,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 2335,
										"name": "OpenMode",
										"qualifiedName": "OpenMode",
										"package": "@types/node"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2199,
										2200
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 42,
									"character": 14
								}
							]
						},
						{
							"id": 2201,
							"name": "FileReadResult",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 2202,
									"name": "bytesRead",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 47,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2203,
									"name": "buffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 48,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 2204,
										"name": "T",
										"qualifiedName": "FileReadResult.T",
										"package": "@types/node"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2202,
										2203
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 46,
									"character": 14
								}
							],
							"typeParameters": [
								{
									"id": 2204,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "NodeJS.ArrayBufferView",
										"qualifiedName": "NodeJS.ArrayBufferView",
										"package": "@types/node"
									}
								}
							]
						},
						{
							"id": 2205,
							"name": "FileReadOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 2206,
									"name": "buffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "`Buffer.alloc(0xffff)`"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 54,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 2210,
										"name": "T",
										"qualifiedName": "FileReadOptions.T",
										"package": "@types/node"
									}
								},
								{
									"id": 2207,
									"name": "offset",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "text",
														"text": "0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 58,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2208,
									"name": "length",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "`buffer.byteLength`"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 62,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2209,
									"name": "position",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 63,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2206,
										2207,
										2208,
										2209
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 50,
									"character": 14
								}
							],
							"typeParameters": [
								{
									"id": 2210,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "NodeJS.ArrayBufferView",
										"qualifiedName": "NodeJS.ArrayBufferView",
										"package": "@types/node"
									},
									"default": {
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								}
							]
						},
						{
							"id": 2211,
							"name": "CreateReadStreamOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 2212,
									"name": "encoding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 66,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "BufferEncoding",
										"qualifiedName": "global.BufferEncoding",
										"package": "@types/node"
									}
								},
								{
									"id": 2213,
									"name": "autoClose",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 67,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2214,
									"name": "emitClose",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 68,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2215,
									"name": "start",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 69,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2216,
									"name": "end",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 70,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2217,
									"name": "highWaterMark",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 71,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2212,
										2213,
										2214,
										2215,
										2216,
										2217
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 65,
									"character": 14
								}
							]
						},
						{
							"id": 2218,
							"name": "CreateWriteStreamOptions",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 2219,
									"name": "encoding",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 74,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "BufferEncoding",
										"qualifiedName": "global.BufferEncoding",
										"package": "@types/node"
									}
								},
								{
									"id": 2220,
									"name": "autoClose",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 75,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2221,
									"name": "emitClose",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 76,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2222,
									"name": "start",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 77,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2219,
										2220,
										2221,
										2222
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 73,
									"character": 14
								}
							]
						},
						{
							"id": 2223,
							"name": "FileHandle",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExternal": true
							},
							"children": [
								{
									"id": 2224,
									"name": "fd",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true,
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The numeric file descriptor managed by the {FileHandle} object."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 85,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2225,
									"name": "appendFile",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 94,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2226,
											"name": "appendFile",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Alias of "
													},
													{
														"kind": "code",
														"text": "`filehandle.writeFile()`"
													},
													{
														"kind": "text",
														"text": ".\n\nWhen operating on file handles, the mode cannot be changed from what it was set\nto with "
													},
													{
														"kind": "code",
														"text": "`fsPromises.open()`"
													},
													{
														"kind": "text",
														"text": ". Therefore, this is equivalent to "
													},
													{
														"kind": "code",
														"text": "`filehandle.writeFile()`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills with "
															},
															{
																"kind": "code",
																"text": "`undefined`"
															},
															{
																"kind": "text",
																"text": " upon success."
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2227,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "Uint8Array",
																"qualifiedName": "Uint8Array",
																"package": "typescript"
															}
														]
													}
												},
												{
													"id": 2228,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BufferEncoding",
																"qualifiedName": "global.BufferEncoding",
																"package": "@types/node"
															},
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"id": 2332,
																		"name": "ObjectEncodingOptions",
																		"qualifiedName": "ObjectEncodingOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "reference",
																		"id": 2198,
																		"name": "FlagAndOpenMode",
																		"qualifiedName": "FlagAndOpenMode",
																		"package": "@types/node"
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2229,
									"name": "chown",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 102,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2230,
											"name": "chown",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Changes the ownership of the file. A wrapper for ["
													},
													{
														"kind": "code",
														"text": "`chown(2)`"
													},
													{
														"kind": "text",
														"text": "](http://man7.org/linux/man-pages/man2/chown.2.html)."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills with "
															},
															{
																"kind": "code",
																"text": "`undefined`"
															},
															{
																"kind": "text",
																"text": " upon success."
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2231,
													"name": "uid",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The file's new owner's user id."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2232,
													"name": "gid",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The file's new group's group id."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2233,
									"name": "chmod",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 109,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2234,
											"name": "chmod",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Modifies the permissions on the file. See ["
													},
													{
														"kind": "code",
														"text": "`chmod(2)`"
													},
													{
														"kind": "text",
														"text": "](http://man7.org/linux/man-pages/man2/chmod.2.html)."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills with "
															},
															{
																"kind": "code",
																"text": "`undefined`"
															},
															{
																"kind": "text",
																"text": " upon success."
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2235,
													"name": "mode",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "the file mode bit mask."
															}
														]
													},
													"type": {
														"type": "reference",
														"name": "Mode",
														"qualifiedName": "Mode",
														"package": "@types/node"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2236,
									"name": "createReadStream",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 163,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2237,
											"name": "createReadStream",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Unlike the 16 kb default "
													},
													{
														"kind": "code",
														"text": "`highWaterMark`"
													},
													{
														"kind": "text",
														"text": " for a "
													},
													{
														"kind": "code",
														"text": "`stream.Readable`"
													},
													{
														"kind": "text",
														"text": ", the stream\nreturned by this method has a default "
													},
													{
														"kind": "code",
														"text": "`highWaterMark`"
													},
													{
														"kind": "text",
														"text": " of 64 kb.\n\n"
													},
													{
														"kind": "code",
														"text": "`options`"
													},
													{
														"kind": "text",
														"text": " can include "
													},
													{
														"kind": "code",
														"text": "`start`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`end`"
													},
													{
														"kind": "text",
														"text": " values to read a range of bytes from\nthe file instead of the entire file. Both "
													},
													{
														"kind": "code",
														"text": "`start`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`end`"
													},
													{
														"kind": "text",
														"text": " are inclusive and\nstart counting at 0, allowed values are in the\n\\[0, ["
													},
													{
														"kind": "code",
														"text": "`Number.MAX_SAFE_INTEGER`"
													},
													{
														"kind": "text",
														"text": "](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\\] range. If "
													},
													{
														"kind": "code",
														"text": "`start`"
													},
													{
														"kind": "text",
														"text": " is\nomitted or "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`filehandle.createReadStream()`"
													},
													{
														"kind": "text",
														"text": " reads sequentially from\nthe current file position. The "
													},
													{
														"kind": "code",
														"text": "`encoding`"
													},
													{
														"kind": "text",
														"text": " can be any one of those accepted by "
													},
													{
														"kind": "code",
														"text": "`Buffer`"
													},
													{
														"kind": "text",
														"text": ".\n\nIf the "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " points to a character device that only supports blocking\nreads (such as keyboard or sound card), read operations do not finish until data\nis available. This can prevent the process from exiting and the stream from\nclosing naturally.\n\nBy default, the stream will emit a "
													},
													{
														"kind": "code",
														"text": "`'close'`"
													},
													{
														"kind": "text",
														"text": " event after it has been\ndestroyed.  Set the "
													},
													{
														"kind": "code",
														"text": "`emitClose`"
													},
													{
														"kind": "text",
														"text": " option to "
													},
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": " to change this behavior.\n\n"
													},
													{
														"kind": "code",
														"text": "```js\nimport { open } from 'fs/promises';\n\nconst fd = await open('/dev/input/event0');\n// Create a stream from some character device.\nconst stream = fd.createReadStream();\nsetTimeout(() => {\n  stream.close(); // This may not close the stream.\n  // Artificially marking end-of-stream, as if the underlying resource had\n  // indicated end-of-file by itself, allows the stream to close.\n  // This does not cancel pending read operations, and if there is such an\n  // operation, the process may still not be able to exit successfully\n  // until it finishes.\n  stream.push(null);\n  stream.read(0);\n}, 100);\n```"
													},
													{
														"kind": "text",
														"text": "\n\nIf "
													},
													{
														"kind": "code",
														"text": "`autoClose`"
													},
													{
														"kind": "text",
														"text": " is false, then the file descriptor won't be closed, even if\nthere's an error. It is the application's responsibility to close it and make\nsure there's no file descriptor leak. If "
													},
													{
														"kind": "code",
														"text": "`autoClose`"
													},
													{
														"kind": "text",
														"text": " is set to true (default\nbehavior), on "
													},
													{
														"kind": "code",
														"text": "`'error'`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`'end'`"
													},
													{
														"kind": "text",
														"text": " the file descriptor will be closed\nautomatically.\n\nAn example to read the last 10 bytes of a file which is 100 bytes long:\n\n"
													},
													{
														"kind": "code",
														"text": "```js\nimport { open } from 'fs/promises';\n\nconst fd = await open('sample.txt');\nfd.createReadStream({ start: 90, end: 99 });\n```"
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v16.11.0"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2238,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2211,
														"name": "CreateReadStreamOptions",
														"qualifiedName": "CreateReadStreamOptions",
														"package": "@types/node"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 2687,
												"name": "ReadStream",
												"qualifiedName": "ReadStream",
												"package": "@types/node"
											}
										}
									]
								},
								{
									"id": 2239,
									"name": "createWriteStream",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 180,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2240,
											"name": "createWriteStream",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "code",
														"text": "`options`"
													},
													{
														"kind": "text",
														"text": " may also include a "
													},
													{
														"kind": "code",
														"text": "`start`"
													},
													{
														"kind": "text",
														"text": " option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, ["
													},
													{
														"kind": "code",
														"text": "`Number.MAX_SAFE_INTEGER`"
													},
													{
														"kind": "text",
														"text": "](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\\] range. Modifying a file rather than\nreplacing it may require the "
													},
													{
														"kind": "code",
														"text": "`flags`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`open`"
													},
													{
														"kind": "text",
														"text": " option to be set to "
													},
													{
														"kind": "code",
														"text": "`r+`"
													},
													{
														"kind": "text",
														"text": " rather than\nthe default "
													},
													{
														"kind": "code",
														"text": "`r`"
													},
													{
														"kind": "text",
														"text": ". The "
													},
													{
														"kind": "code",
														"text": "`encoding`"
													},
													{
														"kind": "text",
														"text": " can be any one of those accepted by "
													},
													{
														"kind": "code",
														"text": "`Buffer`"
													},
													{
														"kind": "text",
														"text": ".\n\nIf "
													},
													{
														"kind": "code",
														"text": "`autoClose`"
													},
													{
														"kind": "text",
														"text": " is set to true (default behavior) on "
													},
													{
														"kind": "code",
														"text": "`'error'`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`'finish'`"
													},
													{
														"kind": "text",
														"text": "the file descriptor will be closed automatically. If "
													},
													{
														"kind": "code",
														"text": "`autoClose`"
													},
													{
														"kind": "text",
														"text": " is false,\nthen the file descriptor won't be closed, even if there's an error.\nIt is the application's responsibility to close it and make sure there's no\nfile descriptor leak.\n\nBy default, the stream will emit a "
													},
													{
														"kind": "code",
														"text": "`'close'`"
													},
													{
														"kind": "text",
														"text": " event after it has been\ndestroyed.  Set the "
													},
													{
														"kind": "code",
														"text": "`emitClose`"
													},
													{
														"kind": "text",
														"text": " option to "
													},
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": " to change this behavior."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v16.11.0"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2241,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2218,
														"name": "CreateWriteStreamOptions",
														"qualifiedName": "CreateWriteStreamOptions",
														"package": "@types/node"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 3175,
												"name": "WriteStream",
												"qualifiedName": "WriteStream",
												"package": "@types/node"
											}
										}
									]
								},
								{
									"id": 2242,
									"name": "datasync",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 189,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2243,
											"name": "datasync",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces all currently queued I/O operations associated with the file to the\noperating system's synchronized I/O completion state. Refer to the POSIX ["
													},
													{
														"kind": "code",
														"text": "`fdatasync(2)`"
													},
													{
														"kind": "text",
														"text": "](http://man7.org/linux/man-pages/man2/fdatasync.2.html) documentation for details.\n\nUnlike "
													},
													{
														"kind": "code",
														"text": "`filehandle.sync`"
													},
													{
														"kind": "text",
														"text": " this method does not flush modified metadata."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills with "
															},
															{
																"kind": "code",
																"text": "`undefined`"
															},
															{
																"kind": "text",
																"text": " upon success."
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2244,
									"name": "sync",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 197,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2245,
											"name": "sync",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Request that all data for the open file descriptor is flushed to the storage\ndevice. The specific implementation is operating system and device specific.\nRefer to the POSIX ["
													},
													{
														"kind": "code",
														"text": "`fsync(2)`"
													},
													{
														"kind": "text",
														"text": "](http://man7.org/linux/man-pages/man2/fsync.2.html) documentation for more detail."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fufills with "
															},
															{
																"kind": "code",
																"text": "`undefined`"
															},
															{
																"kind": "text",
																"text": " upon success."
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2246,
									"name": "read",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 211,
											"character": 8
										},
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 212,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2247,
											"name": "read",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Reads data from the file and stores that in the given buffer.\n\nIf the file is not modified concurrently, the end-of-file is reached when the\nnumber of bytes read is zero."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills upon success with an object with two properties:"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 2248,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"name": "ArrayBufferView",
														"qualifiedName": "NodeJS.ArrayBufferView",
														"package": "@types/node"
													}
												}
											],
											"parameters": [
												{
													"id": 2249,
													"name": "buffer",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A buffer that will be filled with the file data read."
															}
														]
													},
													"type": {
														"type": "reference",
														"id": 2248,
														"name": "T",
														"qualifiedName": "T",
														"package": "@types/node"
													}
												},
												{
													"id": 2250,
													"name": "offset",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The location in the buffer at which to start filling."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2251,
													"name": "length",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The number of bytes to read."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2252,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The location where to begin reading data from the file. If "
															},
															{
																"kind": "code",
																"text": "`null`"
															},
															{
																"kind": "text",
																"text": ", data will be read from the current file position, and the position will be updated. If "
															},
															{
																"kind": "code",
																"text": "`position`"
															},
															{
																"kind": "text",
																"text": " is an\ninteger, the current file position will remain unchanged."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2248,
																"name": "T",
																"qualifiedName": "T",
																"package": "@types/node"
															}
														],
														"name": "FileReadResult",
														"qualifiedName": "FileReadResult",
														"package": "@types/node"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										},
										{
											"id": 2253,
											"name": "read",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"typeParameter": [
												{
													"id": 2254,
													"name": "T",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"name": "ArrayBufferView",
														"qualifiedName": "NodeJS.ArrayBufferView",
														"package": "@types/node"
													},
													"default": {
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												}
											],
											"parameters": [
												{
													"id": 2255,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 2205,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2254,
																"name": "T",
																"qualifiedName": "T",
																"package": "@types/node"
															}
														],
														"name": "FileReadOptions",
														"qualifiedName": "FileReadOptions",
														"package": "@types/node"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2201,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2254,
																"name": "T",
																"qualifiedName": "T",
																"package": "@types/node"
															}
														],
														"name": "FileReadResult",
														"qualifiedName": "FileReadResult",
														"package": "@types/node"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2256,
									"name": "readableWebStream",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 235,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2257,
											"name": "readableWebStream",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns a "
													},
													{
														"kind": "code",
														"text": "`ReadableStream`"
													},
													{
														"kind": "text",
														"text": " that may be used to read the files data.\n\nAn error will be thrown if this method is called more than once or is called after the "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " is closed\nor closing.\n\n"
													},
													{
														"kind": "code",
														"text": "```js\nimport { open } from 'node:fs/promises';\n\nconst file = await open('./some/file/to/read');\n\nfor await (const chunk of file.readableWebStream())\n  console.log(chunk);\n\nawait file.close();\n```"
													},
													{
														"kind": "text",
														"text": "\n\nWhile the "
													},
													{
														"kind": "code",
														"text": "`ReadableStream`"
													},
													{
														"kind": "text",
														"text": " will read the file to completion, it will not close the "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " automatically. User code must still call the "
													},
													{
														"kind": "code",
														"text": "`fileHandle.close()`"
													},
													{
														"kind": "text",
														"text": " method."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v17.0.0"
															}
														]
													}
												],
												"modifierTags": [
													"@experimental"
												]
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ReadableStream",
												"qualifiedName": "ReadableStream",
												"package": "@types/node"
											}
										}
									]
								},
								{
									"id": 2258,
									"name": "readFile",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 250,
											"character": 8
										},
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 262,
											"character": 8
										},
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 276,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2259,
											"name": "readFile",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Asynchronously reads the entire contents of a file.\n\nIf "
													},
													{
														"kind": "code",
														"text": "`options`"
													},
													{
														"kind": "text",
														"text": " is a string, then it specifies the "
													},
													{
														"kind": "code",
														"text": "`encoding`"
													},
													{
														"kind": "text",
														"text": ".\n\nThe "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " has to support reading.\n\nIf one or more "
													},
													{
														"kind": "code",
														"text": "`filehandle.read()`"
													},
													{
														"kind": "text",
														"text": " calls are made on a file handle and then a"
													},
													{
														"kind": "code",
														"text": "`filehandle.readFile()`"
													},
													{
														"kind": "text",
														"text": " call is made, the data will be read from the current\nposition till the end of the file. It doesn't always read from the beginning\nof the file."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills upon a successful read with the contents of the file. If no encoding is specified (using "
															},
															{
																"kind": "code",
																"text": "`options.encoding`"
															},
															{
																"kind": "text",
																"text": "), the data is returned as a {Buffer} object. Otherwise, the\ndata will be a string."
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2260,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2261,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2262,
																	"name": "encoding",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 252,
																			"character": 16
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 2263,
																	"name": "flag",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 253,
																			"character": 16
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2335,
																		"name": "OpenMode",
																		"qualifiedName": "OpenMode",
																		"package": "@types/node"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2262,
																		2263
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 251,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										},
										{
											"id": 2264,
											"name": "readFile",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Asynchronously reads the entire contents of a file. The underlying file will _not_ be closed automatically.\nThe "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " must have been opened for reading."
													}
												]
											},
											"parameters": [
												{
													"id": 2265,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An object that may contain an optional flag.\nIf a flag is not provided, it defaults to "
															},
															{
																"kind": "code",
																"text": "`'r'`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BufferEncoding",
																"qualifiedName": "global.BufferEncoding",
																"package": "@types/node"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2266,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2267,
																			"name": "encoding",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 265,
																					"character": 22
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "BufferEncoding",
																				"qualifiedName": "global.BufferEncoding",
																				"package": "@types/node"
																			}
																		},
																		{
																			"id": 2268,
																			"name": "flag",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 266,
																					"character": 22
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 2335,
																				"name": "OpenMode",
																				"qualifiedName": "OpenMode",
																				"package": "@types/node"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2267,
																				2268
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 264,
																			"character": 18
																		}
																	]
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										},
										{
											"id": 2269,
											"name": "readFile",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Asynchronously reads the entire contents of a file. The underlying file will _not_ be closed automatically.\nThe "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " must have been opened for reading."
													}
												]
											},
											"parameters": [
												{
													"id": 2270,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An object that may contain an optional flag.\nIf a flag is not provided, it defaults to "
															},
															{
																"kind": "code",
																"text": "`'r'`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BufferEncoding",
																"qualifiedName": "global.BufferEncoding",
																"package": "@types/node"
															},
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"id": 2332,
																		"name": "ObjectEncodingOptions",
																		"qualifiedName": "ObjectEncodingOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2271,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {
																				"isExternal": true
																			},
																			"children": [
																				{
																					"id": 2272,
																					"name": "flag",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {
																						"isExternal": true,
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "node_modules/@types/node/fs/promises.d.ts",
																							"line": 279,
																							"character": 22
																						}
																					],
																					"type": {
																						"type": "reference",
																						"id": 2335,
																						"name": "OpenMode",
																						"qualifiedName": "OpenMode",
																						"package": "@types/node"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2272
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 278,
																					"character": 43
																				}
																			]
																		}
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "Buffer",
																"qualifiedName": "global.Buffer",
																"package": "@types/node"
															}
														]
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2273,
									"name": "stat",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 288,
											"character": 8
										},
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 293,
											"character": 8
										},
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 298,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2274,
											"name": "stat",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills with an {fs.Stats} for the file."
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2275,
													"name": "opts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 3922,
																"name": "StatOptions",
																"qualifiedName": "StatOptions",
																"package": "@types/node"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2276,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2277,
																			"name": "bigint",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 290,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": false
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2277
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 289,
																			"character": 33
																		}
																	]
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2370,
														"name": "Stats",
														"qualifiedName": "Stats",
														"package": "@types/node"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										},
										{
											"id": 2278,
											"name": "stat",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 2279,
													"name": "opts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 3922,
																"name": "StatOptions",
																"qualifiedName": "StatOptions",
																"package": "@types/node"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2280,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2281,
																			"name": "bigint",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 295,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": true
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2281
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 294,
																			"character": 32
																		}
																	]
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3883,
														"name": "BigIntStats",
														"qualifiedName": "BigIntStats",
														"package": "@types/node"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										},
										{
											"id": 2282,
											"name": "stat",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 2283,
													"name": "opts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 3922,
														"name": "StatOptions",
														"qualifiedName": "StatOptions",
														"package": "@types/node"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 2370,
																"name": "Stats",
																"qualifiedName": "Stats",
																"package": "@types/node"
															},
															{
																"type": "reference",
																"id": 3883,
																"name": "BigIntStats",
																"qualifiedName": "BigIntStats",
																"package": "@types/node"
															}
														]
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2284,
									"name": "truncate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 327,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2285,
											"name": "truncate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Truncates the file.\n\nIf the file was larger than "
													},
													{
														"kind": "code",
														"text": "`len`"
													},
													{
														"kind": "text",
														"text": " bytes, only the first "
													},
													{
														"kind": "code",
														"text": "`len`"
													},
													{
														"kind": "text",
														"text": " bytes will be\nretained in the file.\n\nThe following example retains only the first four bytes of the file:\n\n"
													},
													{
														"kind": "code",
														"text": "```js\nimport { open } from 'fs/promises';\n\nlet filehandle = null;\ntry {\n  filehandle = await open('temp.txt', 'r+');\n  await filehandle.truncate(4);\n} finally {\n  await filehandle?.close();\n}\n```"
													},
													{
														"kind": "text",
														"text": "\n\nIf the file previously was shorter than "
													},
													{
														"kind": "code",
														"text": "`len`"
													},
													{
														"kind": "text",
														"text": " bytes, it is extended, and the\nextended part is filled with null bytes ("
													},
													{
														"kind": "code",
														"text": "`'\\0'`"
													},
													{
														"kind": "text",
														"text": "):\n\nIf "
													},
													{
														"kind": "code",
														"text": "`len`"
													},
													{
														"kind": "text",
														"text": " is negative then "
													},
													{
														"kind": "code",
														"text": "`0`"
													},
													{
														"kind": "text",
														"text": " will be used."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills with "
															},
															{
																"kind": "code",
																"text": "`undefined`"
															},
															{
																"kind": "text",
																"text": " upon success."
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2286,
													"name": "len",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2287,
									"name": "utimes",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 332,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2288,
											"name": "utimes",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Change the file system timestamps of the object referenced by the "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " then resolves the promise with no arguments upon success."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2289,
													"name": "atime",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"name": "Date",
																"qualifiedName": "Date",
																"package": "typescript"
															}
														]
													}
												},
												{
													"id": 2290,
													"name": "mtime",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"name": "Date",
																"qualifiedName": "Date",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2291,
									"name": "writeFile",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 351,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2292,
											"name": "writeFile",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Asynchronously writes data to a file, replacing the file if it already exists."
													},
													{
														"kind": "code",
														"text": "`data`"
													},
													{
														"kind": "text",
														"text": " can be a string, a buffer, an\n[AsyncIterable](https://tc39.github.io/ecma262/#sec-asynciterable-interface) or\n[Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol) object.\nThe promise is resolved with no arguments upon success.\n\nIf "
													},
													{
														"kind": "code",
														"text": "`options`"
													},
													{
														"kind": "text",
														"text": " is a string, then it specifies the "
													},
													{
														"kind": "code",
														"text": "`encoding`"
													},
													{
														"kind": "text",
														"text": ".\n\nThe "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " has to support writing.\n\nIt is unsafe to use "
													},
													{
														"kind": "code",
														"text": "`filehandle.writeFile()`"
													},
													{
														"kind": "text",
														"text": " multiple times on the same file\nwithout waiting for the promise to be resolved (or rejected).\n\nIf one or more "
													},
													{
														"kind": "code",
														"text": "`filehandle.write()`"
													},
													{
														"kind": "text",
														"text": " calls are made on a file handle and then a"
													},
													{
														"kind": "code",
														"text": "`filehandle.writeFile()`"
													},
													{
														"kind": "text",
														"text": " call is made, the data will be written from the\ncurrent position till the end of the file. It doesn't always write from the\nbeginning of the file."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2293,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "Uint8Array",
																"qualifiedName": "Uint8Array",
																"package": "typescript"
															}
														]
													}
												},
												{
													"id": 2294,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BufferEncoding",
																"qualifiedName": "global.BufferEncoding",
																"package": "@types/node"
															},
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"id": 2332,
																		"name": "ObjectEncodingOptions",
																		"qualifiedName": "ObjectEncodingOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "reference",
																		"id": 2198,
																		"name": "FlagAndOpenMode",
																		"qualifiedName": "FlagAndOpenMode",
																		"package": "@types/node"
																	},
																	{
																		"type": "reference",
																		"name": "Abortable",
																		"qualifiedName": "EventEmitter.Abortable",
																		"package": "@types/node"
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2295,
									"name": "write",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 370,
											"character": 8
										},
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 379,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2296,
											"name": "write",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Write "
													},
													{
														"kind": "code",
														"text": "`buffer`"
													},
													{
														"kind": "text",
														"text": " to the file.\n\nThe promise is resolved with an object containing two properties:\n\nIt is unsafe to use "
													},
													{
														"kind": "code",
														"text": "`filehandle.write()`"
													},
													{
														"kind": "text",
														"text": " multiple times on the same file\nwithout waiting for the promise to be resolved (or rejected). For this\nscenario, use "
													},
													{
														"kind": "code",
														"text": "`filehandle.createWriteStream()`"
													},
													{
														"kind": "text",
														"text": ".\n\nOn Linux, positional writes do not work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 2297,
													"name": "TBuffer",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2297,
																"name": "TBuffer",
																"qualifiedName": "TBuffer",
																"package": "@types/node"
															}
														],
														"name": "Uint8Array",
														"qualifiedName": "Uint8Array",
														"package": "typescript"
													}
												}
											],
											"parameters": [
												{
													"id": 2298,
													"name": "buffer",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"id": 2297,
														"name": "TBuffer",
														"qualifiedName": "TBuffer",
														"package": "@types/node"
													}
												},
												{
													"id": 2299,
													"name": "offset",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The start position from within "
															},
															{
																"kind": "code",
																"text": "`buffer`"
															},
															{
																"kind": "text",
																"text": " where the data to write begins."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2300,
													"name": "length",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2301,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The offset from the beginning of the file where the data from "
															},
															{
																"kind": "code",
																"text": "`buffer`"
															},
															{
																"kind": "text",
																"text": " should be written. If "
															},
															{
																"kind": "code",
																"text": "`position`"
															},
															{
																"kind": "text",
																"text": " is not a "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", the data will be written at the current position.\nSee the POSIX pwrite(2) documentation for more detail."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2302,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2303,
																	"name": "bytesWritten",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 376,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2304,
																	"name": "buffer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 377,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2297,
																		"name": "TBuffer",
																		"qualifiedName": "TBuffer",
																		"package": "@types/node"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2303,
																		2304
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 375,
																	"character": 19
																}
															]
														}
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										},
										{
											"id": 2305,
											"name": "write",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"parameters": [
												{
													"id": 2306,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2307,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2308,
													"name": "encoding",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2309,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2310,
																	"name": "bytesWritten",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 384,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2311,
																	"name": "buffer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 385,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2310,
																		2311
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 383,
																	"character": 19
																}
															]
														}
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2312,
									"name": "writev",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 402,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2313,
											"name": "writev",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Write an array of [ArrayBufferView](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView) s to the file.\n\nThe promise is resolved with an object containing a two properties:\n\nIt is unsafe to call "
													},
													{
														"kind": "code",
														"text": "`writev()`"
													},
													{
														"kind": "text",
														"text": " multiple times on the same file without waiting\nfor the promise to be resolved (or rejected).\n\nOn Linux, positional writes don't work when the file is opened in append mode.\nThe kernel ignores the position argument and always appends the data to\nthe end of the file."
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v12.9.0"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2314,
													"name": "buffers",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"name": "ArrayBufferView",
																"qualifiedName": "NodeJS.ArrayBufferView",
																"package": "@types/node"
															}
														}
													}
												},
												{
													"id": 2315,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The offset from the beginning of the file where the data from "
															},
															{
																"kind": "code",
																"text": "`buffers`"
															},
															{
																"kind": "text",
																"text": " should be written. If "
															},
															{
																"kind": "code",
																"text": "`position`"
															},
															{
																"kind": "text",
																"text": " is not a "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", the data will be written at the current\nposition."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3874,
														"name": "WriteVResult",
														"qualifiedName": "WriteVResult",
														"package": "@types/node"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2316,
									"name": "readv",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 409,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2317,
											"name": "readv",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Read from a file and write to an array of [ArrayBufferView](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView) s"
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v13.13.0, v12.17.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills upon success an object containing two properties:"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2318,
													"name": "buffers",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"name": "ArrayBufferView",
																"qualifiedName": "NodeJS.ArrayBufferView",
																"package": "@types/node"
															}
														}
													}
												},
												{
													"id": 2319,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The offset from the beginning of the file where the data should be read from. If "
															},
															{
																"kind": "code",
																"text": "`position`"
															},
															{
																"kind": "text",
																"text": " is not a "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", the data will be read from the current position."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 3877,
														"name": "ReadVResult",
														"qualifiedName": "ReadVResult",
														"package": "@types/node"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 2320,
									"name": "close",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/fs/promises.d.ts",
											"line": 427,
											"character": 8
										}
									],
									"signatures": [
										{
											"id": 2321,
											"name": "close",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Closes the file handle after waiting for any pending operation on the handle to\ncomplete.\n\n"
													},
													{
														"kind": "code",
														"text": "```js\nimport { open } from 'fs/promises';\n\nlet filehandle;\ntry {\n  filehandle = await open('thefile.txt', 'r');\n} finally {\n  await filehandle?.close();\n}\n```"
													}
												],
												"blockTags": [
													{
														"tag": "@since",
														"content": [
															{
																"kind": "text",
																"text": "v10.0.0"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "Fulfills with "
															},
															{
																"kind": "code",
																"text": "`undefined`"
															},
															{
																"kind": "text",
																"text": " upon success."
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2224
									]
								},
								{
									"title": "Methods",
									"children": [
										2225,
										2229,
										2233,
										2236,
										2239,
										2242,
										2244,
										2246,
										2256,
										2258,
										2273,
										2284,
										2287,
										2291,
										2295,
										2312,
										2316,
										2320
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 80,
									"character": 14
								}
							]
						},
						{
							"id": 1978,
							"name": "access",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 462,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 1979,
									"name": "access",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Tests a user's permissions for the file or directory specified by "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": ".\nThe "
											},
											{
												"kind": "code",
												"text": "`mode`"
											},
											{
												"kind": "text",
												"text": " argument is an optional integer that specifies the accessibility\nchecks to be performed. "
											},
											{
												"kind": "code",
												"text": "`mode`"
											},
											{
												"kind": "text",
												"text": " should be either the value "
											},
											{
												"kind": "code",
												"text": "`fs.constants.F_OK`"
											},
											{
												"kind": "text",
												"text": "or a mask consisting of the bitwise OR of any of "
											},
											{
												"kind": "code",
												"text": "`fs.constants.R_OK`"
											},
											{
												"kind": "text",
												"text": ","
											},
											{
												"kind": "code",
												"text": "`fs.constants.W_OK`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`fs.constants.X_OK`"
											},
											{
												"kind": "text",
												"text": "\n(e.g."
											},
											{
												"kind": "code",
												"text": "`fs.constants.W_OK | fs.constants.R_OK`"
											},
											{
												"kind": "text",
												"text": "). Check "
											},
											{
												"kind": "code",
												"text": "`File access constants`"
											},
											{
												"kind": "text",
												"text": " for\npossible values of "
											},
											{
												"kind": "code",
												"text": "`mode`"
											},
											{
												"kind": "text",
												"text": ".\n\nIf the accessibility check is successful, the promise is resolved with no\nvalue. If any of the accessibility checks fail, the promise is rejected\nwith an [Error](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error) object. The following example checks if the file"
											},
											{
												"kind": "code",
												"text": "`/etc/passwd`"
											},
											{
												"kind": "text",
												"text": " can be read and\nwritten by the current process.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { access } from 'fs/promises';\nimport { constants } from 'fs';\n\ntry {\n  await access('/etc/passwd', constants.R_OK | constants.W_OK);\n  console.log('can access');\n} catch {\n  console.error('cannot access');\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nUsing "
											},
											{
												"kind": "code",
												"text": "`fsPromises.access()`"
											},
											{
												"kind": "text",
												"text": " to check for the accessibility of a file before\ncalling "
											},
											{
												"kind": "code",
												"text": "`fsPromises.open()`"
											},
											{
												"kind": "text",
												"text": " is not recommended. Doing so introduces a race\ncondition, since other processes may change the file's state between the two\ncalls. Instead, user code should open/read/write the file directly and handle\nthe error raised if the file is not accessible."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1980,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1981,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1982,
							"name": "copyFile",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 497,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 1983,
									"name": "copyFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously copies "
											},
											{
												"kind": "code",
												"text": "`src`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`dest`"
											},
											{
												"kind": "text",
												"text": ". By default, "
											},
											{
												"kind": "code",
												"text": "`dest`"
											},
											{
												"kind": "text",
												"text": " is overwritten if it\nalready exists.\n\nNo guarantees are made about the atomicity of the copy operation. If an\nerror occurs after the destination file has been opened for writing, an attempt\nwill be made to remove the destination.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { constants } from 'fs';\nimport { copyFile } from 'fs/promises';\n\ntry {\n  await copyFile('source.txt', 'destination.txt');\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.log('The file could not be copied');\n}\n\n// By using COPYFILE_EXCL, the operation will fail if destination.txt exists.\ntry {\n  await copyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL);\n  console.log('source.txt was copied to destination.txt');\n} catch {\n  console.log('The file could not be copied');\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1984,
											"name": "src",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "source filename to copy"
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1985,
											"name": "dest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "destination filename of the copy operation"
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1986,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optional modifiers that specify the behavior of the copy operation. It is possible to create a mask consisting of the bitwise OR of two or more values (e.g.\n"
													},
													{
														"kind": "code",
														"text": "`fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`"
													},
													{
														"kind": "text",
														"text": ")"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1987,
							"name": "open",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 511,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 1988,
									"name": "open",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Opens a "
											},
											{
												"kind": "code",
												"text": "`FileHandle`"
											},
											{
												"kind": "text",
												"text": ".\n\nRefer to the POSIX ["
											},
											{
												"kind": "code",
												"text": "`open(2)`"
											},
											{
												"kind": "text",
												"text": "](http://man7.org/linux/man-pages/man2/open.2.html) documentation for more detail.\n\nSome characters ("
											},
											{
												"kind": "code",
												"text": "`< > : \" / \\ | ? *`"
											},
											{
												"kind": "text",
												"text": ") are reserved under Windows as documented\nby [Naming Files, Paths, and Namespaces](https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file). Under NTFS, if the filename contains\na colon, Node.js will open a file system stream, as described by [this MSDN page](https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams)."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with a {FileHandle} object."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1989,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1990,
											"name": "flags",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "See "
													},
													{
														"kind": "code",
														"text": "`support of file system `"
													},
													{
														"kind": "text",
														"text": "flags``."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 1991,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Sets the file mode (permission and sticky bits) if the file is created."
													}
												]
											},
											"type": {
												"type": "reference",
												"name": "Mode",
												"qualifiedName": "Mode",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2223,
												"name": "FileHandle",
												"qualifiedName": "FileHandle",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1992,
							"name": "rename",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 517,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 1993,
									"name": "rename",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Renames "
											},
											{
												"kind": "code",
												"text": "`oldPath`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`newPath`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1994,
											"name": "oldPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1995,
											"name": "newPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1996,
							"name": "truncate",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 524,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 1997,
									"name": "truncate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Truncates (shortens or extends the length) of the content at "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`len`"
											},
											{
												"kind": "text",
												"text": "bytes."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1998,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 1999,
											"name": "len",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2000,
							"name": "rmdir",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 535,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2001,
									"name": "rmdir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes the directory identified by "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": ".\n\nUsing "
											},
											{
												"kind": "code",
												"text": "`fsPromises.rmdir()`"
											},
											{
												"kind": "text",
												"text": " on a file (not a directory) results in the\npromise being rejected with an "
											},
											{
												"kind": "code",
												"text": "`ENOENT`"
											},
											{
												"kind": "text",
												"text": " error on Windows and an "
											},
											{
												"kind": "code",
												"text": "`ENOTDIR`"
											},
											{
												"kind": "text",
												"text": "error on POSIX.\n\nTo get a behavior similar to the "
											},
											{
												"kind": "code",
												"text": "`rm -rf`"
											},
											{
												"kind": "text",
												"text": " Unix command, use "
											},
											{
												"kind": "code",
												"text": "`fsPromises.rm()`"
											},
											{
												"kind": "text",
												"text": " with options "
											},
											{
												"kind": "code",
												"text": "`{ recursive: true, force: true }`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2002,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2003,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3790,
												"name": "RmDirOptions",
												"qualifiedName": "RmDirOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2004,
							"name": "rm",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 541,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2005,
									"name": "rm",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes files and directories (modeled on the standard POSIX "
											},
											{
												"kind": "code",
												"text": "`rm`"
											},
											{
												"kind": "text",
												"text": " utility)."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v14.14.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2006,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2007,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3794,
												"name": "RmOptions",
												"qualifiedName": "RmOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2008,
							"name": "mkdir",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 552,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 564,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 579,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2009,
									"name": "mkdir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously creates a directory.\n\nThe optional "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument can be an integer specifying "
											},
											{
												"kind": "code",
												"text": "`mode`"
											},
											{
												"kind": "text",
												"text": " (permission\nand sticky bits), or an object with a "
											},
											{
												"kind": "code",
												"text": "`mode`"
											},
											{
												"kind": "text",
												"text": " property and a "
											},
											{
												"kind": "code",
												"text": "`recursive`"
											},
											{
												"kind": "text",
												"text": "property indicating whether parent directories should be created. Calling"
											},
											{
												"kind": "code",
												"text": "`fsPromises.mkdir()`"
											},
											{
												"kind": "text",
												"text": " when "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " is a directory\nthat exists results in a\nrejection only when "
											},
											{
												"kind": "code",
												"text": "`recursive`"
											},
											{
												"kind": "text",
												"text": " is false."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Upon success, fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " if "
													},
													{
														"kind": "code",
														"text": "`recursive`"
													},
													{
														"kind": "text",
														"text": " is "
													},
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": ", or the first directory path created if "
													},
													{
														"kind": "code",
														"text": "`recursive`"
													},
													{
														"kind": "text",
														"text": " is "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2010,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2011,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 3799,
														"name": "MakeDirectoryOptions",
														"qualifiedName": "MakeDirectoryOptions",
														"package": "@types/node"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2012,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2013,
																	"name": "recursive",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 555,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": true
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2013
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 554,
																	"character": 40
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2014,
									"name": "mkdir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous mkdir(2) - create a directory."
											}
										]
									},
									"parameters": [
										{
											"id": 2015,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2016,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Either the file mode, or an object optionally specifying the file mode and whether parent folders\nshould be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to "
													},
													{
														"kind": "code",
														"text": "`0o777`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Mode",
														"qualifiedName": "Mode",
														"package": "@types/node"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 3799,
																"name": "MakeDirectoryOptions",
																"qualifiedName": "MakeDirectoryOptions",
																"package": "@types/node"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2017,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2018,
																			"name": "recursive",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 569,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": false
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2018
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 568,
																			"character": 38
																		}
																	]
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2019,
									"name": "mkdir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous mkdir(2) - create a directory."
											}
										]
									},
									"parameters": [
										{
											"id": 2020,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2021,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Either the file mode, or an object optionally specifying the file mode and whether parent folders\nshould be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to "
													},
													{
														"kind": "code",
														"text": "`0o777`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 3799,
														"name": "MakeDirectoryOptions",
														"qualifiedName": "MakeDirectoryOptions",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"name": "Mode",
														"qualifiedName": "Mode",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2022,
							"name": "readdir",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 604,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 618,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 632,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 646,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2023,
									"name": "readdir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reads the contents of a directory.\n\nThe optional "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument can be a string specifying an encoding, or an\nobject with an "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " property specifying the character encoding to use for\nthe filenames. If the "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " is set to "
											},
											{
												"kind": "code",
												"text": "`'buffer'`"
											},
											{
												"kind": "text",
												"text": ", the filenames returned\nwill be passed as "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": " objects.\n\nIf "
											},
											{
												"kind": "code",
												"text": "`options.withFileTypes`"
											},
											{
												"kind": "text",
												"text": " is set to "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", the resolved array will contain "
											},
											{
												"kind": "code",
												"text": "`fs.Dirent`"
											},
											{
												"kind": "text",
												"text": " objects.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { readdir } from 'fs/promises';\n\ntry {\n  const files = await readdir(path);\n  for (const file of files)\n    console.log(file);\n} catch (err) {\n  console.error(err);\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with an array of the names of the files in the directory excluding "
													},
													{
														"kind": "code",
														"text": "`'.'`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`'..'`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2024,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2025,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 2332,
																"name": "ObjectEncodingOptions",
																"qualifiedName": "ObjectEncodingOptions",
																"package": "@types/node"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2026,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2027,
																			"name": "withFileTypes",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 608,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": false
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2027
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 607,
																			"character": 39
																		}
																	]
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2028,
									"name": "readdir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous readdir(3) - read a directory."
											}
										]
									},
									"parameters": [
										{
											"id": 2029,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2030,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "buffer"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2031,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2032,
																	"name": "encoding",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 622,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": "buffer"
																	}
																},
																{
																	"id": 2033,
																	"name": "withFileTypes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 623,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": false
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2032,
																		2033
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 621,
																	"character": 14
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Buffer",
													"qualifiedName": "global.Buffer",
													"package": "@types/node"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2034,
									"name": "readdir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous readdir(3) - read a directory."
											}
										]
									},
									"parameters": [
										{
											"id": 2035,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2036,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 2332,
																"name": "ObjectEncodingOptions",
																"qualifiedName": "ObjectEncodingOptions",
																"package": "@types/node"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2037,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2038,
																			"name": "withFileTypes",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 636,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": false
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2038
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 635,
																			"character": 39
																		}
																	]
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Buffer",
															"qualifiedName": "global.Buffer",
															"package": "@types/node"
														}
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2039,
									"name": "readdir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous readdir(3) - read a directory."
											}
										]
									},
									"parameters": [
										{
											"id": 2040,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2041,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If called with "
													},
													{
														"kind": "code",
														"text": "`withFileTypes: true`"
													},
													{
														"kind": "text",
														"text": " the result data will be an array of Dirent."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 2332,
														"name": "ObjectEncodingOptions",
														"qualifiedName": "ObjectEncodingOptions",
														"package": "@types/node"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2042,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2043,
																	"name": "withFileTypes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 649,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": true
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2043
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 648,
																	"character": 41
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 2405,
													"name": "Dirent",
													"qualifiedName": "Dirent",
													"package": "@types/node"
												}
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2044,
							"name": "readlink",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 663,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 669,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 675,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2045,
									"name": "readlink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reads the contents of the symbolic link referred to by "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": ". See the POSIX ["
											},
											{
												"kind": "code",
												"text": "`readlink(2)`"
											},
											{
												"kind": "text",
												"text": "](http://man7.org/linux/man-pages/man2/readlink.2.html) documentation for more detail. The promise is\nresolved with the"
											},
											{
												"kind": "code",
												"text": "`linkString`"
											},
											{
												"kind": "text",
												"text": " upon success.\n\nThe optional "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument can be a string specifying an encoding, or an\nobject with an "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " property specifying the character encoding to use for\nthe link path returned. If the "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " is set to "
											},
											{
												"kind": "code",
												"text": "`'buffer'`"
											},
											{
												"kind": "text",
												"text": ", the link path\nreturned will be passed as a "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": " object."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with the "
													},
													{
														"kind": "code",
														"text": "`linkString`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2046,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2047,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2332,
														"name": "ObjectEncodingOptions",
														"qualifiedName": "ObjectEncodingOptions",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2048,
									"name": "readlink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous readlink(2) - read value of a symbolic link."
											}
										]
									},
									"parameters": [
										{
											"id": 2049,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2050,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2329,
												"name": "BufferEncodingOption",
												"qualifiedName": "BufferEncodingOption",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2051,
									"name": "readlink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous readlink(2) - read value of a symbolic link."
											}
										]
									},
									"parameters": [
										{
											"id": 2052,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2053,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 2332,
														"name": "ObjectEncodingOptions",
														"qualifiedName": "ObjectEncodingOptions",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2054,
							"name": "symlink",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 686,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2055,
									"name": "symlink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a symbolic link.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " argument is only used on Windows platforms and can be one of "
											},
											{
												"kind": "code",
												"text": "`'dir'`"
											},
											{
												"kind": "text",
												"text": ","
											},
											{
												"kind": "code",
												"text": "`'file'`"
											},
											{
												"kind": "text",
												"text": ", or "
											},
											{
												"kind": "code",
												"text": "`'junction'`"
											},
											{
												"kind": "text",
												"text": ". Windows junction points require the destination path\nto be absolute. When using "
											},
											{
												"kind": "code",
												"text": "`'junction'`"
											},
											{
												"kind": "text",
												"text": ", the "
											},
											{
												"kind": "code",
												"text": "`target`"
											},
											{
												"kind": "text",
												"text": " argument will\nautomatically be normalized to absolute path."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2056,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2057,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2058,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2059,
							"name": "lstat",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 694,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 700,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 706,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2060,
									"name": "lstat",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Equivalent to "
											},
											{
												"kind": "code",
												"text": "`fsPromises.stat()`"
											},
											{
												"kind": "text",
												"text": " unless "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " refers to a symbolic link,\nin which case the link itself is stat-ed, not the file that it refers to.\nRefer to the POSIX ["
											},
											{
												"kind": "code",
												"text": "`lstat(2)`"
											},
											{
												"kind": "text",
												"text": "](http://man7.org/linux/man-pages/man2/lstat.2.html) document for more detail."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with the {fs.Stats} object for the given symbolic link "
													},
													{
														"kind": "code",
														"text": "`path`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2061,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2062,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 3922,
														"name": "StatOptions",
														"qualifiedName": "StatOptions",
														"package": "@types/node"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2063,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2064,
																	"name": "bigint",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 697,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": false
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2064
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 696,
																	"character": 29
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2370,
												"name": "Stats",
												"qualifiedName": "Stats",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2065,
									"name": "lstat",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2066,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2067,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 3922,
														"name": "StatOptions",
														"qualifiedName": "StatOptions",
														"package": "@types/node"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2068,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2069,
																	"name": "bigint",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 703,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": true
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2069
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 702,
																	"character": 28
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3883,
												"name": "BigIntStats",
												"qualifiedName": "BigIntStats",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2070,
									"name": "lstat",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2071,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2072,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3922,
												"name": "StatOptions",
												"qualifiedName": "StatOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2370,
														"name": "Stats",
														"qualifiedName": "Stats",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 3883,
														"name": "BigIntStats",
														"qualifiedName": "BigIntStats",
														"package": "@types/node"
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2073,
							"name": "stat",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 711,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 717,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 723,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2074,
									"name": "stat",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with the {fs.Stats} object for the given "
													},
													{
														"kind": "code",
														"text": "`path`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2075,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2076,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 3922,
														"name": "StatOptions",
														"qualifiedName": "StatOptions",
														"package": "@types/node"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2077,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2078,
																	"name": "bigint",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 714,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": false
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2078
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 713,
																	"character": 29
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2370,
												"name": "Stats",
												"qualifiedName": "Stats",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2079,
									"name": "stat",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2080,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2081,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 3922,
														"name": "StatOptions",
														"qualifiedName": "StatOptions",
														"package": "@types/node"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2082,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2083,
																	"name": "bigint",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 720,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": true
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2083
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 719,
																	"character": 28
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3883,
												"name": "BigIntStats",
												"qualifiedName": "BigIntStats",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2084,
									"name": "stat",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 2085,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2086,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3922,
												"name": "StatOptions",
												"qualifiedName": "StatOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2370,
														"name": "Stats",
														"qualifiedName": "Stats",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 3883,
														"name": "BigIntStats",
														"qualifiedName": "BigIntStats",
														"package": "@types/node"
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2087,
							"name": "link",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 729,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2088,
									"name": "link",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a new link from the "
											},
											{
												"kind": "code",
												"text": "`existingPath`"
											},
											{
												"kind": "text",
												"text": " to the "
											},
											{
												"kind": "code",
												"text": "`newPath`"
											},
											{
												"kind": "text",
												"text": ". See the POSIX ["
											},
											{
												"kind": "code",
												"text": "`link(2)`"
											},
											{
												"kind": "text",
												"text": "](http://man7.org/linux/man-pages/man2/link.2.html) documentation for more detail."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2089,
											"name": "existingPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2090,
											"name": "newPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2091,
							"name": "unlink",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 737,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2092,
									"name": "unlink",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " refers to a symbolic link, then the link is removed without affecting\nthe file or directory to which that link refers. If the "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " refers to a file\npath that is not a symbolic link, the file is deleted. See the POSIX ["
											},
											{
												"kind": "code",
												"text": "`unlink(2)`"
											},
											{
												"kind": "text",
												"text": "](http://man7.org/linux/man-pages/man2/unlink.2.html) documentation for more detail."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2093,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2094,
							"name": "chmod",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 743,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2095,
									"name": "chmod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Changes the permissions of a file."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2096,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2097,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Mode",
												"qualifiedName": "Mode",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2098,
							"name": "lchmod",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 751,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2099,
									"name": "lchmod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Changes the permissions on a symbolic link.\n\nThis method is only implemented on macOS."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Since v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2100,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2101,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Mode",
												"qualifiedName": "Mode",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2102,
							"name": "lchown",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 757,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2103,
									"name": "lchown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Changes the ownership on a symbolic link."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2104,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2105,
											"name": "uid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2106,
											"name": "gid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2107,
							"name": "lutimes",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 765,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2108,
									"name": "lutimes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Changes the access and modification times of a file in the same way as "
											},
											{
												"kind": "code",
												"text": "`fsPromises.utimes()`"
											},
											{
												"kind": "text",
												"text": ", with the difference that if the path refers to a\nsymbolic link, then the link is not dereferenced: instead, the timestamps of\nthe symbolic link itself are changed."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v14.5.0, v12.19.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2109,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2110,
											"name": "atime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "Date",
														"qualifiedName": "Date",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 2111,
											"name": "mtime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "Date",
														"qualifiedName": "Date",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2112,
							"name": "chown",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 771,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2113,
									"name": "chown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Changes the ownership of a file."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2114,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2115,
											"name": "uid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2116,
											"name": "gid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2117,
							"name": "utimes",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 783,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2118,
									"name": "utimes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Change the file system timestamps of the object referenced by "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": ".\n\nThe "
											},
											{
												"kind": "code",
												"text": "`atime`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`mtime`"
											},
											{
												"kind": "text",
												"text": " arguments follow these rules:\n\n* Values can be either numbers representing Unix epoch time, "
											},
											{
												"kind": "code",
												"text": "`Date`"
											},
											{
												"kind": "text",
												"text": "s, or a\nnumeric string like "
											},
											{
												"kind": "code",
												"text": "`'123456789.0'`"
											},
											{
												"kind": "text",
												"text": ".\n* If the value can not be converted to a number, or is "
											},
											{
												"kind": "code",
												"text": "`NaN`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`Infinity`"
											},
											{
												"kind": "text",
												"text": " or"
											},
											{
												"kind": "code",
												"text": "`-Infinity`"
											},
											{
												"kind": "text",
												"text": ", an "
											},
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " will be thrown."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2119,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2120,
											"name": "atime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "Date",
														"qualifiedName": "Date",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 2121,
											"name": "mtime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "Date",
														"qualifiedName": "Date",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2122,
							"name": "realpath",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 800,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 806,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 812,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2123,
									"name": "realpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Determines the actual location of "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " using the same semantics as the"
											},
											{
												"kind": "code",
												"text": "`fs.realpath.native()`"
											},
											{
												"kind": "text",
												"text": " function.\n\nOnly paths that can be converted to UTF8 strings are supported.\n\nThe optional "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument can be a string specifying an encoding, or an\nobject with an "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " property specifying the character encoding to use for\nthe path. If the "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " is set to "
											},
											{
												"kind": "code",
												"text": "`'buffer'`"
											},
											{
												"kind": "text",
												"text": ", the path returned will be\npassed as a "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": " object.\n\nOn Linux, when Node.js is linked against musl libc, the procfs file system must\nbe mounted on "
											},
											{
												"kind": "code",
												"text": "`/proc`"
											},
											{
												"kind": "text",
												"text": " in order for this function to work. Glibc does not have\nthis restriction."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with the resolved path upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2124,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2125,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2332,
														"name": "ObjectEncodingOptions",
														"qualifiedName": "ObjectEncodingOptions",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2126,
									"name": "realpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous realpath(3) - return the canonicalized absolute pathname."
											}
										]
									},
									"parameters": [
										{
											"id": 2127,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2128,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2329,
												"name": "BufferEncodingOption",
												"qualifiedName": "BufferEncodingOption",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2129,
									"name": "realpath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronous realpath(3) - return the canonicalized absolute pathname."
											}
										]
									},
									"parameters": [
										{
											"id": 2130,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2131,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2332,
														"name": "ObjectEncodingOptions",
														"qualifiedName": "ObjectEncodingOptions",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2132,
							"name": "mkdtemp",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 840,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 846,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 852,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2133,
									"name": "mkdtemp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a unique temporary directory. A unique directory name is generated by\nappending six random characters to the end of the provided "
											},
											{
												"kind": "code",
												"text": "`prefix`"
											},
											{
												"kind": "text",
												"text": ". Due to\nplatform inconsistencies, avoid trailing "
											},
											{
												"kind": "code",
												"text": "`X`"
											},
											{
												"kind": "text",
												"text": " characters in "
											},
											{
												"kind": "code",
												"text": "`prefix`"
											},
											{
												"kind": "text",
												"text": ". Some\nplatforms, notably the BSDs, can return more than six random characters, and\nreplace trailing "
											},
											{
												"kind": "code",
												"text": "`X`"
											},
											{
												"kind": "text",
												"text": " characters in "
											},
											{
												"kind": "code",
												"text": "`prefix`"
											},
											{
												"kind": "text",
												"text": " with random characters.\n\nThe optional "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument can be a string specifying an encoding, or an\nobject with an "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " property specifying the character encoding to use.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { mkdtemp } from 'fs/promises';\n\ntry {\n  await mkdtemp(path.join(os.tmpdir(), 'foo-'));\n} catch (err) {\n  console.error(err);\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe "
											},
											{
												"kind": "code",
												"text": "`fsPromises.mkdtemp()`"
											},
											{
												"kind": "text",
												"text": " method will append the six randomly selected\ncharacters directly to the "
											},
											{
												"kind": "code",
												"text": "`prefix`"
											},
											{
												"kind": "text",
												"text": " string. For instance, given a directory"
											},
											{
												"kind": "code",
												"text": "`/tmp`"
											},
											{
												"kind": "text",
												"text": ", if the intention is to create a temporary directory _within_"
											},
											{
												"kind": "code",
												"text": "`/tmp`"
											},
											{
												"kind": "text",
												"text": ", the"
											},
											{
												"kind": "code",
												"text": "`prefix`"
											},
											{
												"kind": "text",
												"text": " must end with a trailing\nplatform-specific path separator\n("
											},
											{
												"kind": "code",
												"text": "`require('path').sep`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with a string containing the filesystem path of the newly created temporary directory."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2134,
											"name": "prefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2135,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2332,
														"name": "ObjectEncodingOptions",
														"qualifiedName": "ObjectEncodingOptions",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2136,
									"name": "mkdtemp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously creates a unique temporary directory.\nGenerates six random characters to be appended behind a required "
											},
											{
												"kind": "code",
												"text": "`prefix`"
											},
											{
												"kind": "text",
												"text": " to create a unique temporary directory."
											}
										]
									},
									"parameters": [
										{
											"id": 2137,
											"name": "prefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2138,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2329,
												"name": "BufferEncodingOption",
												"qualifiedName": "BufferEncodingOption",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2139,
									"name": "mkdtemp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously creates a unique temporary directory.\nGenerates six random characters to be appended behind a required "
											},
											{
												"kind": "code",
												"text": "`prefix`"
											},
											{
												"kind": "text",
												"text": " to create a unique temporary directory."
											}
										]
									},
									"parameters": [
										{
											"id": 2140,
											"name": "prefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2141,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2332,
														"name": "ObjectEncodingOptions",
														"qualifiedName": "ObjectEncodingOptions",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2142,
							"name": "writeFile",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 903,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2143,
									"name": "writeFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously writes data to a file, replacing the file if it already exists."
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " can be a string, a buffer, an\n[AsyncIterable](https://tc39.github.io/ecma262/#sec-asynciterable-interface) or\n[Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol) object.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " option is ignored if "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " is a buffer.\n\nIf "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " is a string, then it specifies the encoding.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`mode`"
											},
											{
												"kind": "text",
												"text": " option only affects the newly created file. See "
											},
											{
												"kind": "code",
												"text": "`fs.open()`"
											},
											{
												"kind": "text",
												"text": " for more details.\n\nAny specified "
											},
											{
												"kind": "code",
												"text": "`FileHandle`"
											},
											{
												"kind": "text",
												"text": " has to support writing.\n\nIt is unsafe to use "
											},
											{
												"kind": "code",
												"text": "`fsPromises.writeFile()`"
											},
											{
												"kind": "text",
												"text": " multiple times on the same file\nwithout waiting for the promise to be settled.\n\nSimilarly to "
											},
											{
												"kind": "code",
												"text": "`fsPromises.readFile`"
											},
											{
												"kind": "text",
												"text": " \\- "
											},
											{
												"kind": "code",
												"text": "`fsPromises.writeFile`"
											},
											{
												"kind": "text",
												"text": " is a convenience\nmethod that performs multiple "
											},
											{
												"kind": "code",
												"text": "`write`"
											},
											{
												"kind": "text",
												"text": " calls internally to write the buffer\npassed to it. For performance sensitive code consider using "
											},
											{
												"kind": "code",
												"text": "`fs.createWriteStream()`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`filehandle.createWriteStream()`"
											},
											{
												"kind": "text",
												"text": ".\n\nIt is possible to use an "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " to cancel an "
											},
											{
												"kind": "code",
												"text": "`fsPromises.writeFile()`"
											},
											{
												"kind": "text",
												"text": ".\nCancelation is \"best effort\", and some amount of data is likely still\nto be written.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { writeFile } from 'fs/promises';\nimport { Buffer } from 'buffer';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const data = new Uint8Array(Buffer.from('Hello Node.js'));\n  const promise = writeFile('message.txt', data, { signal });\n\n  // Abort the request before the promise settles.\n  controller.abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering "
											},
											{
												"kind": "code",
												"text": "`fs.writeFile`"
											},
											{
												"kind": "text",
												"text": " performs."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2144,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "filename or "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2322,
														"name": "PathLike",
														"qualifiedName": "PathLike",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2223,
														"name": "FileHandle",
														"qualifiedName": "FileHandle",
														"package": "@types/node"
													}
												]
											}
										},
										{
											"id": 2145,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Stream",
														"qualifiedName": "internal.Stream",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"name": "ArrayBufferView",
														"qualifiedName": "NodeJS.ArrayBufferView",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"name": "ArrayBufferView",
																		"qualifiedName": "NodeJS.ArrayBufferView",
																		"package": "@types/node"
																	}
																]
															}
														],
														"name": "Iterable",
														"qualifiedName": "Iterable",
														"package": "typescript"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"name": "ArrayBufferView",
																		"qualifiedName": "NodeJS.ArrayBufferView",
																		"package": "@types/node"
																	}
																]
															}
														],
														"name": "AsyncIterable",
														"qualifiedName": "AsyncIterable",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 2146,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 2332,
																"name": "ObjectEncodingOptions",
																"qualifiedName": "ObjectEncodingOptions",
																"package": "@types/node"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2147,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2148,
																			"name": "mode",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 908,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Mode",
																				"qualifiedName": "Mode",
																				"package": "@types/node"
																			}
																		},
																		{
																			"id": 2149,
																			"name": "flag",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 909,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 2335,
																				"name": "OpenMode",
																				"qualifiedName": "OpenMode",
																				"package": "@types/node"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2148,
																				2149
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 907,
																			"character": 39
																		}
																	]
																}
															},
															{
																"type": "reference",
																"name": "Abortable",
																"qualifiedName": "EventEmitter.Abortable",
																"package": "@types/node"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2150,
							"name": "appendFile",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 928,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2151,
									"name": "appendFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously append data to a file, creating the file if it does not yet\nexist. "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " can be a string or a "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": ".\n\nIf "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " is a string, then it specifies the "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": ".\n\nThe "
											},
											{
												"kind": "code",
												"text": "`mode`"
											},
											{
												"kind": "text",
												"text": " option only affects the newly created file. See "
											},
											{
												"kind": "code",
												"text": "`fs.open()`"
											},
											{
												"kind": "text",
												"text": " for more details.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " may be specified as a "
											},
											{
												"kind": "code",
												"text": "`FileHandle`"
											},
											{
												"kind": "text",
												"text": " that has been opened\nfor appending (using "
											},
											{
												"kind": "code",
												"text": "`fsPromises.open()`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2152,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "filename or {FileHandle}"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2322,
														"name": "PathLike",
														"qualifiedName": "PathLike",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2223,
														"name": "FileHandle",
														"qualifiedName": "FileHandle",
														"package": "@types/node"
													}
												]
											}
										},
										{
											"id": 2153,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Uint8Array",
														"qualifiedName": "Uint8Array",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 2154,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 2332,
																"name": "ObjectEncodingOptions",
																"qualifiedName": "ObjectEncodingOptions",
																"package": "@types/node"
															},
															{
																"type": "reference",
																"id": 2198,
																"name": "FlagAndOpenMode",
																"qualifiedName": "FlagAndOpenMode",
																"package": "@types/node"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2155,
							"name": "readFile",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 971,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 987,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 1003,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2156,
									"name": "readFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously reads the entire contents of a file.\n\nIf no encoding is specified (using "
											},
											{
												"kind": "code",
												"text": "`options.encoding`"
											},
											{
												"kind": "text",
												"text": "), the data is returned\nas a "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": " object. Otherwise, the data will be a string.\n\nIf "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " is a string, then it specifies the encoding.\n\nWhen the "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " is a directory, the behavior of "
											},
											{
												"kind": "code",
												"text": "`fsPromises.readFile()`"
											},
											{
												"kind": "text",
												"text": " is\nplatform-specific. On macOS, Linux, and Windows, the promise will be rejected\nwith an error. On FreeBSD, a representation of the directory's contents will be\nreturned.\n\nIt is possible to abort an ongoing "
											},
											{
												"kind": "code",
												"text": "`readFile`"
											},
											{
												"kind": "text",
												"text": " using an "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": ". If a\nrequest is aborted the promise returned is rejected with an "
											},
											{
												"kind": "code",
												"text": "`AbortError`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { readFile } from 'fs/promises';\n\ntry {\n  const controller = new AbortController();\n  const { signal } = controller;\n  const promise = readFile(fileName, { signal });\n\n  // Abort the request before the promise settles.\n  controller.abort();\n\n  await promise;\n} catch (err) {\n  // When a request is aborted - err is an AbortError\n  console.error(err);\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nAborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering "
											},
											{
												"kind": "code",
												"text": "`fs.readFile`"
											},
											{
												"kind": "text",
												"text": " performs.\n\nAny specified "
											},
											{
												"kind": "code",
												"text": "`FileHandle`"
											},
											{
												"kind": "text",
												"text": " has to support reading."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with the contents of the file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2157,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "filename or "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2322,
														"name": "PathLike",
														"qualifiedName": "PathLike",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2223,
														"name": "FileHandle",
														"qualifiedName": "FileHandle",
														"package": "@types/node"
													}
												]
											}
										},
										{
											"id": 2158,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2159,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 2160,
																	"name": "encoding",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 975,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 2161,
																	"name": "flag",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 976,
																			"character": 18
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 2335,
																		"name": "OpenMode",
																		"qualifiedName": "OpenMode",
																		"package": "@types/node"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2160,
																		2161
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/node/fs/promises.d.ts",
																	"line": 974,
																	"character": 15
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Abortable",
														"qualifiedName": "EventEmitter.Abortable",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2162,
									"name": "readFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously reads the entire contents of a file."
											}
										]
									},
									"parameters": [
										{
											"id": 2163,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol.\nIf a "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " is provided, the underlying file will _not_ be closed automatically."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2322,
														"name": "PathLike",
														"qualifiedName": "PathLike",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2223,
														"name": "FileHandle",
														"qualifiedName": "FileHandle",
														"package": "@types/node"
													}
												]
											}
										},
										{
											"id": 2164,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that may contain an optional flag.\nIf a flag is not provided, it defaults to "
													},
													{
														"kind": "code",
														"text": "`'r'`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 2165,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2166,
																			"name": "encoding",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 991,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "BufferEncoding",
																				"qualifiedName": "global.BufferEncoding",
																				"package": "@types/node"
																			}
																		},
																		{
																			"id": 2167,
																			"name": "flag",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 992,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 2335,
																				"name": "OpenMode",
																				"qualifiedName": "OpenMode",
																				"package": "@types/node"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2166,
																				2167
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 990,
																			"character": 15
																		}
																	]
																}
															},
															{
																"type": "reference",
																"name": "Abortable",
																"qualifiedName": "EventEmitter.Abortable",
																"package": "@types/node"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 2168,
									"name": "readFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously reads the entire contents of a file."
											}
										]
									},
									"parameters": [
										{
											"id": 2169,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol.\nIf a "
													},
													{
														"kind": "code",
														"text": "`FileHandle`"
													},
													{
														"kind": "text",
														"text": " is provided, the underlying file will _not_ be closed automatically."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 2322,
														"name": "PathLike",
														"qualifiedName": "PathLike",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 2223,
														"name": "FileHandle",
														"qualifiedName": "FileHandle",
														"package": "@types/node"
													}
												]
											}
										},
										{
											"id": 2170,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that may contain an optional flag.\nIf a flag is not provided, it defaults to "
													},
													{
														"kind": "code",
														"text": "`'r'`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 2332,
																"name": "ObjectEncodingOptions",
																"qualifiedName": "ObjectEncodingOptions",
																"package": "@types/node"
															},
															{
																"type": "reference",
																"name": "Abortable",
																"qualifiedName": "EventEmitter.Abortable",
																"package": "@types/node"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2171,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2172,
																			"name": "flag",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 1008,
																					"character": 22
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 2335,
																				"name": "OpenMode",
																				"qualifiedName": "OpenMode",
																				"package": "@types/node"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2172
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 1007,
																			"character": 30
																		}
																	]
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												]
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2173,
							"name": "opendir",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 1041,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2174,
									"name": "opendir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously open a directory for iterative scanning. See the POSIX ["
											},
											{
												"kind": "code",
												"text": "`opendir(3)`"
											},
											{
												"kind": "text",
												"text": "](http://man7.org/linux/man-pages/man3/opendir.3.html) documentation for more detail.\n\nCreates an "
											},
											{
												"kind": "code",
												"text": "`fs.Dir`"
											},
											{
												"kind": "text",
												"text": ", which contains all further functions for reading from\nand cleaning up the directory.\n\nThe "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " option sets the encoding for the "
											},
											{
												"kind": "code",
												"text": "`path`"
											},
											{
												"kind": "text",
												"text": " while opening the\ndirectory and subsequent read operations.\n\nExample using async iteration:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { opendir } from 'fs/promises';\n\ntry {\n  const dir = await opendir('./');\n  for await (const dirent of dir)\n    console.log(dirent.name);\n} catch (err) {\n  console.error(err);\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nWhen using the async iterator, the "
											},
											{
												"kind": "code",
												"text": "`fs.Dir`"
											},
											{
												"kind": "text",
												"text": " object will be automatically\nclosed after the iterator exits."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v12.12.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with an {fs.Dir}."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2175,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2176,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3880,
												"name": "OpenDirOptions",
												"qualifiedName": "OpenDirOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2423,
												"name": "Dir",
												"qualifiedName": "Dir",
												"package": "@types/node"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2177,
							"name": "watch",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 1072,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 1088,
									"character": 13
								},
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 1097,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2178,
									"name": "watch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns an async iterator that watches for changes on "
											},
											{
												"kind": "code",
												"text": "`filename`"
											},
											{
												"kind": "text",
												"text": ", where "
											},
											{
												"kind": "code",
												"text": "`filename`"
											},
											{
												"kind": "text",
												"text": "is either a file or a directory.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst { watch } = require('fs/promises');\n\nconst ac = new AbortController();\nconst { signal } = ac;\nsetTimeout(() => ac.abort(), 10000);\n\n(async () => {\n  try {\n    const watcher = watch(__filename, { signal });\n    for await (const event of watcher)\n      console.log(event);\n  } catch (err) {\n    if (err.name === 'AbortError')\n      return;\n    throw err;\n  }\n})();\n```"
											},
											{
												"kind": "text",
												"text": "\n\nOn most platforms, "
											},
											{
												"kind": "code",
												"text": "`'rename'`"
											},
											{
												"kind": "text",
												"text": " is emitted whenever a filename appears or\ndisappears in the directory.\n\nAll the "
											},
											{
												"kind": "code",
												"text": "`caveats`"
											},
											{
												"kind": "text",
												"text": " for "
											},
											{
												"kind": "code",
												"text": "`fs.watch()`"
											},
											{
												"kind": "text",
												"text": " also apply to "
											},
											{
												"kind": "code",
												"text": "`fsPromises.watch()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v15.9.0, v14.18.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "of objects with the properties:"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 2179,
											"name": "filename",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2180,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "buffer"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 3817,
																"name": "WatchOptions",
																"qualifiedName": "WatchOptions",
																"package": "@types/node"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2181,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExternal": true
																	},
																	"children": [
																		{
																			"id": 2182,
																			"name": "encoding",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isExternal": true
																			},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/fs/promises.d.ts",
																					"line": 1076,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": "buffer"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2182
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/@types/node/fs/promises.d.ts",
																			"line": 1075,
																			"character": 30
																		}
																	]
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2194,
												"typeArguments": [
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												],
												"name": "FileChangeInfo",
												"qualifiedName": "FileChangeInfo",
												"package": "@types/node"
											}
										],
										"name": "AsyncIterable",
										"qualifiedName": "AsyncIterable",
										"package": "typescript"
									}
								},
								{
									"id": 2183,
									"name": "watch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Watch for changes on "
											},
											{
												"kind": "code",
												"text": "`filename`"
											},
											{
												"kind": "text",
												"text": ", where "
											},
											{
												"kind": "code",
												"text": "`filename`"
											},
											{
												"kind": "text",
												"text": " is either a file or a directory, returning an "
											},
											{
												"kind": "code",
												"text": "`FSWatcher`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"parameters": [
										{
											"id": 2184,
											"name": "filename",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file or directory. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2185,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Either the encoding for the filename provided to the listener, or an object optionally specifying encoding, persistent, and recursive options.\nIf "
													},
													{
														"kind": "code",
														"text": "`encoding`"
													},
													{
														"kind": "text",
														"text": " is not supplied, the default of "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used.\nIf "
													},
													{
														"kind": "code",
														"text": "`persistent`"
													},
													{
														"kind": "text",
														"text": " is not supplied, the default of "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": " is used.\nIf "
													},
													{
														"kind": "code",
														"text": "`recursive`"
													},
													{
														"kind": "text",
														"text": " is not supplied, the default of "
													},
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BufferEncoding",
														"qualifiedName": "global.BufferEncoding",
														"package": "@types/node"
													},
													{
														"type": "reference",
														"id": 3817,
														"name": "WatchOptions",
														"qualifiedName": "WatchOptions",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2194,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "FileChangeInfo",
												"qualifiedName": "FileChangeInfo",
												"package": "@types/node"
											}
										],
										"name": "AsyncIterable",
										"qualifiedName": "AsyncIterable",
										"package": "typescript"
									}
								},
								{
									"id": 2186,
									"name": "watch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Watch for changes on "
											},
											{
												"kind": "code",
												"text": "`filename`"
											},
											{
												"kind": "text",
												"text": ", where "
											},
											{
												"kind": "code",
												"text": "`filename`"
											},
											{
												"kind": "text",
												"text": " is either a file or a directory, returning an "
											},
											{
												"kind": "code",
												"text": "`FSWatcher`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"parameters": [
										{
											"id": 2187,
											"name": "filename",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A path to a file or directory. If a URL is provided, it must use the "
													},
													{
														"kind": "code",
														"text": "`file:`"
													},
													{
														"kind": "text",
														"text": " protocol."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 2322,
												"name": "PathLike",
												"qualifiedName": "PathLike",
												"package": "@types/node"
											}
										},
										{
											"id": 2188,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Either the encoding for the filename provided to the listener, or an object optionally specifying encoding, persistent, and recursive options.\nIf "
													},
													{
														"kind": "code",
														"text": "`encoding`"
													},
													{
														"kind": "text",
														"text": " is not supplied, the default of "
													},
													{
														"kind": "code",
														"text": "`'utf8'`"
													},
													{
														"kind": "text",
														"text": " is used.\nIf "
													},
													{
														"kind": "code",
														"text": "`persistent`"
													},
													{
														"kind": "text",
														"text": " is not supplied, the default of "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": " is used.\nIf "
													},
													{
														"kind": "code",
														"text": "`recursive`"
													},
													{
														"kind": "text",
														"text": " is not supplied, the default of "
													},
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": " is used."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 3817,
														"name": "WatchOptions",
														"qualifiedName": "WatchOptions",
														"package": "@types/node"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2194,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "FileChangeInfo",
														"qualifiedName": "FileChangeInfo",
														"package": "@types/node"
													}
												],
												"name": "AsyncIterable",
												"qualifiedName": "AsyncIterable",
												"package": "typescript"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2194,
														"typeArguments": [
															{
																"type": "reference",
																"name": "Buffer",
																"qualifiedName": "global.Buffer",
																"package": "@types/node"
															}
														],
														"name": "FileChangeInfo",
														"qualifiedName": "FileChangeInfo",
														"package": "@types/node"
													}
												],
												"name": "AsyncIterable",
												"qualifiedName": "AsyncIterable",
												"package": "typescript"
											}
										]
									}
								}
							]
						},
						{
							"id": 2189,
							"name": "cp",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/fs/promises.d.ts",
									"line": 1110,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2190,
									"name": "cp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Asynchronously copies the entire directory structure from "
											},
											{
												"kind": "code",
												"text": "`src`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`dest`"
											},
											{
												"kind": "text",
												"text": ",\nincluding subdirectories and files.\n\nWhen copying a directory to another directory, globs are not supported and\nbehavior is similar to "
											},
											{
												"kind": "code",
												"text": "`cp dir1/ dir2/`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v16.7.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Fulfills with "
													},
													{
														"kind": "code",
														"text": "`undefined`"
													},
													{
														"kind": "text",
														"text": " upon success."
													}
												]
											}
										],
										"modifierTags": [
											"@experimental"
										]
									},
									"parameters": [
										{
											"id": 2191,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "URL",
														"qualifiedName": "global.URL",
														"package": "@types/node"
													}
												]
											}
										},
										{
											"id": 2192,
											"name": "destination",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "URL",
														"qualifiedName": "global.URL",
														"package": "@types/node"
													}
												]
											}
										},
										{
											"id": 2193,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "CopyOptions",
												"qualifiedName": "CopyOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								2194,
								2198,
								2201,
								2205,
								2211,
								2218,
								2223
							]
						},
						{
							"title": "Functions",
							"children": [
								1978,
								1982,
								1987,
								1992,
								1996,
								2000,
								2004,
								2008,
								2022,
								2044,
								2054,
								2059,
								2073,
								2087,
								2091,
								2094,
								2098,
								2102,
								2107,
								2112,
								2117,
								2122,
								2132,
								2142,
								2150,
								2155,
								2173,
								2177,
								2189
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/node/fs/promises.d.ts",
							"line": 1112,
							"character": 0
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						408,
						428,
						433,
						453,
						473,
						478,
						487,
						490,
						503,
						508,
						525,
						529,
						538,
						547,
						550,
						553,
						573,
						578,
						597,
						616,
						620,
						624,
						637,
						640,
						660,
						680,
						685,
						690,
						710,
						730,
						735,
						740,
						749,
						752,
						1506,
						763,
						1517,
						767,
						787,
						792,
						1521,
						801,
						1530,
						804,
						814,
						817,
						834,
						862,
						873,
						886,
						895,
						906,
						919,
						927,
						937,
						946,
						963,
						988,
						1001,
						1012,
						1022,
						1039,
						1043,
						1065,
						1084,
						1108,
						1150,
						1182,
						1192,
						1267,
						1278,
						1287,
						1297,
						1307,
						1327,
						1344,
						1353,
						1378,
						1452,
						1472,
						1496,
						1592,
						1596,
						1600,
						1604,
						1609,
						1614,
						1619,
						1631,
						1636,
						1640,
						1644,
						1654,
						3720,
						1658,
						3755,
						1672,
						1676,
						1681,
						1691,
						1712,
						1715,
						1719,
						1723,
						1733,
						1756,
						1759,
						1764,
						1769,
						1774,
						1777,
						1789,
						1800,
						1818,
						1823,
						1828,
						1856,
						1864,
						1882,
						1893,
						1896,
						1900,
						1904,
						1908,
						1911,
						1916,
						1921,
						1947,
						1952,
						1956,
						1972
					]
				},
				{
					"title": "Namespaces",
					"children": [
						1217,
						1625,
						1649,
						1701,
						1889,
						3829,
						1941,
						1977
					]
				},
				{
					"title": "Interfaces",
					"children": [
						1533,
						1536,
						1552,
						1559,
						1566,
						1568,
						1571,
						1577,
						1581,
						1589,
						2332,
						2336,
						2445,
						2522,
						3660,
						3790,
						3794,
						3799,
						3803,
						3807,
						3813,
						3817,
						3874,
						3877,
						3880,
						3883,
						3920,
						3922,
						3924,
						3927
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						1539,
						1544,
						1549,
						1550,
						1551,
						2322,
						2323,
						2324,
						2325,
						2329,
						2334,
						2335,
						3802,
						3822,
						3823
					]
				},
				{
					"title": "Classes",
					"children": [
						2370,
						2405,
						2423,
						2687,
						3175
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@types/fs-extra/index.d.ts",
					"line": 17,
					"character": 0
				}
			]
		},
		{
			"id": 4167,
			"name": "figures",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/figures/index.d.ts",
					"line": 63,
					"character": 14
				}
			],
			"signatures": [
				{
					"id": 4168,
					"name": "figures",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Replace Unicode symbols depending on the OS."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The input with replaced fallback Unicode symbols on Windows."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```\nimport figures = require('figures');\n\nconsole.log(figures('✔︎ check'));\n// On non-Windows OSes:  ✔︎ check\n// On Windows:           √ check\n\nconsole.log(figures.tick);\n// On non-Windows OSes:  ✔︎\n// On Windows:           √\n```"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 4169,
							"name": "string",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "String where the Unicode symbols will be replaced with fallback symbols depending on the OS."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1,
			"name": "Command",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 82,
					"name": "argv",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.argv"
					}
				},
				{
					"id": 83,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Config",
						"qualifiedName": "Config",
						"package": "@oclif/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.config"
					}
				},
				{
					"id": 2,
					"name": "_base",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 11,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand._base"
					}
				},
				{
					"id": 3,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A command ID, used mostly in error or verbose reporting."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 13,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.id"
					}
				},
				{
					"id": 4,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tweet-sized description for your class, used in a parent-commands\nsub-command listing and as the header for the command help."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 18,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.summary"
					}
				},
				{
					"id": 5,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A full description of how to use the command.\n\nIf no summary, the first line of the description will be used as the summary."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.description"
					}
				},
				{
					"id": 6,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hide the command from help?"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.hidden"
					}
				},
				{
					"id": 7,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mark the command as a given state (e.g. beta) in help?"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 28,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.state"
					}
				},
				{
					"id": 8,
					"name": "usage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An override string (or strings) for the default usage documentation."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 32,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.usage"
					}
				},
				{
					"id": 9,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 33,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.help"
					}
				},
				{
					"id": 10,
					"name": "aliases",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of aliases for this command."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 35,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.aliases"
					}
				},
				{
					"id": 11,
					"name": "strict",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When set to false, allows a variable amount of arguments"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 37,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.strict"
					}
				},
				{
					"id": 12,
					"name": "parse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 38,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.parse"
					}
				},
				{
					"id": 13,
					"name": "args",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An order-dependent array of arguments for the command"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 40,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "ArgInput",
						"qualifiedName": "ArgInput",
						"package": "@oclif/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.args"
					}
				},
				{
					"id": 14,
					"name": "plugin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 41,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "Plugin",
						"qualifiedName": "Plugin",
						"package": "@oclif/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.plugin"
					}
				},
				{
					"id": 15,
					"name": "examples",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of examples to show at the end of the command's help.\n\nIF only a string is provided, it will try to look for a line that starts\nwith the cmd.bin as the example command and the rest as the description.\nIf found, the command will be formatted appropriately.\n\n"
							},
							{
								"kind": "code",
								"text": "```\nEXAMPLES:\n  A description of a particular use case.\n\n    $ <%= config.bin => command flags\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 56,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Example",
							"qualifiedName": "Example",
							"package": "@oclif/core"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.examples"
					}
				},
				{
					"id": 16,
					"name": "parserOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 57,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 17,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.parserOptions"
					}
				},
				{
					"id": 18,
					"name": "_enableJsonFlag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 58,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand._enableJsonFlag"
					}
				},
				{
					"id": 19,
					"name": "enableJsonFlag",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 59,
							"character": 15
						},
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 60,
							"character": 15
						}
					],
					"getSignature": {
						"id": 20,
						"name": "enableJsonFlag",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.enableJsonFlag"
						}
					},
					"setSignature": {
						"id": 21,
						"name": "enableJsonFlag",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 22,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.enableJsonFlag"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.enableJsonFlag"
					}
				},
				{
					"id": 23,
					"name": "run",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 67,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/command.d.ts",
									"line": 88,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 25,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "instantiate and run the command"
											}
										]
									},
									"parameters": [
										{
											"id": 26,
											"name": "argv",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "argv"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 27,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "LoadOptions",
												"qualifiedName": "LoadOptions",
												"package": "@oclif/core"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "PromiseLike",
										"qualifiedName": "PromiseLike",
										"package": "typescript"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.run"
					}
				},
				{
					"id": 28,
					"name": "_globalFlags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 68,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand._globalFlags"
					}
				},
				{
					"id": 29,
					"name": "globalFlags",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 69,
							"character": 15
						},
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 70,
							"character": 15
						}
					],
					"getSignature": {
						"id": 30,
						"name": "globalFlags",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "object"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.globalFlags"
						}
					},
					"setSignature": {
						"id": 31,
						"name": "globalFlags",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 32,
								"name": "flags",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.globalFlags"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.globalFlags"
					}
				},
				{
					"id": 33,
					"name": "_flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hash of flags for the command"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 72,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand._flags"
					}
				},
				{
					"id": 34,
					"name": "flags",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 73,
							"character": 15
						},
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 74,
							"character": 15
						}
					],
					"getSignature": {
						"id": 35,
						"name": "flags",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "object"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.flags"
						}
					},
					"setSignature": {
						"id": 36,
						"name": "flags",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 37,
								"name": "flags",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.flags"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.flags"
					}
				},
				{
					"id": 84,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 75,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.id"
					}
				},
				{
					"id": 85,
					"name": "debug",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 76,
							"character": 14
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 86,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
									"line": 76,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 87,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 88,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.debug"
					}
				},
				{
					"id": 38,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 39,
							"name": "new Command",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 40,
									"name": "Ctx",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 41,
									"name": "Config",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 317,
										"typeArguments": [
											{
												"type": "reference",
												"id": 41,
												"name": "Config"
											}
										],
										"name": "BaseConfig"
									},
									"default": {
										"type": "reference",
										"id": 317,
										"name": "BaseConfig"
									}
								}
							],
							"parameters": [
								{
									"id": 42,
									"name": "argv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 43,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Config",
										"qualifiedName": "Config",
										"package": "@oclif/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"typeArguments": [
									{
										"type": "reference",
										"id": 40,
										"name": "Ctx"
									},
									{
										"type": "reference",
										"id": 41,
										"name": "Config"
									}
								],
								"name": "Command"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.constructor"
					}
				},
				{
					"id": 89,
					"name": "ctor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 78,
							"character": 8
						}
					],
					"getSignature": {
						"id": 90,
						"name": "ctor",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "default",
								"qualifiedName": "Command",
								"package": "@oclif/core"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.ctor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.ctor"
					}
				},
				{
					"id": 91,
					"name": "_run",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 92,
							"name": "_run",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 93,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 93,
										"name": "T",
										"qualifiedName": "T",
										"package": "@oclif/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand._run"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand._run"
					}
				},
				{
					"id": 94,
					"name": "warn",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 81,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 95,
							"name": "warn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 96,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Error",
										"qualifiedName": "Error",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.warn"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.warn"
					}
				},
				{
					"id": 97,
					"name": "error",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 82,
							"character": 4
						},
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 86,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 98,
							"name": "error",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 99,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 100,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 101,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 102,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
																	"line": 83,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 103,
															"name": "exit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
																	"line": 84,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																102,
																103
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
															"line": 82,
															"character": 42
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "PrettyPrintableError",
												"qualifiedName": "PrettyPrintableError",
												"package": "@oclif/core"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.error"
							}
						},
						{
							"id": 104,
							"name": "error",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 105,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 106,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 107,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 108,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
																	"line": 87,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 109,
															"name": "exit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
																	"line": 88,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																108,
																109
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
															"line": 86,
															"character": 43
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "PrettyPrintableError",
												"qualifiedName": "PrettyPrintableError",
												"package": "@oclif/core"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.error"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.error"
					}
				},
				{
					"id": 110,
					"name": "log",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 90,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 111,
							"name": "log",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 112,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 113,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.log"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.log"
					}
				},
				{
					"id": 114,
					"name": "logToStderr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 91,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 115,
							"name": "logToStderr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 116,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 117,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.logToStderr"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.logToStderr"
					}
				},
				{
					"id": 118,
					"name": "jsonEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 119,
							"name": "jsonEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.jsonEnabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.jsonEnabled"
					}
				},
				{
					"id": 120,
					"name": "parse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 98,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "parse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 122,
									"name": "F",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 123,
									"name": "G",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 127,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 124,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
													"line": 98,
													"character": 36
												}
											],
											"indexSignature": {
												"id": 125,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 126,
														"name": "name",
														"kind": 32768,
														"flags": {
															"isExternal": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								}
							],
							"parameters": [
								{
									"id": 128,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 122,
												"name": "F",
												"qualifiedName": "F",
												"package": "@oclif/core"
											},
											{
												"type": "reference",
												"id": 123,
												"name": "G",
												"qualifiedName": "G",
												"package": "@oclif/core"
											}
										],
										"name": "Input",
										"qualifiedName": "Input",
										"package": "@oclif/core"
									}
								},
								{
									"id": 129,
									"name": "argv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 122,
												"name": "F",
												"qualifiedName": "F",
												"package": "@oclif/core"
											},
											{
												"type": "reference",
												"id": 123,
												"name": "G",
												"qualifiedName": "G",
												"package": "@oclif/core"
											},
											{
												"type": "reference",
												"id": 127,
												"name": "A",
												"qualifiedName": "A",
												"package": "@oclif/core"
											}
										],
										"name": "ParserOutput",
										"qualifiedName": "ParserOutput",
										"package": "@oclif/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.parse"
					}
				},
				{
					"id": 130,
					"name": "toSuccessJson",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 105,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 131,
							"name": "toSuccessJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 132,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.toSuccessJson"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.toSuccessJson"
					}
				},
				{
					"id": 133,
					"name": "toErrorJson",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 106,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 134,
							"name": "toErrorJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 135,
									"name": "err",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseCommand.toErrorJson"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "BaseCommand.toErrorJson"
					}
				},
				{
					"id": 44,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 4091,
						"name": "Logger"
					}
				},
				{
					"id": 45,
					"name": "tasks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 15,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 40,
								"name": "Ctx"
							},
							{
								"type": "literal",
								"value": "default"
							},
							{
								"type": "literal",
								"value": "verbose"
							}
						],
						"name": "Manager",
						"qualifiedName": "Manager",
						"package": "listr2"
					}
				},
				{
					"id": 46,
					"name": "validator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 16,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 4029,
						"name": "ValidatorService"
					}
				},
				{
					"id": 47,
					"name": "isVerbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 17,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 48,
					"name": "isDebug",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 49,
					"name": "isSilent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 19,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 50,
					"name": "cs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 20,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 321,
						"typeArguments": [
							{
								"type": "reference",
								"id": 41,
								"name": "Config"
							}
						],
						"name": "ConfigService"
					}
				},
				{
					"id": 51,
					"name": "parser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 21,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ParserService"
					}
				},
				{
					"id": 52,
					"name": "fs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 22,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 345,
						"name": "FileSystemService"
					}
				},
				{
					"id": 53,
					"name": "run",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 26,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 54,
							"name": "run",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Every command needs to implement run for running the command itself."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseCommand.run"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseCommand.run"
					}
				},
				{
					"id": 55,
					"name": "init",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 32,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 56,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initial functions / constructor"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseCommand.init"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseCommand.init"
					}
				},
				{
					"id": 57,
					"name": "shouldRunBefore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 81,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 58,
							"name": "shouldRunBefore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Construct the class if you dont want to extend init or constructor."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 59,
					"name": "shouldRunAfter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 87,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 60,
							"name": "shouldRunAfter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Deconstruct the class if you dont want to extend finally or catch."
									}
								]
							},
							"parameters": [
								{
									"id": 61,
									"name": "_ctx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 40,
										"name": "Ctx"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 62,
					"name": "runTasks",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 90,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 63,
							"name": "runTasks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Run all tasks from task manager."
									}
								]
							},
							"typeParameter": [
								{
									"id": 64,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "reference",
										"id": 40,
										"name": "Ctx"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 64,
										"name": "C"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 65,
					"name": "finally",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 103,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 66,
							"name": "finally",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tasks to run before end of the command."
									}
								]
							},
							"typeParameter": [
								{
									"id": 67,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "reference",
										"id": 40,
										"name": "Ctx"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 68,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 69,
													"name": "ctx",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/common/src/commands/base.command.ts",
															"line": 103,
															"character": 57
														}
													],
													"type": {
														"type": "reference",
														"id": 67,
														"name": "C"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														69
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/common/src/commands/base.command.ts",
													"line": 103,
													"character": 55
												}
											]
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseCommand.finally"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseCommand.finally"
					}
				},
				{
					"id": 70,
					"name": "catch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 114,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 71,
							"name": "catch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Catch any error occurred during command."
									}
								]
							},
							"parameters": [
								{
									"id": 72,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error",
										"qualifiedName": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseCommand.catch"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseCommand.catch"
					}
				},
				{
					"id": 73,
					"name": "prompt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 123,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 74,
							"name": "prompt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets prompt from user."
									}
								]
							},
							"typeParameter": [
								{
									"id": 75,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 76,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "literal",
												"value": false
											}
										],
										"name": "PromptOptions",
										"qualifiedName": "PromptOptions",
										"package": "listr2"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 75,
										"name": "T"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 77,
					"name": "exit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 138,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "exit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 79,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "BaseCommand.exit"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "BaseCommand.exit"
					}
				},
				{
					"id": 80,
					"name": "greet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 143,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "greet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						82,
						83,
						2,
						3,
						4,
						5,
						6,
						7,
						8,
						9,
						10,
						11,
						12,
						13,
						14,
						15,
						16,
						18,
						23,
						28,
						33,
						84,
						85,
						44,
						45,
						46,
						47,
						48,
						49,
						50,
						51,
						52
					]
				},
				{
					"title": "Accessors",
					"children": [
						19,
						29,
						34,
						89
					]
				},
				{
					"title": "Constructors",
					"children": [
						38
					]
				},
				{
					"title": "Methods",
					"children": [
						91,
						94,
						97,
						110,
						114,
						118,
						120,
						130,
						133,
						53,
						55,
						57,
						59,
						62,
						65,
						70,
						73,
						77,
						80
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/commands/base.command.ts",
					"line": 13,
					"character": 13
				}
			],
			"typeParameters": [
				{
					"id": 136,
					"name": "Ctx",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "ListrContext",
						"qualifiedName": "ListrContext",
						"package": "listr2"
					},
					"default": {
						"type": "reference",
						"name": "ListrContext",
						"qualifiedName": "ListrContext",
						"package": "listr2"
					}
				},
				{
					"id": 137,
					"name": "Config",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 317,
						"name": "BaseConfig"
					},
					"default": {
						"type": "reference",
						"id": 317,
						"name": "BaseConfig"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "default",
					"qualifiedName": "Command",
					"package": "@oclif/core"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 138,
					"name": "ConfigCommand"
				}
			]
		},
		{
			"id": 138,
			"name": "ConfigCommand",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 225,
					"name": "argv",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 82,
						"name": "Command.argv"
					}
				},
				{
					"id": 226,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Config",
						"qualifiedName": "Config",
						"package": "@oclif/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 83,
						"name": "Command.config"
					}
				},
				{
					"id": 139,
					"name": "_base",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 11,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Command._base"
					}
				},
				{
					"id": 140,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A command ID, used mostly in error or verbose reporting."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 13,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Command.id"
					}
				},
				{
					"id": 141,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tweet-sized description for your class, used in a parent-commands\nsub-command listing and as the header for the command help."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 18,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Command.summary"
					}
				},
				{
					"id": 142,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A full description of how to use the command.\n\nIf no summary, the first line of the description will be used as the summary."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Command.description"
					}
				},
				{
					"id": 143,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hide the command from help?"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Command.hidden"
					}
				},
				{
					"id": 144,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mark the command as a given state (e.g. beta) in help?"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 28,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Command.state"
					}
				},
				{
					"id": 145,
					"name": "usage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An override string (or strings) for the default usage documentation."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 32,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Command.usage"
					}
				},
				{
					"id": 146,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 33,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Command.help"
					}
				},
				{
					"id": 147,
					"name": "aliases",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of aliases for this command."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 35,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Command.aliases"
					}
				},
				{
					"id": 148,
					"name": "strict",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When set to false, allows a variable amount of arguments"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 37,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Command.strict"
					}
				},
				{
					"id": 149,
					"name": "parse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 38,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Command.parse"
					}
				},
				{
					"id": 150,
					"name": "args",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An order-dependent array of arguments for the command"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 40,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "ArgInput",
						"qualifiedName": "ArgInput",
						"package": "@oclif/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Command.args"
					}
				},
				{
					"id": 151,
					"name": "plugin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 41,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "Plugin",
						"qualifiedName": "Plugin",
						"package": "@oclif/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Command.plugin"
					}
				},
				{
					"id": 152,
					"name": "examples",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of examples to show at the end of the command's help.\n\nIF only a string is provided, it will try to look for a line that starts\nwith the cmd.bin as the example command and the rest as the description.\nIf found, the command will be formatted appropriately.\n\n"
							},
							{
								"kind": "code",
								"text": "```\nEXAMPLES:\n  A description of a particular use case.\n\n    $ <%= config.bin => command flags\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 56,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Example",
							"qualifiedName": "Example",
							"package": "@oclif/core"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 15,
						"name": "Command.examples"
					}
				},
				{
					"id": 153,
					"name": "parserOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 57,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 154,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 16,
						"name": "Command.parserOptions"
					}
				},
				{
					"id": 155,
					"name": "_enableJsonFlag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 58,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 18,
						"name": "Command._enableJsonFlag"
					}
				},
				{
					"id": 156,
					"name": "enableJsonFlag",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 59,
							"character": 15
						},
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 60,
							"character": 15
						}
					],
					"getSignature": {
						"id": 157,
						"name": "enableJsonFlag",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.enableJsonFlag"
						}
					},
					"setSignature": {
						"id": 158,
						"name": "enableJsonFlag",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 159,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.enableJsonFlag"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 19,
						"name": "Command.enableJsonFlag"
					}
				},
				{
					"id": 160,
					"name": "run",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 67,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 161,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/command.d.ts",
									"line": 88,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 162,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "instantiate and run the command"
											}
										]
									},
									"parameters": [
										{
											"id": 163,
											"name": "argv",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "argv"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 164,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "LoadOptions",
												"qualifiedName": "LoadOptions",
												"package": "@oclif/core"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "PromiseLike",
										"qualifiedName": "PromiseLike",
										"package": "typescript"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Command.run"
					}
				},
				{
					"id": 165,
					"name": "_globalFlags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 68,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 28,
						"name": "Command._globalFlags"
					}
				},
				{
					"id": 166,
					"name": "globalFlags",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 69,
							"character": 15
						},
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 70,
							"character": 15
						}
					],
					"getSignature": {
						"id": 167,
						"name": "globalFlags",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "object"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.globalFlags"
						}
					},
					"setSignature": {
						"id": 168,
						"name": "globalFlags",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 169,
								"name": "flags",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.globalFlags"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 29,
						"name": "Command.globalFlags"
					}
				},
				{
					"id": 170,
					"name": "_flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hash of flags for the command"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 72,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Command._flags"
					}
				},
				{
					"id": 171,
					"name": "flags",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 73,
							"character": 15
						},
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 74,
							"character": 15
						}
					],
					"getSignature": {
						"id": 172,
						"name": "flags",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "object"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.flags"
						}
					},
					"setSignature": {
						"id": 173,
						"name": "flags",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 174,
								"name": "flags",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.flags"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Command.flags"
					}
				},
				{
					"id": 227,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 75,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 84,
						"name": "Command.id"
					}
				},
				{
					"id": 228,
					"name": "debug",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 76,
							"character": 14
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 229,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
									"line": 76,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 230,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 231,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 85,
						"name": "Command.debug"
					}
				},
				{
					"id": 175,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "new ConfigCommand",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 177,
									"name": "CommandChoices",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 178,
									"name": "LockFile",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 179,
									"name": "Ctx",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 180,
									"name": "Config",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 317,
										"typeArguments": [
											{
												"type": "reference",
												"id": 180,
												"name": "Config"
											}
										],
										"name": "BaseConfig"
									},
									"default": {
										"type": "reference",
										"id": 317,
										"name": "BaseConfig"
									}
								}
							],
							"parameters": [
								{
									"id": 181,
									"name": "argv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 182,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Config",
										"qualifiedName": "Config",
										"package": "@oclif/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 138,
								"typeArguments": [
									{
										"type": "reference",
										"id": 177,
										"name": "CommandChoices"
									},
									{
										"type": "reference",
										"id": 178,
										"name": "LockFile"
									},
									{
										"type": "reference",
										"id": 179,
										"name": "Ctx"
									},
									{
										"type": "reference",
										"id": 180,
										"name": "Config"
									}
								],
								"name": "ConfigCommand"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 39,
								"name": "Command.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 38,
						"name": "Command.constructor"
					}
				},
				{
					"id": 232,
					"name": "ctor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 78,
							"character": 8
						}
					],
					"getSignature": {
						"id": 233,
						"name": "ctor",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "default",
								"qualifiedName": "Command",
								"package": "@oclif/core"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "BaseCommand.ctor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 89,
						"name": "Command.ctor"
					}
				},
				{
					"id": 234,
					"name": "_run",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 235,
							"name": "_run",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 236,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 93,
										"name": "T",
										"qualifiedName": "T",
										"package": "@oclif/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 92,
								"name": "Command._run"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 91,
						"name": "Command._run"
					}
				},
				{
					"id": 237,
					"name": "warn",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 81,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 238,
							"name": "warn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 239,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Error",
										"qualifiedName": "Error",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 95,
								"name": "Command.warn"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 94,
						"name": "Command.warn"
					}
				},
				{
					"id": 240,
					"name": "error",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 82,
							"character": 4
						},
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 86,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "error",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 242,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 243,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 244,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 245,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
																	"line": 83,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 246,
															"name": "exit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
																	"line": 84,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																245,
																246
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
															"line": 82,
															"character": 42
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "PrettyPrintableError",
												"qualifiedName": "PrettyPrintableError",
												"package": "@oclif/core"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 98,
								"name": "Command.error"
							}
						},
						{
							"id": 247,
							"name": "error",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 248,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 249,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 250,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 251,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
																	"line": 87,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 252,
															"name": "exit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
																	"line": 88,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																251,
																252
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
															"line": 86,
															"character": 43
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "PrettyPrintableError",
												"qualifiedName": "PrettyPrintableError",
												"package": "@oclif/core"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 104,
								"name": "Command.error"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 97,
						"name": "Command.error"
					}
				},
				{
					"id": 253,
					"name": "log",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 90,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 254,
							"name": "log",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 255,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 256,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 111,
								"name": "Command.log"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 110,
						"name": "Command.log"
					}
				},
				{
					"id": 257,
					"name": "logToStderr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 91,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 258,
							"name": "logToStderr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 259,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 260,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 115,
								"name": "Command.logToStderr"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 114,
						"name": "Command.logToStderr"
					}
				},
				{
					"id": 261,
					"name": "jsonEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 262,
							"name": "jsonEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 119,
								"name": "Command.jsonEnabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 118,
						"name": "Command.jsonEnabled"
					}
				},
				{
					"id": 263,
					"name": "parse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 98,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 264,
							"name": "parse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 265,
									"name": "F",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 266,
									"name": "G",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								},
								{
									"id": 270,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 267,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
													"line": 98,
													"character": 36
												}
											],
											"indexSignature": {
												"id": 268,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 269,
														"name": "name",
														"kind": 32768,
														"flags": {
															"isExternal": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								}
							],
							"parameters": [
								{
									"id": 271,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 122,
												"name": "F",
												"qualifiedName": "F",
												"package": "@oclif/core"
											},
											{
												"type": "reference",
												"id": 123,
												"name": "G",
												"qualifiedName": "G",
												"package": "@oclif/core"
											}
										],
										"name": "Input",
										"qualifiedName": "Input",
										"package": "@oclif/core"
									}
								},
								{
									"id": 272,
									"name": "argv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 122,
												"name": "F",
												"qualifiedName": "F",
												"package": "@oclif/core"
											},
											{
												"type": "reference",
												"id": 123,
												"name": "G",
												"qualifiedName": "G",
												"package": "@oclif/core"
											},
											{
												"type": "reference",
												"id": 127,
												"name": "A",
												"qualifiedName": "A",
												"package": "@oclif/core"
											}
										],
										"name": "ParserOutput",
										"qualifiedName": "ParserOutput",
										"package": "@oclif/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 121,
								"name": "Command.parse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 120,
						"name": "Command.parse"
					}
				},
				{
					"id": 273,
					"name": "toSuccessJson",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 105,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 274,
							"name": "toSuccessJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 275,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 131,
								"name": "Command.toSuccessJson"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 130,
						"name": "Command.toSuccessJson"
					}
				},
				{
					"id": 276,
					"name": "toErrorJson",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
							"line": 106,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 277,
							"name": "toErrorJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 278,
									"name": "err",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 134,
								"name": "Command.toErrorJson"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 133,
						"name": "Command.toErrorJson"
					}
				},
				{
					"id": 191,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 4091,
						"name": "Logger"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Command.logger"
					}
				},
				{
					"id": 192,
					"name": "tasks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 15,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 179,
								"name": "Ctx"
							},
							{
								"type": "literal",
								"value": "default"
							},
							{
								"type": "literal",
								"value": "verbose"
							}
						],
						"name": "Manager",
						"qualifiedName": "Manager",
						"package": "listr2"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Command.tasks"
					}
				},
				{
					"id": 193,
					"name": "validator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 16,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 4029,
						"name": "ValidatorService"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 46,
						"name": "Command.validator"
					}
				},
				{
					"id": 194,
					"name": "isVerbose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 17,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 47,
						"name": "Command.isVerbose"
					}
				},
				{
					"id": 195,
					"name": "isDebug",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 48,
						"name": "Command.isDebug"
					}
				},
				{
					"id": 196,
					"name": "isSilent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 19,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Command.isSilent"
					}
				},
				{
					"id": 197,
					"name": "cs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 20,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 321,
						"typeArguments": [
							{
								"type": "reference",
								"id": 180,
								"name": "Config"
							}
						],
						"name": "ConfigService"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 50,
						"name": "Command.cs"
					}
				},
				{
					"id": 198,
					"name": "parser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 21,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ParserService"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 51,
						"name": "Command.parser"
					}
				},
				{
					"id": 199,
					"name": "fs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 22,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 345,
						"name": "FileSystemService"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 52,
						"name": "Command.fs"
					}
				},
				{
					"id": 200,
					"name": "init",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 32,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 201,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initial functions / constructor"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 56,
								"name": "Command.init"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "Command.init"
					}
				},
				{
					"id": 202,
					"name": "shouldRunBefore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 81,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 203,
							"name": "shouldRunBefore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Construct the class if you dont want to extend init or constructor."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 58,
								"name": "Command.shouldRunBefore"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "Command.shouldRunBefore"
					}
				},
				{
					"id": 204,
					"name": "shouldRunAfter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 87,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 205,
							"name": "shouldRunAfter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Deconstruct the class if you dont want to extend finally or catch."
									}
								]
							},
							"parameters": [
								{
									"id": 206,
									"name": "_ctx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 179,
										"name": "Ctx"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "Command.shouldRunAfter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Command.shouldRunAfter"
					}
				},
				{
					"id": 207,
					"name": "runTasks",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 90,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 208,
							"name": "runTasks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Run all tasks from task manager."
									}
								]
							},
							"typeParameter": [
								{
									"id": 209,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "reference",
										"id": 179,
										"name": "Ctx"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 64,
										"name": "C"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 63,
								"name": "Command.runTasks"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 62,
						"name": "Command.runTasks"
					}
				},
				{
					"id": 210,
					"name": "finally",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 103,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 211,
							"name": "finally",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tasks to run before end of the command."
									}
								]
							},
							"typeParameter": [
								{
									"id": 212,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "reference",
										"id": 179,
										"name": "Ctx"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 213,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 214,
													"name": "ctx",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/common/src/commands/base.command.ts",
															"line": 103,
															"character": 57
														}
													],
													"type": {
														"type": "reference",
														"id": 67,
														"name": "C"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														214
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/common/src/commands/base.command.ts",
													"line": 103,
													"character": 55
												}
											]
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 66,
								"name": "Command.finally"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 65,
						"name": "Command.finally"
					}
				},
				{
					"id": 215,
					"name": "catch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 114,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "catch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Catch any error occurred during command."
									}
								]
							},
							"parameters": [
								{
									"id": 217,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Error",
										"qualifiedName": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 71,
								"name": "Command.catch"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 70,
						"name": "Command.catch"
					}
				},
				{
					"id": 218,
					"name": "prompt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 123,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 219,
							"name": "prompt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets prompt from user."
									}
								]
							},
							"typeParameter": [
								{
									"id": 220,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 221,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "literal",
												"value": false
											}
										],
										"name": "PromptOptions",
										"qualifiedName": "PromptOptions",
										"package": "listr2"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 75,
										"name": "T"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 74,
								"name": "Command.prompt"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 73,
						"name": "Command.prompt"
					}
				},
				{
					"id": 222,
					"name": "exit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/base.command.ts",
							"line": 138,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 223,
							"name": "exit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 224,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 78,
								"name": "Command.exit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 77,
						"name": "Command.exit"
					}
				},
				{
					"id": 183,
					"name": "choices",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/config.command.ts",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 308,
						"typeArguments": [
							{
								"type": "reference",
								"id": 177,
								"name": "CommandChoices"
							}
						],
						"name": "ConfigCommandChoices"
					}
				},
				{
					"id": 184,
					"name": "locker",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/config.command.ts",
							"line": 15,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 3954,
						"typeArguments": [
							{
								"type": "reference",
								"id": 178,
								"name": "LockFile"
							}
						],
						"name": "LockerService"
					}
				},
				{
					"id": 185,
					"name": "run",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/config.command.ts",
							"line": 17,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 186,
							"name": "run",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Every command needs to implement run for running the command itself."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"id": 54,
								"name": "Command.run"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 53,
						"name": "Command.run"
					}
				},
				{
					"id": 187,
					"name": "generate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/config.command.ts",
							"line": 26,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 188,
							"name": "generate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 189,
					"name": "setup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/commands/config.command.ts",
							"line": 37,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 190,
							"name": "setup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 312,
										"typeArguments": [
											{
												"type": "reference",
												"id": 177,
												"name": "CommandChoices"
											},
											{
												"type": "reference",
												"id": 178,
												"name": "LockFile"
											}
										],
										"name": "ConfigCommandSetup"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 312,
												"typeArguments": [
													{
														"type": "reference",
														"id": 177,
														"name": "CommandChoices"
													},
													{
														"type": "reference",
														"id": 178,
														"name": "LockFile"
													}
												],
												"name": "ConfigCommandSetup"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						225,
						226,
						139,
						140,
						141,
						142,
						143,
						144,
						145,
						146,
						147,
						148,
						149,
						150,
						151,
						152,
						153,
						155,
						160,
						165,
						170,
						227,
						228,
						191,
						192,
						193,
						194,
						195,
						196,
						197,
						198,
						199,
						183,
						184
					]
				},
				{
					"title": "Accessors",
					"children": [
						156,
						166,
						171,
						232
					]
				},
				{
					"title": "Constructors",
					"children": [
						175
					]
				},
				{
					"title": "Methods",
					"children": [
						234,
						237,
						240,
						253,
						257,
						261,
						263,
						273,
						276,
						200,
						202,
						204,
						207,
						210,
						215,
						218,
						222,
						185,
						187,
						189
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/commands/config.command.ts",
					"line": 8,
					"character": 22
				}
			],
			"typeParameters": [
				{
					"id": 279,
					"name": "CommandChoices",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 280,
					"name": "LockFile",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 281,
					"name": "Ctx",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "ListrContext",
						"qualifiedName": "ListrContext",
						"package": "listr2"
					},
					"default": {
						"type": "reference",
						"name": "ListrContext",
						"qualifiedName": "ListrContext",
						"package": "listr2"
					}
				},
				{
					"id": 282,
					"name": "Config",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 317,
						"name": "BaseConfig"
					},
					"default": {
						"type": "reference",
						"id": 317,
						"name": "BaseConfig"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"typeArguments": [
						{
							"type": "reference",
							"id": 179,
							"name": "Ctx"
						},
						{
							"type": "reference",
							"id": 180,
							"name": "Config"
						}
					],
					"name": "Command"
				}
			]
		},
		{
			"id": 283,
			"name": "FileConstants",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 284,
					"name": "CONFIG_SERVICE_DEFAULTS_DIR",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/constants/file.constants.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "defaults"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						284
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/constants/file.constants.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 285,
			"name": "notFoundHook",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/hooks/not-found.hook.ts",
					"line": 6,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 286,
					"name": "notFoundHook",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 287,
							"name": "this",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Context",
								"qualifiedName": "Hook.Context",
								"package": "@oclif/core"
							}
						},
						{
							"id": 288,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 289,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 290,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
															"line": 48,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 291,
													"name": "argv",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
															"line": 49,
															"character": 12
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														290,
														291
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
													"line": 47,
													"character": 17
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 292,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 293,
													"name": "config",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
															"line": 76,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"name": "Config",
														"qualifiedName": "Config",
														"package": "@oclif/core"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														293
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
													"line": 75,
													"character": 119
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Promise",
						"qualifiedName": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 294,
			"name": "updateNotifierHook",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/hooks/update-notifier.hook.ts",
					"line": 4,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 295,
					"name": "updateNotifierHook",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 296,
							"name": "this",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Context",
								"qualifiedName": "Hook.Context",
								"package": "@oclif/core"
							}
						},
						{
							"id": 297,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 298,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 299,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
															"line": 12,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 300,
													"name": "argv",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
															"line": 13,
															"character": 12
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														299,
														300
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
													"line": 11,
													"character": 17
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 301,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 302,
													"name": "config",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
															"line": 76,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"name": "Config",
														"qualifiedName": "Config",
														"package": "@oclif/core"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														302
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
													"line": 75,
													"character": 119
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"qualifiedName": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 303,
			"name": "ClassType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/interfaces/class.interface.ts",
					"line": 1,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 307,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 304,
					"name": "__type",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/interfaces/class.interface.ts",
							"line": 1,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "__type",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 306,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 307,
								"name": "T"
							}
						}
					]
				}
			}
		},
		{
			"id": 308,
			"name": "ConfigCommandChoices",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/interfaces/config-command.interface.ts",
					"line": 3,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 311,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 311,
						"name": "T"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 309,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/interfaces/config-command.interface.ts",
									"line": 3,
									"character": 63
								}
							],
							"signatures": [
								{
									"id": 310,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"qualifiedName": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				],
				"name": "Record",
				"qualifiedName": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 312,
			"name": "ConfigCommandSetup",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 313,
					"name": "choices",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/interfaces/config-command.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 308,
						"typeArguments": [
							{
								"type": "reference",
								"id": 315,
								"name": "T"
							}
						],
						"name": "ConfigCommandChoices"
					}
				},
				{
					"id": 314,
					"name": "locker",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/interfaces/config-command.interface.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 3954,
						"typeArguments": [
							{
								"type": "reference",
								"id": 316,
								"name": "LockFile"
							}
						],
						"name": "LockerService"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						313,
						314
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/interfaces/config-command.interface.ts",
					"line": 5,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 315,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 316,
					"name": "LockFile",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 317,
			"name": "BaseConfig",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 318,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 319,
							"name": "new BaseConfig",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 317,
								"name": "BaseConfig"
							}
						}
					]
				},
				{
					"id": 320,
					"name": "loglevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.interface.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 4068,
						"name": "LogLevels"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						318
					]
				},
				{
					"title": "Properties",
					"children": [
						320
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/config/config.interface.ts",
					"line": 6,
					"character": 13
				}
			]
		},
		{
			"id": 321,
			"name": "ConfigService",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 322,
					"name": "instance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 321,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ConfigService"
					}
				},
				{
					"id": 327,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 15,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 325,
						"name": "Config"
					}
				},
				{
					"id": 328,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 16,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "default",
							"qualifiedName": "Command",
							"package": "@oclif/core"
						}
					}
				},
				{
					"id": 329,
					"name": "oclif",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 17,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "Config",
						"qualifiedName": "Config",
						"package": "@oclif/core"
					}
				},
				{
					"id": 330,
					"name": "defaults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 18,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 331,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 19,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 332,
					"name": "parser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 20,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "ParserService"
					}
				},
				{
					"id": 333,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 21,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"id": 4091,
						"name": "Logger"
					}
				},
				{
					"id": 323,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 23,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 324,
							"name": "new ConfigService",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 325,
									"name": "Config",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 317,
										"typeArguments": [
											{
												"type": "reference",
												"id": 325,
												"name": "Config"
											}
										],
										"name": "BaseConfig"
									},
									"default": {
										"type": "reference",
										"id": 317,
										"name": "BaseConfig"
									}
								}
							],
							"parameters": [
								{
									"id": 326,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 325,
												"name": "Config"
											}
										],
										"name": "Command"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 321,
								"typeArguments": [
									{
										"type": "reference",
										"id": 325,
										"name": "Config"
									}
								],
								"name": "ConfigService"
							}
						}
					]
				},
				{
					"id": 334,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 42,
							"character": 15
						},
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 43,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 335,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 336,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 337,
									"name": "paths",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 336,
										"name": "T"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 338,
					"name": "write",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/config/config.service.ts",
							"line": 65,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 339,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 340,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 341,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 342,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 340,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						322,
						327,
						328,
						329,
						330,
						331,
						332,
						333
					]
				},
				{
					"title": "Constructors",
					"children": [
						323
					]
				},
				{
					"title": "Methods",
					"children": [
						334,
						338
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/config/config.service.ts",
					"line": 13,
					"character": 13
				}
			],
			"typeParameters": [
				{
					"id": 343,
					"name": "Config",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 317,
						"name": "BaseConfig"
					},
					"default": {
						"type": "reference",
						"id": 317,
						"name": "BaseConfig"
					}
				}
			]
		},
		{
			"id": 345,
			"name": "FileSystemService",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 346,
					"name": "instance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 7,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 345,
						"name": "FileSystemService"
					}
				},
				{
					"id": 349,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 8,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"id": 4091,
						"name": "Logger"
					},
					"defaultValue": "..."
				},
				{
					"id": 347,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 10,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 348,
							"name": "new FileSystemService",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 345,
								"name": "FileSystemService"
							}
						}
					]
				},
				{
					"id": 350,
					"name": "exists",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 20,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 351,
							"name": "exists",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 352,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 353,
					"name": "stats",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 24,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 354,
							"name": "stats",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 355,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2370,
								"name": "Stats",
								"qualifiedName": "Stats",
								"package": "@types/node"
							}
						}
					]
				},
				{
					"id": 356,
					"name": "dirname",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 28,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 357,
							"name": "dirname",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 358,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 359,
					"name": "extname",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 32,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 360,
							"name": "extname",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 361,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 362,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 36,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 363,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 364,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 365,
					"name": "readSync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 46,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 366,
							"name": "readSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 367,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 368,
					"name": "write",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 56,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 369,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 370,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 371,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 372,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1577,
										"name": "WriteFileOptions",
										"qualifiedName": "WriteFileOptions",
										"package": "@types/fs-extra"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "writeSync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 64,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 374,
							"name": "writeSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 375,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 376,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 377,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1577,
										"name": "WriteFileOptions",
										"qualifiedName": "WriteFileOptions",
										"package": "@types/fs-extra"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 378,
					"name": "append",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 72,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 379,
							"name": "append",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 380,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 381,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 382,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1577,
										"name": "WriteFileOptions",
										"qualifiedName": "WriteFileOptions",
										"package": "@types/fs-extra"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 383,
					"name": "appendSync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 80,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 384,
							"name": "appendSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 385,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 386,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 387,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 88,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 388,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 389,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 390,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3794,
										"name": "RmOptions",
										"qualifiedName": "RmOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 391,
					"name": "removeSync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 96,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 392,
							"name": "removeSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 393,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 394,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3794,
										"name": "RmOptions",
										"qualifiedName": "RmOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 395,
					"name": "emptyDir",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 104,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 396,
							"name": "emptyDir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 397,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 398,
					"name": "emptyDirSync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 112,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 399,
							"name": "emptyDirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 400,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 401,
					"name": "mkdir",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 120,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 402,
							"name": "mkdir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 403,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 404,
					"name": "mkdirSync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
							"line": 128,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 405,
							"name": "mkdirSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 406,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						346,
						349
					]
				},
				{
					"title": "Constructors",
					"children": [
						347
					]
				},
				{
					"title": "Methods",
					"children": [
						350,
						353,
						356,
						359,
						362,
						365,
						368,
						373,
						378,
						383,
						387,
						391,
						395,
						398,
						401,
						404
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/fs/filesystem.service.ts",
					"line": 6,
					"character": 13
				}
			]
		},
		{
			"id": 3938,
			"name": "CommonLockerData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 3939,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3940,
					"name": "enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 3941,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3939,
						3940,
						3941
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/locker/locker.interface.ts",
					"line": 3,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 3950,
					"name": "UnlockData"
				}
			]
		},
		{
			"id": 3942,
			"name": "LockableData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/lib/locker/locker.interface.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			}
		},
		{
			"id": 3943,
			"name": "LockData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 3946,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Partial.path"
					}
				},
				{
					"id": 3947,
					"name": "enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Partial.enabled"
					}
				},
				{
					"id": 3948,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Partial.root"
					}
				},
				{
					"id": 3944,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 3949,
						"name": "T"
					}
				},
				{
					"id": 3945,
					"name": "merge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 4170,
						"name": "MergeStrategy"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3946,
						3947,
						3948,
						3944,
						3945
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/locker/locker.interface.ts",
					"line": 11,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 3949,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 3942,
						"name": "LockableData"
					},
					"default": {
						"type": "reference",
						"id": 3942,
						"name": "LockableData"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 3938,
							"name": "CommonLockerData"
						}
					],
					"name": "Partial",
					"qualifiedName": "Partial",
					"package": "typescript"
				}
			]
		},
		{
			"id": 3950,
			"name": "UnlockData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 3951,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3939,
						"name": "CommonLockerData.path"
					}
				},
				{
					"id": 3952,
					"name": "enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3940,
						"name": "CommonLockerData.enabled"
					}
				},
				{
					"id": 3953,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3941,
						"name": "CommonLockerData.root"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3951,
						3952,
						3953
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/locker/locker.interface.ts",
					"line": 16,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 3938,
					"name": "CommonLockerData"
				}
			]
		},
		{
			"id": 3954,
			"name": "LockerService",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 3961,
					"name": "toLock",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 10,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 3943,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "LockData"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 3962,
					"name": "toUnlock",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 11,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 3950,
							"name": "UnlockData"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 3963,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 12,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"id": 4091,
						"name": "Logger"
					},
					"defaultValue": "..."
				},
				{
					"id": 3964,
					"name": "fs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 13,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"id": 345,
						"name": "FileSystemService"
					},
					"defaultValue": "..."
				},
				{
					"id": 3955,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 15,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 3956,
							"name": "new LockerService",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3957,
									"name": "LockFile",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 3958,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3959,
									"name": "parser",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4000,
										"name": "GenericParser"
									}
								},
								{
									"id": 3960,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3954,
								"typeArguments": [
									{
										"type": "reference",
										"id": 3957,
										"name": "LockFile"
									}
								],
								"name": "LockerService"
							}
						}
					]
				},
				{
					"id": 3965,
					"name": "hasLock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 17,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 3966,
							"name": "hasLock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3967,
					"name": "hasUnlock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 21,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 3968,
							"name": "hasUnlock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3969,
					"name": "addLock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 25,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 3970,
							"name": "addLock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3971,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 3972,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3943,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3971,
														"name": "T"
													}
												],
												"name": "LockData"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3943,
													"typeArguments": [
														{
															"type": "reference",
															"id": 3971,
															"name": "T"
														}
													],
													"name": "LockData"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3973,
					"name": "addUnlock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 29,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 3974,
							"name": "addUnlock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3975,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3950,
												"name": "UnlockData"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3950,
													"name": "UnlockData"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3976,
					"name": "lockAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 33,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 3977,
							"name": "lockAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3978,
					"name": "unlockAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 41,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 3979,
							"name": "unlockAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3980,
					"name": "lock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 49,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 3981,
							"name": "lock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3982,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 3983,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3943,
												"typeArguments": [
													{
														"type": "reference",
														"id": 3982,
														"name": "T"
													}
												],
												"name": "LockData"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3943,
													"typeArguments": [
														{
															"type": "reference",
															"id": 3982,
															"name": "T"
														}
													],
													"name": "LockData"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3984,
					"name": "unlock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 96,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 3985,
							"name": "unlock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3986,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3950,
												"name": "UnlockData"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 3950,
													"name": "UnlockData"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3987,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 137,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 3988,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3957,
										"name": "LockFile"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3989,
					"name": "write",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 141,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 3990,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3991,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3957,
										"name": "LockFile"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3992,
					"name": "buildPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 145,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 3993,
							"name": "buildPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3994,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3938,
												"name": "CommonLockerData"
											}
										],
										"name": "Partial",
										"qualifiedName": "Partial",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 3995,
									"name": "d",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3994,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 3996,
					"name": "normalizePath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/locker/locker.service.ts",
							"line": 153,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 3997,
							"name": "normalizePath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3998,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3961,
						3962,
						3963,
						3964
					]
				},
				{
					"title": "Constructors",
					"children": [
						3955
					]
				},
				{
					"title": "Methods",
					"children": [
						3965,
						3967,
						3969,
						3973,
						3976,
						3978,
						3980,
						3984,
						3987,
						3989,
						3992,
						3996
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/locker/locker.service.ts",
					"line": 9,
					"character": 13
				}
			],
			"typeParameters": [
				{
					"id": 3999,
					"name": "LockFile",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 3942,
						"name": "LockableData"
					},
					"default": {
						"type": "reference",
						"id": 3942,
						"name": "LockableData"
					}
				}
			]
		},
		{
			"id": 4000,
			"name": "GenericParser",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 4001,
					"name": "extensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/parser/parser.interface.ts",
							"line": 2,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4002,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 4003,
							"name": "new GenericParser",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4000,
								"name": "GenericParser"
							}
						}
					]
				},
				{
					"id": 4004,
					"name": "parse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/parser/parser.interface.ts",
							"line": 3,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4005,
							"name": "parse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 4006,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 4007,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 4006,
										"name": "T"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 4006,
												"name": "T"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 4008,
					"name": "stringify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/parser/parser.interface.ts",
							"line": 4,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4009,
							"name": "stringify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 4010,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 4011,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4010,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4001
					]
				},
				{
					"title": "Constructors",
					"children": [
						4002
					]
				},
				{
					"title": "Methods",
					"children": [
						4004,
						4008
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/parser/parser.interface.ts",
					"line": 1,
					"character": 21
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 4012,
					"name": "YamlParser"
				}
			]
		},
		{
			"id": 4012,
			"name": "YamlParser",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 4013,
					"name": "extensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
							"line": 7,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "...",
					"implementationOf": {
						"type": "reference",
						"id": 4001,
						"name": "GenericParser.extensions"
					}
				},
				{
					"id": 4014,
					"name": "instance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
							"line": 8,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 4012,
						"name": "YamlParser"
					}
				},
				{
					"id": 4017,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
							"line": 9,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"id": 4091,
						"name": "Logger"
					},
					"defaultValue": "..."
				},
				{
					"id": 4015,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
							"line": 11,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 4016,
							"name": "new YamlParser",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4012,
								"name": "YamlParser"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 4002,
						"name": "GenericParser.constructor"
					}
				},
				{
					"id": 4018,
					"name": "parse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
							"line": 21,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4019,
							"name": "parse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 4020,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 4021,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4020,
								"name": "T"
							},
							"implementationOf": {
								"type": "reference",
								"id": 4005,
								"name": "GenericParser.parse"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 4004,
						"name": "GenericParser.parse"
					}
				},
				{
					"id": 4022,
					"name": "stringify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
							"line": 31,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4023,
							"name": "stringify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 4024,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 4025,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4024,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"id": 4009,
								"name": "GenericParser.stringify"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 4008,
						"name": "GenericParser.stringify"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4013,
						4014,
						4017
					]
				},
				{
					"title": "Constructors",
					"children": [
						4015
					]
				},
				{
					"title": "Methods",
					"children": [
						4018,
						4022
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
					"line": 6,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 4000,
					"name": "GenericParser"
				}
			]
		},
		{
			"id": 4048,
			"name": "setup",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/lib/setup.ts",
					"line": 1,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 4049,
					"name": "setup",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 4026,
			"name": "ValidatorServiceOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 4027,
					"name": "validator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/validator/validator.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ValidatorOptions",
						"qualifiedName": "ValidatorOptions",
						"package": "class-validator"
					}
				},
				{
					"id": 4028,
					"name": "transformer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/validator/validator.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ClassTransformOptions",
						"qualifiedName": "ClassTransformOptions",
						"package": "class-transformer"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4027,
						4028
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/validator/validator.interface.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 4029,
			"name": "ValidatorService",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 4033,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/validator/validator.service.ts",
							"line": 10,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"id": 4091,
						"name": "Logger"
					},
					"defaultValue": "..."
				},
				{
					"id": 4030,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/lib/validator/validator.service.ts",
							"line": 12,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 4031,
							"name": "new ValidatorService",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 4032,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 4026,
										"name": "ValidatorServiceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4029,
								"name": "ValidatorService"
							}
						}
					]
				},
				{
					"id": 4034,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/validator/validator.service.ts",
							"line": 12,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"id": 4026,
						"name": "ValidatorServiceOptions"
					}
				},
				{
					"id": 4035,
					"name": "validate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/validator/validator.service.ts",
							"line": 25,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 4036,
							"name": "validate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 4037,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "PropertyKey",
												"qualifiedName": "PropertyKey",
												"package": "typescript"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"qualifiedName": "Record",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 4038,
									"name": "classType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 303,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4037,
												"name": "T"
											}
										],
										"name": "ClassType"
									}
								},
								{
									"id": 4039,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4037,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4037,
										"name": "T"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4040,
					"name": "validateSync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/validator/validator.service.ts",
							"line": 41,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4041,
							"name": "validateSync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 4042,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "PropertyKey",
												"qualifiedName": "PropertyKey",
												"package": "typescript"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"qualifiedName": "Record",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 4043,
									"name": "classType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 303,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4042,
												"name": "T"
											}
										],
										"name": "ClassType"
									}
								},
								{
									"id": 4044,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4042,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4042,
								"name": "T"
							}
						}
					]
				},
				{
					"id": 4045,
					"name": "logValidationError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/lib/validator/validator.service.ts",
							"line": 57,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 4046,
							"name": "logValidationError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4047,
									"name": "err",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ValidationError",
										"qualifiedName": "ValidationError",
										"package": "class-validator"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4033,
						4034
					]
				},
				{
					"title": "Constructors",
					"children": [
						4030
					]
				},
				{
					"title": "Methods",
					"children": [
						4035,
						4040,
						4045
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/lib/validator/validator.service.ts",
					"line": 9,
					"character": 13
				}
			]
		},
		{
			"id": 4154,
			"name": "color",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/common/src/utils/color.ts",
					"line": 3,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"name": "Colorette",
				"qualifiedName": "Colorette",
				"package": "colorette"
			},
			"defaultValue": "..."
		},
		{
			"id": 4155,
			"name": "isVerbose",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/utils/environment.ts",
					"line": 4,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 4156,
					"name": "isVerbose",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 4157,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 317,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4157,
										"name": "T"
									}
								],
								"name": "BaseConfig"
							},
							"default": {
								"type": "reference",
								"id": 317,
								"name": "BaseConfig"
							}
						}
					],
					"parameters": [
						{
							"id": 4158,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4157,
								"name": "T"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 4159,
			"name": "isDebug",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/utils/environment.ts",
					"line": 8,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 4160,
					"name": "isDebug",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 4161,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 317,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4161,
										"name": "T"
									}
								],
								"name": "BaseConfig"
							},
							"default": {
								"type": "reference",
								"id": 317,
								"name": "BaseConfig"
							}
						}
					],
					"parameters": [
						{
							"id": 4162,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4161,
								"name": "T"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 4163,
			"name": "isSilent",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/utils/environment.ts",
					"line": 12,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 4164,
					"name": "isSilent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 4165,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 317,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4165,
										"name": "T"
									}
								],
								"name": "BaseConfig"
							},
							"default": {
								"type": "reference",
								"id": 317,
								"name": "BaseConfig"
							}
						}
					],
					"parameters": [
						{
							"id": 4166,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4165,
								"name": "T"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 4068,
			"name": "LogLevels",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 4069,
					"name": "SILENT",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "SILENT"
					}
				},
				{
					"id": 4070,
					"name": "DIRECT",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "DIRECT"
					}
				},
				{
					"id": 4071,
					"name": "FATAL",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "FATAL"
					}
				},
				{
					"id": 4072,
					"name": "ERROR",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "ERROR"
					}
				},
				{
					"id": 4073,
					"name": "WARN",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "WARN"
					}
				},
				{
					"id": 4074,
					"name": "INFO",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "INFO"
					}
				},
				{
					"id": 4075,
					"name": "VERBOSE",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "VERBOSE"
					}
				},
				{
					"id": 4076,
					"name": "DEBUG",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "DEBUG"
					}
				},
				{
					"id": 4077,
					"name": "TRACE",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "TRACE"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						4069,
						4070,
						4071,
						4072,
						4073,
						4074,
						4075,
						4076,
						4077
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/logger.constants.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 4078,
			"name": "LogFieldStatus",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 4079,
					"name": "RUN",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "RUN"
					}
				},
				{
					"id": 4080,
					"name": "END",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.constants.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "END"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						4079,
						4080
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/logger.constants.ts",
					"line": 13,
					"character": 12
				}
			]
		},
		{
			"id": 4081,
			"name": "LoggerOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 4082,
					"name": "useIcons",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.interface.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4083,
					"name": "level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.interface.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 4068,
						"name": "LogLevels"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4082,
						4083
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/logger.interface.ts",
					"line": 5,
					"character": 17
				}
			]
		},
		{
			"id": 4084,
			"name": "LoggerFormat",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 4085,
					"name": "level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.interface.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 4068,
						"name": "LogLevels"
					}
				},
				{
					"id": 4086,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.interface.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4087,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.interface.ts",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4088,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.interface.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4085,
						4086,
						4087,
						4088
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/logger.interface.ts",
					"line": 10,
					"character": 17
				}
			]
		},
		{
			"id": 4089,
			"name": "Winston",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/logger.interface.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "WinstonLogger",
						"qualifiedName": "winston.Logger",
						"package": "winston"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "query",
									"queryType": {
										"type": "reference",
										"id": 4068,
										"name": "LogLevels"
									}
								}
							},
							{
								"type": "reference",
								"name": "LeveledLogMethod",
								"qualifiedName": "winston.LeveledLogMethod",
								"package": "winston"
							}
						],
						"name": "Record",
						"qualifiedName": "Record",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 4090,
			"name": "WINSTON_INSTANCE",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/logger.interface.ts",
					"line": 19,
					"character": 13
				}
			],
			"type": {
				"type": "literal",
				"value": "WINSTON_DEFAULT_LOGGER"
			},
			"defaultValue": "'WINSTON_DEFAULT_LOGGER'"
		},
		{
			"id": 4091,
			"name": "Logger",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A general logger for the the CLI applications."
					}
				]
			},
			"children": [
				{
					"id": 4092,
					"name": "instance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 4089,
						"name": "Winston"
					}
				},
				{
					"id": 4097,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 15,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 4089,
						"name": "Winston"
					}
				},
				{
					"id": 4093,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 17,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 4094,
							"name": "new Logger",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 4095,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4096,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 4081,
										"name": "LoggerOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4091,
								"name": "Logger"
							}
						}
					]
				},
				{
					"id": 4098,
					"name": "log",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 36,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4099,
							"name": "log",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4100,
									"name": "level",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4068,
										"name": "LogLevels"
									}
								},
								{
									"id": 4101,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4102,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4103,
					"name": "direct",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 40,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4104,
							"name": "direct",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4105,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4106,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4107,
					"name": "fatal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 44,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4108,
							"name": "fatal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4109,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4110,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4111,
					"name": "error",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 48,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4112,
							"name": "error",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4113,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4114,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4115,
					"name": "warn",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 52,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4116,
							"name": "warn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4117,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4118,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4119,
					"name": "info",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 56,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4120,
							"name": "info",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4121,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4122,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4123,
					"name": "debug",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 60,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4124,
							"name": "debug",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4125,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4126,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4127,
					"name": "verbose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 64,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4128,
							"name": "verbose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4129,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4130,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4131,
					"name": "trace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 68,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4132,
							"name": "trace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4133,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4134,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4135,
					"name": "run",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 73,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4136,
							"name": "run",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4137,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4138,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4139,
					"name": "end",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 77,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 4140,
							"name": "end",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4141,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4142,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4143,
					"name": "initiateLogger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 81,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 4144,
							"name": "initiateLogger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4089,
								"name": "Winston"
							}
						}
					]
				},
				{
					"id": 4145,
					"name": "parseMessage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 125,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 4146,
							"name": "parseMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4147,
									"name": "level",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4068,
										"name": "LogLevels"
									}
								},
								{
									"id": 4148,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 4149,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 4150,
									"name": "format",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 4084,
												"name": "LoggerFormat"
											}
										],
										"name": "Partial",
										"qualifiedName": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4151,
					"name": "logColoring",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/logger.ts",
							"line": 129,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 4152,
							"name": "logColoring",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4153,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4084,
										"name": "LoggerFormat"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4092,
						4097
					]
				},
				{
					"title": "Constructors",
					"children": [
						4093
					]
				},
				{
					"title": "Methods",
					"children": [
						4098,
						4103,
						4107,
						4111,
						4115,
						4119,
						4123,
						4127,
						4131,
						4135,
						4139,
						4143,
						4145,
						4151
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/logger.ts",
					"line": 13,
					"character": 13
				}
			]
		},
		{
			"id": 4050,
			"name": "pipeProcessThroughListr",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-listr.ts",
					"line": 5,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 4051,
					"name": "pipeProcessThroughListr",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 4052,
							"name": "task",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TaskWrapper",
								"qualifiedName": "TaskWrapper",
								"package": "listr2"
							}
						},
						{
							"id": 4053,
							"name": "instance",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ExecaChildProcess",
								"qualifiedName": "execa.ExecaChildProcess",
								"package": "execa"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "ExecaChildProcess",
						"qualifiedName": "execa.ExecaChildProcess",
						"package": "execa"
					}
				}
			]
		},
		{
			"id": 4059,
			"name": "PipeProcessToLoggerOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 4060,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Will log the command when the process starts."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 4068,
						"name": "LogLevels"
					}
				},
				{
					"id": 4061,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Will log the command when the process ends."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 4068,
						"name": "LogLevels"
					}
				},
				{
					"id": 4062,
					"name": "stdout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "enable/disable stdout"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 4068,
						"name": "LogLevels"
					}
				},
				{
					"id": 4063,
					"name": "stderr",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "enable/disable stderrr"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 4068,
						"name": "LogLevels"
					}
				},
				{
					"id": 4064,
					"name": "callback",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4065,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
									"line": 13,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 4066,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "will callback on error in the instance"
											}
										]
									},
									"parameters": [
										{
											"id": 4067,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4060,
						4061,
						4062,
						4063,
						4064
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 4054,
			"name": "pipeProcessToLogger",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.ts",
					"line": 11,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 4055,
					"name": "pipeProcessToLogger",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Given the instance it will pipe process output through the logger to append prefixes such as the application name."
							}
						]
					},
					"parameters": [
						{
							"id": 4056,
							"name": "logger",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4091,
								"name": "Logger"
							}
						},
						{
							"id": 4057,
							"name": "instance",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ExecaChildProcess",
								"qualifiedName": "execa.ExecaChildProcess",
								"package": "execa"
							}
						},
						{
							"id": 4058,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 4059,
								"name": "PipeProcessToLoggerOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "ExecaChildProcess",
						"qualifiedName": "execa.ExecaChildProcess",
						"package": "execa"
					}
				}
			]
		},
		{
			"id": 4170,
			"name": "MergeStrategy",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 4171,
					"name": "OVERWRITE",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/merge.constants.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "OVERWRITE"
					}
				},
				{
					"id": 4172,
					"name": "EXTEND",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils/merge.constants.ts",
							"line": 3,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "EXTEND"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						4171,
						4172
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/utils/merge.constants.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 4173,
			"name": "merge",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/common/src/utils/merge.ts",
					"line": 7,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 4174,
					"name": "merge",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Merge objects deep from overwriting the properties from source to target.\nDoes not mutate the object"
							}
						]
					},
					"typeParameter": [
						{
							"id": 4175,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "PropertyKey",
												"qualifiedName": "PropertyKey",
												"package": "typescript"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"qualifiedName": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 4176,
							"name": "strategy",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4170,
								"name": "MergeStrategy"
							}
						},
						{
							"id": 4177,
							"name": "target",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4175,
								"name": "T"
							}
						},
						{
							"id": 4178,
							"name": "source",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 4175,
											"name": "T"
										}
									],
									"name": "Partial",
									"qualifiedName": "Partial",
									"package": "typescript"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 4175,
						"name": "T"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Properties",
			"children": [
				344
			]
		},
		{
			"title": "Namespaces",
			"children": [
				407
			]
		},
		{
			"title": "Functions",
			"children": [
				4167,
				285,
				294,
				4048,
				4155,
				4159,
				4163,
				4050,
				4054,
				4173
			]
		},
		{
			"title": "Classes",
			"children": [
				1,
				138,
				317,
				321,
				345,
				3954,
				4000,
				4012,
				4029,
				4091
			]
		},
		{
			"title": "Enumerations",
			"children": [
				283,
				4068,
				4078,
				4170
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				303,
				308,
				3942,
				4089
			]
		},
		{
			"title": "Interfaces",
			"children": [
				312,
				3938,
				3943,
				3950,
				4026,
				4081,
				4084,
				4059
			]
		},
		{
			"title": "Variables",
			"children": [
				4154,
				4090
			]
		}
	],
	"sources": [
		{
			"fileName": "packages/common/src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}