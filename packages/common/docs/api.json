{
  "id": 0,
  "name": "@cenk1cenk2/oclif-common",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 446,
      "name": "figures",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExternal": true
      },
      "sources": [
        {
          "fileName": "node_modules/figures/index.d.ts",
          "line": 63,
          "character": 14
        }
      ],
      "signatures": [
        {
          "id": 447,
          "name": "figures",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Replace Unicode symbols depending on the OS."
              }
            ],
            "blockTags": [
              {
                "tag": "@returns",
                "content": [
                  {
                    "kind": "text",
                    "text": "The input with replaced fallback Unicode symbols on Windows."
                  }
                ]
              },
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```\nimport figures = require('figures');\n\nconsole.log(figures('✔︎ check'));\n// On non-Windows OSes:  ✔︎ check\n// On Windows:           √ check\n\nconsole.log(figures.tick);\n// On non-Windows OSes:  ✔︎\n// On Windows:           √\n```"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 448,
              "name": "string",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "String where the Unicode symbols will be replaced with fallback symbols depending on the OS."
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ]
    },
    {
      "id": 1,
      "name": "Command",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 75,
          "name": "argv",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 9,
              "character": 4
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.argv"
          }
        },
        {
          "id": 76,
          "name": "config",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 10,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "name": "Config",
            "qualifiedName": "Config",
            "package": "@oclif/core"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.config"
          }
        },
        {
          "id": 2,
          "name": "_base",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 11,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand._base"
          }
        },
        {
          "id": 3,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A command ID, used mostly in error or verbose reporting."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 13,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.id"
          }
        },
        {
          "id": 4,
          "name": "summary",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The tweet-sized description for your class, used in a parent-commands\nsub-command listing and as the header for the command help."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 18,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.summary"
          }
        },
        {
          "id": 5,
          "name": "description",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A full description of how to use the command.\n\nIf no summary, the first line of the description will be used as the summary."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 24,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.description"
          }
        },
        {
          "id": 6,
          "name": "hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the command from help?"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 26,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.hidden"
          }
        },
        {
          "id": 7,
          "name": "state",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Mark the command as a given state (e.g. beta) in help?"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 28,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.state"
          }
        },
        {
          "id": 8,
          "name": "usage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "An override string (or strings) for the default usage documentation."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 32,
              "character": 11
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.usage"
          }
        },
        {
          "id": 9,
          "name": "help",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 33,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.help"
          }
        },
        {
          "id": 10,
          "name": "aliases",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "An array of aliases for this command."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 35,
              "character": 11
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.aliases"
          }
        },
        {
          "id": 11,
          "name": "strict",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "When set to false, allows a variable amount of arguments"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 37,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.strict"
          }
        },
        {
          "id": 12,
          "name": "parse",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 38,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.parse"
          }
        },
        {
          "id": 13,
          "name": "args",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "An order-dependent array of arguments for the command"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 40,
              "character": 11
            }
          ],
          "type": {
            "type": "reference",
            "name": "ArgInput",
            "qualifiedName": "ArgInput",
            "package": "@oclif/core"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.args"
          }
        },
        {
          "id": 14,
          "name": "plugin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 41,
              "character": 11
            }
          ],
          "type": {
            "type": "reference",
            "name": "Plugin",
            "qualifiedName": "Plugin",
            "package": "@oclif/core"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.plugin"
          }
        },
        {
          "id": 15,
          "name": "examples",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "An array of examples to show at the end of the command's help.\n\nIF only a string is provided, it will try to look for a line that starts\nwith the cmd.bin as the example command and the rest as the description.\nIf found, the command will be formatted appropriately.\n\n"
              },
              {
                "kind": "code",
                "text": "```\nEXAMPLES:\n  A description of a particular use case.\n\n    $ <%= config.bin => command flags\n```"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 56,
              "character": 11
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "Example",
              "qualifiedName": "Example",
              "package": "@oclif/core"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.examples"
          }
        },
        {
          "id": 16,
          "name": "parserOptions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 57,
              "character": 11
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 17,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {}
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.parserOptions"
          }
        },
        {
          "id": 18,
          "name": "_enableJsonFlag",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 58,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand._enableJsonFlag"
          }
        },
        {
          "id": 19,
          "name": "enableJsonFlag",
          "kind": 262144,
          "kindString": "Accessor",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 59,
              "character": 15
            },
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 60,
              "character": 15
            }
          ],
          "getSignature": {
            "id": 20,
            "name": "enableJsonFlag",
            "kind": 524288,
            "kindString": "Get signature",
            "flags": {
              "isExternal": true
            },
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "BaseCommand.enableJsonFlag"
            }
          },
          "setSignature": {
            "id": 21,
            "name": "enableJsonFlag",
            "kind": 1048576,
            "kindString": "Set signature",
            "flags": {
              "isExternal": true
            },
            "parameters": [
              {
                "id": 22,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isExternal": true
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "BaseCommand.enableJsonFlag"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.enableJsonFlag"
          }
        },
        {
          "id": 23,
          "name": "run",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 67,
              "character": 11
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 24,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/command.d.ts",
                  "line": 88,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 25,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "instantiate and run the command"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 26,
                      "name": "argv",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "argv"
                          }
                        ]
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    {
                      "id": 27,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "LoadOptions",
                        "qualifiedName": "LoadOptions",
                        "package": "@oclif/core"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "PromiseLike",
                    "qualifiedName": "PromiseLike",
                    "package": "typescript"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.run"
          }
        },
        {
          "id": 28,
          "name": "_globalFlags",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 68,
              "character": 21
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand._globalFlags"
          }
        },
        {
          "id": 29,
          "name": "globalFlags",
          "kind": 262144,
          "kindString": "Accessor",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 69,
              "character": 15
            },
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 70,
              "character": 15
            }
          ],
          "getSignature": {
            "id": 30,
            "name": "globalFlags",
            "kind": 524288,
            "kindString": "Get signature",
            "flags": {
              "isExternal": true
            },
            "type": {
              "type": "intrinsic",
              "name": "object"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "BaseCommand.globalFlags"
            }
          },
          "setSignature": {
            "id": 31,
            "name": "globalFlags",
            "kind": 1048576,
            "kindString": "Set signature",
            "flags": {
              "isExternal": true
            },
            "parameters": [
              {
                "id": 32,
                "name": "flags",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isExternal": true
                },
                "type": {
                  "type": "intrinsic",
                  "name": "object"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "BaseCommand.globalFlags"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.globalFlags"
          }
        },
        {
          "id": 33,
          "name": "_flags",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isStatic": true,
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A hash of flags for the command"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 72,
              "character": 21
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand._flags"
          }
        },
        {
          "id": 34,
          "name": "flags",
          "kind": 262144,
          "kindString": "Accessor",
          "flags": {
            "isStatic": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 73,
              "character": 15
            },
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 74,
              "character": 15
            }
          ],
          "getSignature": {
            "id": 35,
            "name": "flags",
            "kind": 524288,
            "kindString": "Get signature",
            "flags": {
              "isExternal": true
            },
            "type": {
              "type": "intrinsic",
              "name": "object"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "BaseCommand.flags"
            }
          },
          "setSignature": {
            "id": 36,
            "name": "flags",
            "kind": 1048576,
            "kindString": "Set signature",
            "flags": {
              "isExternal": true
            },
            "parameters": [
              {
                "id": 37,
                "name": "flags",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isExternal": true
                },
                "type": {
                  "type": "intrinsic",
                  "name": "object"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "BaseCommand.flags"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.flags"
          }
        },
        {
          "id": 77,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 75,
              "character": 4
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.id"
          }
        },
        {
          "id": 78,
          "name": "debug",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 76,
              "character": 14
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 79,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
                  "line": 76,
                  "character": 21
                }
              ],
              "signatures": [
                {
                  "id": 80,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 81,
                      "name": "args",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isRest": true
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.debug"
          }
        },
        {
          "id": 38,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 77,
              "character": 4
            }
          ],
          "signatures": [
            {
              "id": 39,
              "name": "new Command",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {
                "isExternal": true
              },
              "typeParameter": [
                {
                  "id": 40,
                  "name": "Ctx",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 41,
                  "name": "Config",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 158,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 41,
                        "name": "Config"
                      }
                    ],
                    "name": "BaseConfig"
                  },
                  "default": {
                    "type": "reference",
                    "id": 158,
                    "name": "BaseConfig"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 42,
                  "name": "argv",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                },
                {
                  "id": 43,
                  "name": "config",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "Config",
                    "qualifiedName": "Config",
                    "package": "@oclif/core"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 40,
                    "name": "Ctx"
                  },
                  {
                    "type": "reference",
                    "id": 41,
                    "name": "Config"
                  }
                ],
                "name": "Command"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.constructor"
          }
        },
        {
          "id": 82,
          "name": "ctor",
          "kind": 262144,
          "kindString": "Accessor",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 78,
              "character": 8
            }
          ],
          "getSignature": {
            "id": 83,
            "name": "ctor",
            "kind": 524288,
            "kindString": "Get signature",
            "flags": {
              "isExternal": true
            },
            "type": {
              "type": "query",
              "queryType": {
                "type": "reference",
                "name": "default",
                "qualifiedName": "Command",
                "package": "@oclif/core"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "BaseCommand.ctor"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.ctor"
          }
        },
        {
          "id": 84,
          "name": "_run",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 79,
              "character": 4
            }
          ],
          "signatures": [
            {
              "id": 85,
              "name": "_run",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "typeParameter": [
                {
                  "id": 86,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T",
                    "qualifiedName": "T",
                    "package": "@oclif/core"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand._run"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand._run"
          }
        },
        {
          "id": 87,
          "name": "exit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 80,
              "character": 4
            }
          ],
          "signatures": [
            {
              "id": 88,
              "name": "exit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 89,
                  "name": "code",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.exit"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.exit"
          }
        },
        {
          "id": 90,
          "name": "warn",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 81,
              "character": 4
            }
          ],
          "signatures": [
            {
              "id": 91,
              "name": "warn",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 92,
                  "name": "input",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Error",
                        "qualifiedName": "Error",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "name": "Error",
                    "qualifiedName": "Error",
                    "package": "typescript"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.warn"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.warn"
          }
        },
        {
          "id": 93,
          "name": "error",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 82,
              "character": 4
            },
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 86,
              "character": 4
            }
          ],
          "signatures": [
            {
              "id": 94,
              "name": "error",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 95,
                  "name": "input",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Error",
                        "qualifiedName": "Error",
                        "package": "typescript"
                      }
                    ]
                  }
                },
                {
                  "id": 96,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 97,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "children": [
                            {
                              "id": 98,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
                                  "line": 83,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 99,
                              "name": "exit",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
                                  "line": 84,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": false
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [98, 99]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
                              "line": 82,
                              "character": 42
                            }
                          ]
                        }
                      },
                      {
                        "type": "reference",
                        "name": "PrettyPrintableError",
                        "qualifiedName": "PrettyPrintableError",
                        "package": "@oclif/core"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.error"
              }
            },
            {
              "id": 100,
              "name": "error",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 101,
                  "name": "input",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Error",
                        "qualifiedName": "Error",
                        "package": "typescript"
                      }
                    ]
                  }
                },
                {
                  "id": 102,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 103,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "children": [
                            {
                              "id": 104,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
                                  "line": 87,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 105,
                              "name": "exit",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
                                  "line": 88,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [104, 105]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
                              "line": 86,
                              "character": 43
                            }
                          ]
                        }
                      },
                      {
                        "type": "reference",
                        "name": "PrettyPrintableError",
                        "qualifiedName": "PrettyPrintableError",
                        "package": "@oclif/core"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "never"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.error"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.error"
          }
        },
        {
          "id": 106,
          "name": "log",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 90,
              "character": 4
            }
          ],
          "signatures": [
            {
              "id": 107,
              "name": "log",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 108,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 109,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isRest": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.log"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.log"
          }
        },
        {
          "id": 110,
          "name": "logToStderr",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 91,
              "character": 4
            }
          ],
          "signatures": [
            {
              "id": 111,
              "name": "logToStderr",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 112,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 113,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isRest": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.logToStderr"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.logToStderr"
          }
        },
        {
          "id": 114,
          "name": "jsonEnabled",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 92,
              "character": 4
            }
          ],
          "signatures": [
            {
              "id": 115,
              "name": "jsonEnabled",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.jsonEnabled"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.jsonEnabled"
          }
        },
        {
          "id": 116,
          "name": "parse",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isProtected": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 98,
              "character": 14
            }
          ],
          "signatures": [
            {
              "id": 117,
              "name": "parse",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "typeParameter": [
                {
                  "id": 118,
                  "name": "F",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 119,
                  "name": "G",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  }
                },
                {
                  "id": 123,
                  "name": "A",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 120,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
                          "line": 98,
                          "character": 36
                        }
                      ],
                      "indexSignature": {
                        "id": 121,
                        "name": "__index",
                        "kind": 8192,
                        "kindString": "Index signature",
                        "flags": {
                          "isExternal": true
                        },
                        "parameters": [
                          {
                            "id": 122,
                            "name": "name",
                            "kind": 32768,
                            "flags": {
                              "isExternal": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 124,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 118,
                        "name": "F",
                        "qualifiedName": "F",
                        "package": "@oclif/core"
                      },
                      {
                        "type": "reference",
                        "id": 119,
                        "name": "G",
                        "qualifiedName": "G",
                        "package": "@oclif/core"
                      }
                    ],
                    "name": "Input",
                    "qualifiedName": "Input",
                    "package": "@oclif/core"
                  }
                },
                {
                  "id": 125,
                  "name": "argv",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 118,
                        "name": "F",
                        "qualifiedName": "F",
                        "package": "@oclif/core"
                      },
                      {
                        "type": "reference",
                        "id": 119,
                        "name": "G",
                        "qualifiedName": "G",
                        "package": "@oclif/core"
                      },
                      {
                        "type": "reference",
                        "id": 123,
                        "name": "A",
                        "qualifiedName": "A",
                        "package": "@oclif/core"
                      }
                    ],
                    "name": "ParserOutput",
                    "qualifiedName": "ParserOutput",
                    "package": "@oclif/core"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.parse"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.parse"
          }
        },
        {
          "id": 126,
          "name": "toSuccessJson",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isProtected": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 105,
              "character": 14
            }
          ],
          "signatures": [
            {
              "id": 127,
              "name": "toSuccessJson",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 128,
                  "name": "result",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.toSuccessJson"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.toSuccessJson"
          }
        },
        {
          "id": 129,
          "name": "toErrorJson",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isProtected": true,
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "packages/common/node_modules/@oclif/core/lib/command.d.ts",
              "line": 106,
              "character": 14
            }
          ],
          "signatures": [
            {
              "id": 130,
              "name": "toErrorJson",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 131,
                  "name": "err",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseCommand.toErrorJson"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseCommand.toErrorJson"
          }
        },
        {
          "id": 44,
          "name": "logger",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 14,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "id": 374,
            "name": "Logger"
          }
        },
        {
          "id": 45,
          "name": "tasks",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 15,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 40,
                "name": "Ctx"
              },
              {
                "type": "literal",
                "value": "default"
              },
              {
                "type": "literal",
                "value": "verbose"
              }
            ],
            "name": "Manager",
            "qualifiedName": "Manager",
            "package": "listr2"
          }
        },
        {
          "id": 46,
          "name": "validator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 16,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "id": 312,
            "name": "ValidatorService"
          }
        },
        {
          "id": 47,
          "name": "isSilent",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 17,
              "character": 9
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 48,
          "name": "isDebug",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 18,
              "character": 9
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 49,
          "name": "cs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 19,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "id": 162,
            "typeArguments": [
              {
                "type": "reference",
                "id": 41,
                "name": "Config"
              }
            ],
            "name": "ConfigService"
          }
        },
        {
          "id": 50,
          "name": "parser",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 20,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "name": "ParserService"
          }
        },
        {
          "id": 51,
          "name": "run",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 24,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 52,
              "name": "run",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Every command needs to implement run for running the command itself."
                  }
                ]
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              },
              "overwrites": {
                "type": "reference",
                "name": "BaseCommand.run"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "BaseCommand.run"
          }
        },
        {
          "id": 53,
          "name": "init",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 30,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 54,
              "name": "init",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Initial functions / constructor"
                  }
                ]
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              },
              "overwrites": {
                "type": "reference",
                "name": "BaseCommand.init"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "BaseCommand.init"
          }
        },
        {
          "id": 55,
          "name": "shouldRunBefore",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 77,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 56,
              "name": "shouldRunBefore",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Construct the class if you dont want to extend init or constructor."
                  }
                ]
              },
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "qualifiedName": "Promise",
                    "package": "typescript"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 57,
          "name": "shouldRunAfter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 83,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 58,
              "name": "shouldRunAfter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Deconstruct the class if you dont want to extend finally or catch."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 59,
                  "name": "_ctx",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 40,
                    "name": "Ctx"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "qualifiedName": "Promise",
                    "package": "typescript"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 60,
          "name": "runTasks",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 86,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 61,
              "name": "runTasks",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Run all tasks from task manager."
                  }
                ]
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 40,
                    "name": "Ctx"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 62,
          "name": "finally",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 99,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 63,
              "name": "finally",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Tasks to run before end of the command."
                  }
                ]
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 64,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 65,
                          "name": "ctx",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/common/src/commands/base.command.ts",
                              "line": 99,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 40,
                            "name": "Ctx"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [65]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/common/src/commands/base.command.ts",
                          "line": 99,
                          "character": 35
                        }
                      ]
                    }
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              },
              "overwrites": {
                "type": "reference",
                "name": "BaseCommand.finally"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "BaseCommand.finally"
          }
        },
        {
          "id": 66,
          "name": "catch",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 110,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 67,
              "name": "catch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Catch any error occurred during command."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 68,
                  "name": "e",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Error",
                    "qualifiedName": "Error",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              },
              "overwrites": {
                "type": "reference",
                "name": "BaseCommand.catch"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "BaseCommand.catch"
          }
        },
        {
          "id": 69,
          "name": "prompt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 119,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 70,
              "name": "prompt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Gets prompt from user."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 71,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 72,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "PromptOptions",
                    "qualifiedName": "PromptOptions",
                    "package": "listr2"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 71,
                    "name": "T"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 73,
          "name": "greet",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/commands/base.command.ts",
              "line": 134,
              "character": 10
            }
          ],
          "signatures": [
            {
              "id": 74,
              "name": "greet",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [75, 76, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 23, 28, 33, 77, 78, 44, 45, 46, 47, 48, 49, 50]
        },
        {
          "title": "Accessors",
          "children": [19, 29, 34, 82]
        },
        {
          "title": "Constructors",
          "children": [38]
        },
        {
          "title": "Methods",
          "children": [84, 87, 90, 93, 106, 110, 114, 116, 126, 129, 51, 53, 55, 57, 60, 62, 66, 69, 73]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/commands/base.command.ts",
          "line": 13,
          "character": 13
        }
      ],
      "typeParameters": [
        {
          "id": 132,
          "name": "Ctx",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "ListrContext",
            "qualifiedName": "ListrContext",
            "package": "listr2"
          },
          "default": {
            "type": "reference",
            "name": "ListrContext",
            "qualifiedName": "ListrContext",
            "package": "listr2"
          }
        },
        {
          "id": 133,
          "name": "Config",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "id": 158,
            "name": "BaseConfig"
          },
          "default": {
            "type": "reference",
            "id": 158,
            "name": "BaseConfig"
          }
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "default",
          "qualifiedName": "Command",
          "package": "@oclif/core"
        }
      ]
    },
    {
      "id": 134,
      "name": "FileConstants",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 135,
          "name": "CONFIG_SERVICE_DEFAULTS_DIR",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/constants/file.constants.ts",
              "line": 2,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "defaults"
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [135]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/constants/file.constants.ts",
          "line": 1,
          "character": 12
        }
      ]
    },
    {
      "id": 136,
      "name": "notFoundHook",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/hooks/not-found.hook.ts",
          "line": 6,
          "character": 13
        }
      ],
      "signatures": [
        {
          "id": 137,
          "name": "notFoundHook",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 138,
              "name": "this",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "Context",
                "qualifiedName": "Hook.Context",
                "package": "@oclif/core"
              }
            },
            {
              "id": 139,
              "name": "options",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 140,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 141,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
                              "line": 48,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 142,
                          "name": "argv",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
                              "line": 49,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [141, 142]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
                          "line": 47,
                          "character": 17
                        }
                      ]
                    }
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 143,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 144,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
                              "line": 76,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "Config",
                            "qualifiedName": "Config",
                            "package": "@oclif/core"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [144]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/common/node_modules/@oclif/core/lib/interfaces/hooks.d.ts",
                          "line": 75,
                          "character": 119
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Promise",
            "qualifiedName": "Promise",
            "package": "typescript"
          }
        }
      ]
    },
    {
      "id": 145,
      "name": "ClassType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/interfaces/class.interface.ts",
          "line": 1,
          "character": 12
        }
      ],
      "typeParameters": [
        {
          "id": 149,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 146,
          "name": "__type",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/interfaces/class.interface.ts",
              "line": 1,
              "character": 27
            }
          ],
          "signatures": [
            {
              "id": 147,
              "name": "__type",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 148,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 149,
                "name": "T"
              }
            }
          ]
        }
      }
    },
    {
      "id": 150,
      "name": "ConfigCommandChoices",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/interfaces/config-command.interface.ts",
          "line": 3,
          "character": 12
        }
      ],
      "typeParameters": [
        {
          "id": 153,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "type": {
        "type": "reference",
        "typeArguments": [
          {
            "type": "reference",
            "id": 153,
            "name": "T"
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 151,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/common/src/interfaces/config-command.interface.ts",
                  "line": 3,
                  "character": 63
                }
              ],
              "signatures": [
                {
                  "id": 152,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "name": "Promise",
                        "qualifiedName": "Promise",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "name": "Record",
        "qualifiedName": "Record",
        "package": "typescript"
      }
    },
    {
      "id": 154,
      "name": "ConfigCommandSetup",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 155,
          "name": "choices",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/interfaces/config-command.interface.ts",
              "line": 6,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 150,
            "typeArguments": [
              {
                "type": "reference",
                "id": 157,
                "name": "T"
              }
            ],
            "name": "ConfigCommandChoices"
          }
        },
        {
          "id": 156,
          "name": "locker",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/interfaces/config-command.interface.ts",
              "line": 7,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 240,
            "name": "LockerService"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [155, 156]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/interfaces/config-command.interface.ts",
          "line": 5,
          "character": 17
        }
      ],
      "typeParameters": [
        {
          "id": 157,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ]
    },
    {
      "id": 158,
      "name": "BaseConfig",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 159,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 160,
              "name": "new BaseConfig",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 158,
                "name": "BaseConfig"
              }
            }
          ]
        },
        {
          "id": 161,
          "name": "loglevel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.interface.ts",
              "line": 9,
              "character": 4
            }
          ],
          "type": {
            "type": "reference",
            "id": 351,
            "name": "LogLevels"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [159]
        },
        {
          "title": "Properties",
          "children": [161]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/config/config.interface.ts",
          "line": 6,
          "character": 13
        }
      ]
    },
    {
      "id": 162,
      "name": "ConfigService",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 163,
          "name": "instance",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 14,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "id": 162,
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "any"
              }
            ],
            "name": "ConfigService"
          }
        },
        {
          "id": 168,
          "name": "config",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 15,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "id": 166,
            "name": "Config"
          }
        },
        {
          "id": 169,
          "name": "command",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 16,
              "character": 9
            }
          ],
          "type": {
            "type": "query",
            "queryType": {
              "type": "reference",
              "name": "default",
              "qualifiedName": "Command",
              "package": "@oclif/core"
            }
          }
        },
        {
          "id": 170,
          "name": "oclif",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 17,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "name": "Config",
            "qualifiedName": "Config",
            "package": "@oclif/core"
          }
        },
        {
          "id": 171,
          "name": "defaults",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 18,
              "character": 9
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "..."
        },
        {
          "id": 172,
          "name": "dir",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 19,
              "character": 9
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "..."
        },
        {
          "id": 173,
          "name": "parser",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 20,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "name": "ParserService"
          }
        },
        {
          "id": 174,
          "name": "logger",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 21,
              "character": 19
            }
          ],
          "type": {
            "type": "reference",
            "id": 374,
            "name": "Logger"
          }
        },
        {
          "id": 164,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 23,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 165,
              "name": "new ConfigService",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 166,
                  "name": "Config",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 158,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 166,
                        "name": "Config"
                      }
                    ],
                    "name": "BaseConfig"
                  },
                  "default": {
                    "type": "reference",
                    "id": 158,
                    "name": "BaseConfig"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 167,
                  "name": "command",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      {
                        "type": "reference",
                        "id": 166,
                        "name": "Config"
                      }
                    ],
                    "name": "Command"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 162,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Config"
                  }
                ],
                "name": "ConfigService"
              }
            }
          ]
        },
        {
          "id": 175,
          "name": "read",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 42,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 176,
              "name": "read",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 177,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 178,
                  "name": "strategy",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 449,
                    "name": "MergeStrategy"
                  }
                },
                {
                  "id": 179,
                  "name": "paths",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 177,
                    "name": "T"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 180,
          "name": "write",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/config/config.service.ts",
              "line": 52,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 181,
              "name": "write",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 182,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 183,
                  "name": "path",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 184,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 182,
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [163, 168, 169, 170, 171, 172, 173, 174]
        },
        {
          "title": "Constructors",
          "children": [164]
        },
        {
          "title": "Methods",
          "children": [175, 180]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/config/config.service.ts",
          "line": 13,
          "character": 13
        }
      ],
      "typeParameters": [
        {
          "id": 185,
          "name": "Config",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "id": 158,
            "name": "BaseConfig"
          },
          "default": {
            "type": "reference",
            "id": 158,
            "name": "BaseConfig"
          }
        }
      ]
    },
    {
      "id": 186,
      "name": "FileSystemService",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 187,
          "name": "instance",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 7,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "id": 186,
            "name": "FileSystemService"
          }
        },
        {
          "id": 190,
          "name": "logger",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 8,
              "character": 19
            }
          ],
          "type": {
            "type": "reference",
            "id": 374,
            "name": "Logger"
          },
          "defaultValue": "..."
        },
        {
          "id": 188,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 10,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 189,
              "name": "new FileSystemService",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 186,
                "name": "FileSystemService"
              }
            }
          ]
        },
        {
          "id": 191,
          "name": "exists",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 20,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 192,
              "name": "exists",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 193,
                  "name": "path",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "id": 194,
          "name": "stats",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 24,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 195,
              "name": "stats",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 196,
                  "name": "path",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Stats",
                "qualifiedName": "Stats",
                "package": "@types/node"
              }
            }
          ]
        },
        {
          "id": 197,
          "name": "dirname",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 28,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 198,
              "name": "dirname",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 199,
                  "name": "path",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 200,
          "name": "extname",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 32,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 201,
              "name": "extname",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 202,
                  "name": "path",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 203,
          "name": "read",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 36,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 204,
              "name": "read",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 205,
                  "name": "file",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 206,
          "name": "write",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 48,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 207,
              "name": "write",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 208,
                  "name": "file",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 209,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 210,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "WriteFileOptions",
                    "qualifiedName": "WriteFileOptions",
                    "package": "@types/fs-extra"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 211,
          "name": "append",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 58,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 212,
              "name": "append",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 213,
                  "name": "file",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 214,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 215,
          "name": "remove",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 68,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 216,
              "name": "remove",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 217,
                  "name": "file",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 218,
          "name": "removeFile",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 80,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 219,
              "name": "removeFile",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 220,
                  "name": "file",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 221,
          "name": "removeDirectory",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
              "line": 94,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 222,
              "name": "removeDirectory",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 223,
                  "name": "directory",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [187, 190]
        },
        {
          "title": "Constructors",
          "children": [188]
        },
        {
          "title": "Methods",
          "children": [191, 194, 197, 200, 203, 206, 211, 215, 218, 221]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/fs/filesystem.service.ts",
          "line": 6,
          "character": 13
        }
      ]
    },
    {
      "id": 224,
      "name": "CommonLockerData",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 225,
          "name": "path",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 4,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 226,
          "name": "enabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 5,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 227,
          "name": "root",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 6,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [225, 226, 227]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/locker/locker.interface.ts",
          "line": 3,
          "character": 17
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 229,
          "name": "LockData"
        },
        {
          "type": "reference",
          "id": 236,
          "name": "UnlockData"
        }
      ]
    },
    {
      "id": 228,
      "name": "LockableData",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/lib/locker/locker.interface.ts",
          "line": 9,
          "character": 12
        }
      ],
      "type": {
        "type": "intrinsic",
        "name": "any"
      }
    },
    {
      "id": 229,
      "name": "LockData",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 232,
          "name": "path",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 4,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 225,
            "name": "CommonLockerData.path"
          }
        },
        {
          "id": 233,
          "name": "enabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 5,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 226,
            "name": "CommonLockerData.enabled"
          }
        },
        {
          "id": 234,
          "name": "root",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 6,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 227,
            "name": "CommonLockerData.root"
          }
        },
        {
          "id": 230,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 12,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 235,
            "name": "T"
          }
        },
        {
          "id": 231,
          "name": "merge",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 13,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 449,
            "name": "MergeStrategy"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [232, 233, 234, 230, 231]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/locker/locker.interface.ts",
          "line": 11,
          "character": 17
        }
      ],
      "typeParameters": [
        {
          "id": 235,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "id": 228,
            "name": "LockableData"
          },
          "default": {
            "type": "reference",
            "id": 228,
            "name": "LockableData"
          }
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 224,
          "name": "CommonLockerData"
        }
      ]
    },
    {
      "id": 236,
      "name": "UnlockData",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 237,
          "name": "path",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 4,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 225,
            "name": "CommonLockerData.path"
          }
        },
        {
          "id": 238,
          "name": "enabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 5,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 226,
            "name": "CommonLockerData.enabled"
          }
        },
        {
          "id": 239,
          "name": "root",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.interface.ts",
              "line": 6,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 227,
            "name": "CommonLockerData.root"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [237, 238, 239]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/locker/locker.interface.ts",
          "line": 16,
          "character": 17
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 224,
          "name": "CommonLockerData"
        }
      ]
    },
    {
      "id": 240,
      "name": "LockerService",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 246,
          "name": "toLock",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 10,
              "character": 10
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 229,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "LockData"
            }
          },
          "defaultValue": "[]"
        },
        {
          "id": 247,
          "name": "toUnlock",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 11,
              "character": 10
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 236,
              "name": "UnlockData"
            }
          },
          "defaultValue": "[]"
        },
        {
          "id": 248,
          "name": "logger",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 12,
              "character": 19
            }
          ],
          "type": {
            "type": "reference",
            "id": 374,
            "name": "Logger"
          },
          "defaultValue": "..."
        },
        {
          "id": 249,
          "name": "fs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 13,
              "character": 19
            }
          ],
          "type": {
            "type": "reference",
            "id": 186,
            "name": "FileSystemService"
          },
          "defaultValue": "..."
        },
        {
          "id": 241,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 15,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 242,
              "name": "new LockerService",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 243,
                  "name": "file",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 244,
                  "name": "parser",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 283,
                    "name": "GenericParser"
                  }
                },
                {
                  "id": 245,
                  "name": "root",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 240,
                "name": "LockerService"
              }
            }
          ]
        },
        {
          "id": 250,
          "name": "hasLock",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 17,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 251,
              "name": "hasLock",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "id": 252,
          "name": "hasUnlock",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 21,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 253,
              "name": "hasUnlock",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "id": 254,
          "name": "addLock",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 25,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 255,
              "name": "addLock",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 256,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 257,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 229,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 256,
                            "name": "T"
                          }
                        ],
                        "name": "LockData"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 229,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 256,
                              "name": "T"
                            }
                          ],
                          "name": "LockData"
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 258,
          "name": "addUnlock",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 29,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 259,
              "name": "addUnlock",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 260,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 236,
                        "name": "UnlockData"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 236,
                          "name": "UnlockData"
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 261,
          "name": "lockAll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 33,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 262,
              "name": "lockAll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 263,
          "name": "unlockAll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 41,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 264,
              "name": "unlockAll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 265,
          "name": "lock",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 49,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 266,
              "name": "lock",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 267,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 268,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 229,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 267,
                            "name": "T"
                          }
                        ],
                        "name": "LockData"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 229,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 267,
                              "name": "T"
                            }
                          ],
                          "name": "LockData"
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 269,
          "name": "unlock",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 96,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 270,
              "name": "unlock",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 271,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 236,
                        "name": "UnlockData"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 236,
                          "name": "UnlockData"
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 272,
          "name": "read",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 137,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 273,
              "name": "read",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 274,
                  "name": "LockFile",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 274,
                    "name": "LockFile"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 275,
          "name": "write",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 141,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 276,
              "name": "write",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 277,
                  "name": "LockFile",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 278,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 277,
                    "name": "LockFile"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 279,
          "name": "buildPath",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/locker/locker.service.ts",
              "line": 145,
              "character": 10
            }
          ],
          "signatures": [
            {
              "id": 280,
              "name": "buildPath",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 281,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 224,
                    "name": "CommonLockerData"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 282,
                  "name": "d",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 281,
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [246, 247, 248, 249]
        },
        {
          "title": "Constructors",
          "children": [241]
        },
        {
          "title": "Methods",
          "children": [250, 252, 254, 258, 261, 263, 265, 269, 272, 275, 279]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/locker/locker.service.ts",
          "line": 9,
          "character": 13
        }
      ]
    },
    {
      "id": 283,
      "name": "GenericParser",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 284,
          "name": "extensions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/parser/parser.interface.ts",
              "line": 2,
              "character": 9
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        },
        {
          "id": 285,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 286,
              "name": "new GenericParser",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 283,
                "name": "GenericParser"
              }
            }
          ]
        },
        {
          "id": 287,
          "name": "parse",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/parser/parser.interface.ts",
              "line": 3,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 288,
              "name": "parse",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 289,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 290,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 289,
                    "name": "T"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 289,
                        "name": "T"
                      }
                    ],
                    "name": "Promise",
                    "qualifiedName": "Promise",
                    "package": "typescript"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 291,
          "name": "stringify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/parser/parser.interface.ts",
              "line": 4,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 292,
              "name": "stringify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 293,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 294,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 293,
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "name": "Promise",
                    "qualifiedName": "Promise",
                    "package": "typescript"
                  }
                ]
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [284]
        },
        {
          "title": "Constructors",
          "children": [285]
        },
        {
          "title": "Methods",
          "children": [287, 291]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/parser/parser.interface.ts",
          "line": 1,
          "character": 21
        }
      ],
      "implementedBy": [
        {
          "type": "reference",
          "id": 295,
          "name": "YamlParser"
        }
      ]
    },
    {
      "id": 295,
      "name": "YamlParser",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 296,
          "name": "extensions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
              "line": 7,
              "character": 9
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          "defaultValue": "...",
          "implementationOf": {
            "type": "reference",
            "id": 284,
            "name": "GenericParser.extensions"
          }
        },
        {
          "id": 297,
          "name": "instance",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
              "line": 8,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "id": 295,
            "name": "YamlParser"
          }
        },
        {
          "id": 300,
          "name": "logger",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
              "line": 9,
              "character": 19
            }
          ],
          "type": {
            "type": "reference",
            "id": 374,
            "name": "Logger"
          },
          "defaultValue": "..."
        },
        {
          "id": 298,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
              "line": 11,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 299,
              "name": "new YamlParser",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 295,
                "name": "YamlParser"
              }
            }
          ],
          "implementationOf": {
            "type": "reference",
            "id": 285,
            "name": "GenericParser.constructor"
          }
        },
        {
          "id": 301,
          "name": "parse",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
              "line": 21,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 302,
              "name": "parse",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 303,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 304,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 303,
                "name": "T"
              },
              "implementationOf": {
                "type": "reference",
                "id": 288,
                "name": "GenericParser.parse"
              }
            }
          ],
          "implementationOf": {
            "type": "reference",
            "id": 287,
            "name": "GenericParser.parse"
          }
        },
        {
          "id": 305,
          "name": "stringify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
              "line": 31,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 306,
              "name": "stringify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 307,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 308,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 307,
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "id": 292,
                "name": "GenericParser.stringify"
              }
            }
          ],
          "implementationOf": {
            "type": "reference",
            "id": 291,
            "name": "GenericParser.stringify"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [296, 297, 300]
        },
        {
          "title": "Constructors",
          "children": [298]
        },
        {
          "title": "Methods",
          "children": [301, 305]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/parser/yaml-parser.service.ts",
          "line": 6,
          "character": 13
        }
      ],
      "implementedTypes": [
        {
          "type": "reference",
          "id": 283,
          "name": "GenericParser"
        }
      ]
    },
    {
      "id": 331,
      "name": "setup",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/lib/run.ts",
          "line": 1,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 332,
          "name": "setup",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        }
      ]
    },
    {
      "id": 309,
      "name": "ValidatorServiceOptions",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 310,
          "name": "validator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/validator/validator.interface.ts",
              "line": 5,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "name": "ValidatorOptions",
            "qualifiedName": "ValidatorOptions",
            "package": "class-validator"
          }
        },
        {
          "id": 311,
          "name": "transformer",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/validator/validator.interface.ts",
              "line": 6,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "name": "ClassTransformOptions",
            "qualifiedName": "ClassTransformOptions",
            "package": "class-transformer"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [310, 311]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/validator/validator.interface.ts",
          "line": 4,
          "character": 17
        }
      ]
    },
    {
      "id": 312,
      "name": "ValidatorService",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 316,
          "name": "logger",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/validator/validator.service.ts",
              "line": 10,
              "character": 19
            }
          ],
          "type": {
            "type": "reference",
            "id": 374,
            "name": "Logger"
          },
          "defaultValue": "..."
        },
        {
          "id": 313,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/lib/validator/validator.service.ts",
              "line": 12,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 314,
              "name": "new ValidatorService",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 315,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 309,
                    "name": "ValidatorServiceOptions"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 312,
                "name": "ValidatorService"
              }
            }
          ]
        },
        {
          "id": 317,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/validator/validator.service.ts",
              "line": 12,
              "character": 22
            }
          ],
          "type": {
            "type": "reference",
            "id": 309,
            "name": "ValidatorServiceOptions"
          }
        },
        {
          "id": 318,
          "name": "validate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/validator/validator.service.ts",
              "line": 25,
              "character": 15
            }
          ],
          "signatures": [
            {
              "id": 319,
              "name": "validate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 320,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "PropertyKey",
                        "qualifiedName": "PropertyKey",
                        "package": "typescript"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 321,
                  "name": "classType",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 145,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 320,
                        "name": "T"
                      }
                    ],
                    "name": "ClassType"
                  }
                },
                {
                  "id": 322,
                  "name": "object",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 320,
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 320,
                    "name": "T"
                  }
                ],
                "name": "Promise",
                "qualifiedName": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 323,
          "name": "validateSync",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/validator/validator.service.ts",
              "line": 41,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 324,
              "name": "validateSync",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 325,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "PropertyKey",
                        "qualifiedName": "PropertyKey",
                        "package": "typescript"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 326,
                  "name": "classType",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 145,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 325,
                        "name": "T"
                      }
                    ],
                    "name": "ClassType"
                  }
                },
                {
                  "id": 327,
                  "name": "object",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 325,
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 325,
                "name": "T"
              }
            }
          ]
        },
        {
          "id": 328,
          "name": "logValidationError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/lib/validator/validator.service.ts",
              "line": 57,
              "character": 10
            }
          ],
          "signatures": [
            {
              "id": 329,
              "name": "logValidationError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 330,
                  "name": "err",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ValidationError",
                    "qualifiedName": "ValidationError",
                    "package": "class-validator"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [316, 317]
        },
        {
          "title": "Constructors",
          "children": [313]
        },
        {
          "title": "Methods",
          "children": [318, 323, 328]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/lib/validator/validator.service.ts",
          "line": 9,
          "character": 13
        }
      ]
    },
    {
      "id": 437,
      "name": "color",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "packages/common/src/utils/color.ts",
          "line": 3,
          "character": 6
        }
      ],
      "type": {
        "type": "reference",
        "name": "Colorette",
        "qualifiedName": "Colorette",
        "package": "colorette"
      },
      "defaultValue": "..."
    },
    {
      "id": 438,
      "name": "isDebug",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/utils/environment.ts",
          "line": 4,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 439,
          "name": "isDebug",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "typeParameter": [
            {
              "id": 440,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 158,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 440,
                    "name": "T"
                  }
                ],
                "name": "BaseConfig"
              },
              "default": {
                "type": "reference",
                "id": 158,
                "name": "BaseConfig"
              }
            }
          ],
          "parameters": [
            {
              "id": 441,
              "name": "config",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 440,
                "name": "T"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ]
    },
    {
      "id": 442,
      "name": "isSilent",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/utils/environment.ts",
          "line": 8,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 443,
          "name": "isSilent",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "typeParameter": [
            {
              "id": 444,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 158,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 444,
                    "name": "T"
                  }
                ],
                "name": "BaseConfig"
              },
              "default": {
                "type": "reference",
                "id": 158,
                "name": "BaseConfig"
              }
            }
          ],
          "parameters": [
            {
              "id": 445,
              "name": "config",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 444,
                "name": "T"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ]
    },
    {
      "id": 351,
      "name": "LogLevels",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 352,
          "name": "SILENT",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 2,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "SILENT"
          }
        },
        {
          "id": 353,
          "name": "DIRECT",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 3,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "DIRECT"
          }
        },
        {
          "id": 354,
          "name": "FATAL",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 4,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "FATAL"
          }
        },
        {
          "id": 355,
          "name": "ERROR",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 5,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "ERROR"
          }
        },
        {
          "id": 356,
          "name": "WARN",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 6,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "WARN"
          }
        },
        {
          "id": 357,
          "name": "INFO",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 7,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "INFO"
          }
        },
        {
          "id": 358,
          "name": "VERBOSE",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 8,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "VERBOSE"
          }
        },
        {
          "id": 359,
          "name": "DEBUG",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 9,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "DEBUG"
          }
        },
        {
          "id": 360,
          "name": "TRACE",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 10,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "TRACE"
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [352, 353, 354, 355, 356, 357, 358, 359, 360]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/logger.constants.ts",
          "line": 1,
          "character": 12
        }
      ]
    },
    {
      "id": 361,
      "name": "LogFieldStatus",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 362,
          "name": "RUN",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 14,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "RUN"
          }
        },
        {
          "id": 363,
          "name": "END",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.constants.ts",
              "line": 15,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "END"
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [362, 363]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/logger.constants.ts",
          "line": 13,
          "character": 12
        }
      ]
    },
    {
      "id": 364,
      "name": "LoggerOptions",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 365,
          "name": "useIcons",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.interface.ts",
              "line": 6,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 366,
          "name": "level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.interface.ts",
              "line": 7,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 351,
            "name": "LogLevels"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [365, 366]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/logger.interface.ts",
          "line": 5,
          "character": 17
        }
      ]
    },
    {
      "id": 367,
      "name": "LoggerFormat",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 368,
          "name": "level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.interface.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 351,
            "name": "LogLevels"
          }
        },
        {
          "id": 369,
          "name": "message",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.interface.ts",
              "line": 12,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 370,
          "name": "context",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.interface.ts",
              "line": 13,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 371,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.interface.ts",
              "line": 14,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [368, 369, 370, 371]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/logger.interface.ts",
          "line": 10,
          "character": 17
        }
      ]
    },
    {
      "id": 372,
      "name": "Winston",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/logger.interface.ts",
          "line": 17,
          "character": 12
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reference",
            "name": "WinstonLogger",
            "qualifiedName": "winston.Logger",
            "package": "winston"
          },
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "typeOperator",
                "operator": "keyof",
                "target": {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 351,
                    "name": "LogLevels"
                  }
                }
              },
              {
                "type": "reference",
                "name": "LeveledLogMethod",
                "qualifiedName": "winston.LeveledLogMethod",
                "package": "winston"
              }
            ],
            "name": "Record",
            "qualifiedName": "Record",
            "package": "typescript"
          }
        ]
      }
    },
    {
      "id": 373,
      "name": "WINSTON_INSTANCE",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/logger.interface.ts",
          "line": 19,
          "character": 13
        }
      ],
      "type": {
        "type": "literal",
        "value": "WINSTON_DEFAULT_LOGGER"
      },
      "defaultValue": "'WINSTON_DEFAULT_LOGGER'"
    },
    {
      "id": 374,
      "name": "Logger",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "A general logger for the the CLI applications."
          }
        ]
      },
      "children": [
        {
          "id": 375,
          "name": "instance",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 14,
              "character": 9
            }
          ],
          "type": {
            "type": "reference",
            "id": 372,
            "name": "Winston"
          }
        },
        {
          "id": 380,
          "name": "logger",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 15,
              "character": 10
            }
          ],
          "type": {
            "type": "reference",
            "id": 372,
            "name": "Winston"
          }
        },
        {
          "id": 376,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 17,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 377,
              "name": "new Logger",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 378,
                  "name": "context",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 379,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 364,
                    "name": "LoggerOptions"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 374,
                "name": "Logger"
              }
            }
          ]
        },
        {
          "id": 381,
          "name": "log",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 36,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 382,
              "name": "log",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 383,
                  "name": "level",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 351,
                    "name": "LogLevels"
                  }
                },
                {
                  "id": 384,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 385,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 386,
          "name": "direct",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 40,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 387,
              "name": "direct",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 388,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 389,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 390,
          "name": "fatal",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 44,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 391,
              "name": "fatal",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 392,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 393,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 394,
          "name": "error",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 48,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 395,
              "name": "error",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 396,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 397,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 398,
          "name": "warn",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 52,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 399,
              "name": "warn",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 400,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 401,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 402,
          "name": "info",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 56,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 403,
              "name": "info",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 404,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 405,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 406,
          "name": "debug",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 60,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 407,
              "name": "debug",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 408,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 409,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 410,
          "name": "verbose",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 64,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 411,
              "name": "verbose",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 412,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 413,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 414,
          "name": "trace",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 68,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 415,
              "name": "trace",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 416,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 417,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 418,
          "name": "run",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 73,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 419,
              "name": "run",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 420,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 421,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 422,
          "name": "end",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPublic": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 77,
              "character": 9
            }
          ],
          "signatures": [
            {
              "id": 423,
              "name": "end",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 424,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 425,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 426,
          "name": "initiateLogger",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 81,
              "character": 10
            }
          ],
          "signatures": [
            {
              "id": 427,
              "name": "initiateLogger",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 372,
                "name": "Winston"
              }
            }
          ]
        },
        {
          "id": 428,
          "name": "parseMessage",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 125,
              "character": 10
            }
          ],
          "signatures": [
            {
              "id": 429,
              "name": "parseMessage",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 430,
                  "name": "level",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 351,
                    "name": "LogLevels"
                  }
                },
                {
                  "id": 431,
                  "name": "data",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Buffer",
                        "qualifiedName": "global.Buffer",
                        "package": "@types/node"
                      }
                    ]
                  }
                },
                {
                  "id": 432,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                },
                {
                  "id": 433,
                  "name": "format",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 367,
                        "name": "LoggerFormat"
                      }
                    ],
                    "name": "Partial",
                    "qualifiedName": "Partial",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 434,
          "name": "logColoring",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/logger.ts",
              "line": 129,
              "character": 10
            }
          ],
          "signatures": [
            {
              "id": 435,
              "name": "logColoring",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 436,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 367,
                    "name": "LoggerFormat"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [375, 380]
        },
        {
          "title": "Constructors",
          "children": [376]
        },
        {
          "title": "Methods",
          "children": [381, 386, 390, 394, 398, 402, 406, 410, 414, 418, 422, 426, 428, 434]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/logger.ts",
          "line": 13,
          "character": 13
        }
      ]
    },
    {
      "id": 333,
      "name": "pipeProcessThroughListr",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-listr.ts",
          "line": 5,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 334,
          "name": "pipeProcessThroughListr",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 335,
              "name": "task",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "TaskWrapper",
                "qualifiedName": "TaskWrapper",
                "package": "listr2"
              }
            },
            {
              "id": 336,
              "name": "instance",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "ExecaChildProcess",
                "qualifiedName": "ExecaChildProcess",
                "package": "execa"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "ExecaChildProcess",
            "qualifiedName": "ExecaChildProcess",
            "package": "execa"
          }
        }
      ]
    },
    {
      "id": 342,
      "name": "PipeProcessToLoggerOptions",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 343,
          "name": "start",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Will log the command when the process starts."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
              "line": 5,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 351,
            "name": "LogLevels"
          }
        },
        {
          "id": 344,
          "name": "end",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Will log the command when the process ends."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
              "line": 7,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 351,
            "name": "LogLevels"
          }
        },
        {
          "id": 345,
          "name": "stdout",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "enable/disable stdout"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
              "line": 9,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 351,
            "name": "LogLevels"
          }
        },
        {
          "id": 346,
          "name": "stderr",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "enable/disable stderrr"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 351,
            "name": "LogLevels"
          }
        },
        {
          "id": 347,
          "name": "callback",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
              "line": 13,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 348,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
                  "line": 13,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 349,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "will callback on error in the instance"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 350,
                      "name": "error",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "Error",
                        "qualifiedName": "Error",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [343, 344, 345, 346, 347]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.interface.ts",
          "line": 3,
          "character": 17
        }
      ]
    },
    {
      "id": 337,
      "name": "pipeProcessToLogger",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/utils/logger/pipe/pipe-process-to-logger.ts",
          "line": 11,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 338,
          "name": "pipeProcessToLogger",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Given the instance it will pipe process output through the logger to append prefixes such as the application name."
              }
            ]
          },
          "parameters": [
            {
              "id": 339,
              "name": "logger",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 374,
                "name": "Logger"
              }
            },
            {
              "id": 340,
              "name": "instance",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "ExecaChildProcess",
                "qualifiedName": "ExecaChildProcess",
                "package": "execa"
              }
            },
            {
              "id": 341,
              "name": "options",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "reference",
                "id": 342,
                "name": "PipeProcessToLoggerOptions"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "ExecaChildProcess",
            "qualifiedName": "ExecaChildProcess",
            "package": "execa"
          }
        }
      ]
    },
    {
      "id": 449,
      "name": "MergeStrategy",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 450,
          "name": "OVERWRITE",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/merge.constants.ts",
              "line": 2,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "OVERWRITE"
          }
        },
        {
          "id": 451,
          "name": "EXTEND",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/common/src/utils/merge.constants.ts",
              "line": 3,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": "EXTEND"
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [450, 451]
        }
      ],
      "sources": [
        {
          "fileName": "packages/common/src/utils/merge.constants.ts",
          "line": 1,
          "character": 12
        }
      ]
    },
    {
      "id": 452,
      "name": "merge",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "packages/common/src/utils/merge.ts",
          "line": 7,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 453,
          "name": "merge",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Merge objects deep from overwriting the properties from source to target.\nDoes not mutate the object"
              }
            ]
          },
          "typeParameter": [
            {
              "id": 454,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "PropertyKey",
                        "qualifiedName": "PropertyKey",
                        "package": "typescript"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                ]
              }
            }
          ],
          "parameters": [
            {
              "id": 455,
              "name": "strategy",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 449,
                "name": "MergeStrategy"
              }
            },
            {
              "id": 456,
              "name": "target",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 454,
                "name": "T"
              }
            },
            {
              "id": 457,
              "name": "source",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isRest": true
              },
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 454,
                      "name": "T"
                    }
                  ],
                  "name": "Partial",
                  "qualifiedName": "Partial",
                  "package": "typescript"
                }
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 454,
            "name": "T"
          }
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Functions",
      "children": [446, 136, 331, 438, 442, 333, 337, 452]
    },
    {
      "title": "Classes",
      "children": [1, 158, 162, 186, 240, 283, 295, 312, 374]
    },
    {
      "title": "Enumerations",
      "children": [134, 351, 361, 449]
    },
    {
      "title": "Type Aliases",
      "children": [145, 150, 228, 372]
    },
    {
      "title": "Interfaces",
      "children": [154, 224, 229, 236, 309, 364, 367, 342]
    },
    {
      "title": "Variables",
      "children": [437, 373]
    }
  ],
  "sources": [
    {
      "fileName": "packages/common/src/index.ts",
      "line": 1,
      "character": 0
    }
  ]
}
